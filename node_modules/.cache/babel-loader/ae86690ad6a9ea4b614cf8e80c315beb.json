{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/modules/assets/subforms/CollectiblesSubForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { Table, Button, Card, Row, Col } from 'reactstrap';\n\nimport { Form, Button, Row, Col, Input, Select, Radio, Icon, DatePicker } from \"antd\";\nimport Currency from \"../../../../components/form/Currency\";\nimport { COLLECTIBLE_TYPES, COLLECTIBLE_SUB_TYPES } from \"constants/types\";\nimport moment from \"moment\";\nimport Items from \"../../../../components/organizer/assets/collectibles/items/items\";\nvar Option = Select.Option;\nvar dateFormat = \"MM/DD/YYYY\";\nvar formID = \"CollectiblesSubForm\";\nvar CollectiblesSubForm = /*#__PURE__*/function (_Component) {\n  _inherits(CollectiblesSubForm, _Component);\n  _createClass(CollectiblesSubForm, null, [{\n    key: \"FnCreateFormData\",\n    value: function FnCreateFormData(data) {\n      var formData = {\n        title: \"Collectibles\",\n        fields: [{\n          id: \"description\",\n          title: \"Describe Collectible\",\n          value: data[\"description\"]\n        }, {\n          id: \"collectibleType\",\n          title: \"Type of Collectible\",\n          value: data[\"collectibleType\"]\n        }, {\n          id: \"year\",\n          title: \"Year\",\n          value: data[\"year\"]\n        }, {\n          id: \"make\",\n          title: \"Make\",\n          value: data[\"make\"]\n        }, {\n          id: \"model\",\n          title: \"Model\",\n          value: data[\"model\"]\n        }, {\n          id: \"purchasePrice\",\n          title: \"Purchase Price\",\n          value: data[\"purchasePrice\"],\n          type: \"currency\"\n        }, {\n          id: \"monthlyBudget\",\n          title: \"$ applied to Monthly Budget\",\n          value: data[\"monthlyBudget\"],\n          type: \"currency\"\n        }, {\n          id: \"appraised\",\n          title: \"Appraised\",\n          value: data[\"appraised\"]\n        }, {\n          id: \"insured\",\n          title: \"Insured\",\n          value: data[\"insured\"]\n        }]\n      };\n      return formData;\n    }\n  }]);\n  function CollectiblesSubForm(props) {\n    var _this;\n    _classCallCheck(this, CollectiblesSubForm);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CollectiblesSubForm).call(this, props));\n    _this.state = {\n      showDatePicker: false,\n      enableNext: false,\n      formData: {\n        dateOfApproval: \"\",\n        year: \"\",\n        description: \"\",\n        monthlyBudget: \"\",\n        collectibleType: \"\",\n        model: \"\",\n        make: \"\",\n        purchasePrice: \"\",\n        appraised: \"\",\n        insured: \"\"\n      }\n    };\n    _this.goNextForm = _this.goNextForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateFormData = _this.updateFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormInputChange = _this.handleFormInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDatePickerChange = _this.handleDatePickerChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(CollectiblesSubForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateFormData(this.props.subFormData);\n    }\n  }, {\n    key: \"updateFormData\",\n    value: function updateFormData(newFormData) {\n      var formData = this.state.formData;\n      if (newFormData.hasOwnProperty(\"fields\")) {\n        for (var findex = 0; findex < newFormData.fields.length; findex++) {\n          if (newFormData.fields[findex][\"id\"] == \"year\") {\n            formData[\"year\"] = newFormData.fields[findex][\"value\"];\n          }\n          if (newFormData.fields[findex][\"id\"] == \"description\") {\n            formData[\"description\"] = newFormData.fields[findex][\"value\"];\n          }\n          if (newFormData.fields[findex][\"id\"] == \"monthlyBudget\") {\n            formData[\"monthlyBudget\"] = newFormData.fields[findex][\"value\"];\n          }\n          if (newFormData.fields[findex][\"id\"] == \"collectibleType\") {\n            formData[\"collectibleType\"] = newFormData.fields[findex][\"value\"];\n          }\n          if (newFormData.fields[findex][\"id\"] == \"model\") {\n            formData[\"model\"] = newFormData.fields[findex][\"value\"];\n          }\n          if (newFormData.fields[findex][\"id\"] == \"make\") {\n            formData[\"make\"] = newFormData.fields[findex][\"value\"];\n          }\n          if (newFormData.fields[findex][\"id\"] == \"purchasePrice\") {\n            formData[\"purchasePrice\"] = newFormData.fields[findex][\"value\"];\n          }\n          if (newFormData.fields[findex][\"id\"] == \"appraised\") {\n            formData[\"appraised\"] = newFormData.fields[findex][\"value\"];\n          }\n          if (newFormData.fields[findex][\"id\"] == \"insured\") {\n            formData[\"insured\"] = newFormData.fields[findex][\"value\"];\n          }\n        }\n        var enableNext = false;\n        if (formData[\"year\"] != \"\" && formData[\"description\"] != \"\" && formData[\"monthlyBudget\"] != \"\" && formData[\"collectibleType\"] != \"\" && formData[\"model\"] != \"\" && formData[\"make\"] != \"\" && formData[\"purchasePrice\"] != \"\" && formData[\"appraised\"] != \"\" && formData[\"insured\"] != \"\") {\n          enableNext = true;\n        }\n        this.setState({\n          formData: formData,\n          enableNext: enableNext\n        });\n      }\n    }\n  }, {\n    key: \"handleFormInputChange\",\n    value: function handleFormInputChange(name, value) {\n      var formData = this.state.formData;\n      formData[name] = value;\n      var newState = {\n        formData: formData\n      };\n      if (formData[\"year\"] != \"\" && formData[\"description\"] != \"\" && formData[\"monthlyBudget\"] != \"\" && formData[\"collectibleType\"] != \"\" && formData[\"model\"] != \"\" && formData[\"make\"] != \"\" && formData[\"purchasePrice\"] != \"\" && formData[\"appraised\"] != \"\" && formData[\"insured\"] != \"\") {\n        newState[\"enableNext\"] = true;\n      } else {\n        newState[\"enableNext\"] = false;\n      }\n      this.setState(newState);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      if (event.target.name == \"appraised\") {\n        if (event.target.value == \"Yes\") {\n          this.setState({\n            showDatePicker: true\n          });\n        } else {\n          this.setState({\n            showDatePicker: false\n          });\n        }\n      }\n      event.preventDefault();\n      var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n      this.handleFormInputChange(name, value);\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(name, value) {\n      this.handleFormInputChange(name, value);\n    }\n  }, {\n    key: \"handleDatePickerChange\",\n    value: function handleDatePickerChange(name, date, dateString) {\n      this.handleFormInputChange(name, dateString);\n    }\n  }, {\n    key: \"goNextForm\",\n    value: function goNextForm() {\n      var bEnd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this.state.enableNext) {\n        return;\n      }\n      var formData = CollectiblesSubForm.FnCreateFormData({\n        year: this.state.formData[\"year\"],\n        description: this.state.formData[\"description\"],\n        monthlyBudget: this.state.formData[\"monthlyBudget\"],\n        collectibleType: this.state.formData[\"collectibleType\"],\n        model: this.state.formData[\"model\"],\n        make: this.state.formData[\"make\"],\n        purchasePrice: this.state.formData[\"purchasePrice\"],\n        appraised: this.state.formData[\"appraised\"],\n        insured: this.state.formData[\"insured\"]\n      });\n      this.props.cbUpdateSubForm(formID, formData, true, bEnd);\n      if (!bEnd) {\n        // this.props.cbGoSubForm(\"AssetPerformanceSubForm\");\n        this.props.cbGoNext(formID);\n      }\n    }\n  }, {\n    key: \"goPreviousForm\",\n    value: function goPreviousForm() {\n      // this.props.cbGoSubForm(\"StepQuestionContributionDistributionSubForm\");\n      this.props.cbGoPrev(formID);\n    }\n  }, {\n    key: \"getDatePicker\",\n    value: function getDatePicker() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Date of Approval\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        placeholder: \"Select Date\",\n        style: {\n          width: \"100%\"\n        },\n        format: dateFormat,\n        onChange: function onChange(date, dateString) {\n          return _this2.handleDatePickerChange(\"dateOfApproval\", date, dateString);\n        },\n        value: this.state.formData.dateOfApproval == \"\" ? null : moment(this.state.formData.dateOfApproval, dateFormat),\n        size: \"large\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var collectible_types = [\"Art\", \"Classic Car\", \"Clothing\", \"Guns, Knives, Swords, Armor\", \"Memorabilia\"];\n      var showDatePicker = this.state;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Items, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return CollectiblesSubForm;\n}(Component);\nexport default connect()(CollectiblesSubForm);","map":{"version":3,"names":["React","Component","connect","Form","Button","Row","Col","Input","Select","Radio","Icon","DatePicker","Currency","COLLECTIBLE_TYPES","COLLECTIBLE_SUB_TYPES","moment","Items","Option","dateFormat","formID","CollectiblesSubForm","data","formData","title","fields","id","value","type","props","state","showDatePicker","enableNext","dateOfApproval","year","description","monthlyBudget","collectibleType","model","make","purchasePrice","appraised","insured","goNextForm","bind","updateFormData","handleFormInputChange","handleInputChange","handleDatePickerChange","handleSelectChange","subFormData","newFormData","hasOwnProperty","findex","length","setState","name","newState","event","target","preventDefault","date","dateString","bEnd","FnCreateFormData","cbUpdateSubForm","cbGoNext","cbGoPrev","width","collectible_types"],"sources":["/home/albatross/gitCode/shared/src/pages/modules/assets/subforms/CollectiblesSubForm.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// import { Table, Button, Card, Row, Col } from 'reactstrap';\n\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  Input,\n  Select,\n  Radio,\n  Icon,\n  DatePicker,\n} from \"antd\";\n\nimport Currency from \"../../../../components/form/Currency\";\nimport { COLLECTIBLE_TYPES, COLLECTIBLE_SUB_TYPES } from \"constants/types\";\nimport moment from \"moment\";\nimport Items from \"../../../../components/organizer/assets/collectibles/items/items\";\nconst { Option } = Select;\nconst dateFormat = \"MM/DD/YYYY\";\nconst formID = \"CollectiblesSubForm\";\nclass CollectiblesSubForm extends Component {\n  static FnCreateFormData(data) {\n    let formData = {\n      title: \"Collectibles\",\n      fields: [\n        {\n          id: \"description\",\n          title: \"Describe Collectible\",\n          value: data[\"description\"],\n        },\n        {\n          id: \"collectibleType\",\n          title: \"Type of Collectible\",\n          value: data[\"collectibleType\"],\n        },\n        {\n          id: \"year\",\n          title: \"Year\",\n          value: data[\"year\"],\n        },\n        {\n          id: \"make\",\n          title: \"Make\",\n          value: data[\"make\"],\n        },\n        {\n          id: \"model\",\n          title: \"Model\",\n          value: data[\"model\"],\n        },\n        {\n          id: \"purchasePrice\",\n          title: \"Purchase Price\",\n          value: data[\"purchasePrice\"],\n          type: \"currency\",\n        },\n        {\n          id: \"monthlyBudget\",\n          title: \"$ applied to Monthly Budget\",\n          value: data[\"monthlyBudget\"],\n          type: \"currency\",\n        },\n        {\n          id: \"appraised\",\n          title: \"Appraised\",\n          value: data[\"appraised\"],\n        },\n        {\n          id: \"insured\",\n          title: \"Insured\",\n          value: data[\"insured\"],\n        },\n      ],\n    };\n\n    return formData;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showDatePicker: false,\n      enableNext: false,\n      formData: {\n        dateOfApproval: \"\",\n        year: \"\",\n        description: \"\",\n        monthlyBudget: \"\",\n        collectibleType: \"\",\n        model: \"\",\n        make: \"\",\n        purchasePrice: \"\",\n        appraised: \"\",\n        insured: \"\",\n      },\n    };\n\n    this.goNextForm = this.goNextForm.bind(this);\n    this.updateFormData = this.updateFormData.bind(this);\n\n    this.handleFormInputChange = this.handleFormInputChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateFormData(this.props.subFormData);\n  }\n\n  updateFormData(newFormData) {\n    let formData = this.state.formData;\n    if (newFormData.hasOwnProperty(\"fields\")) {\n      for (var findex = 0; findex < newFormData.fields.length; findex++) {\n        if (newFormData.fields[findex][\"id\"] == \"year\") {\n          formData[\"year\"] = newFormData.fields[findex][\"value\"];\n        }\n        if (newFormData.fields[findex][\"id\"] == \"description\") {\n          formData[\"description\"] = newFormData.fields[findex][\"value\"];\n        }\n        if (newFormData.fields[findex][\"id\"] == \"monthlyBudget\") {\n          formData[\"monthlyBudget\"] = newFormData.fields[findex][\"value\"];\n        }\n        if (newFormData.fields[findex][\"id\"] == \"collectibleType\") {\n          formData[\"collectibleType\"] = newFormData.fields[findex][\"value\"];\n        }\n        if (newFormData.fields[findex][\"id\"] == \"model\") {\n          formData[\"model\"] = newFormData.fields[findex][\"value\"];\n        }\n        if (newFormData.fields[findex][\"id\"] == \"make\") {\n          formData[\"make\"] = newFormData.fields[findex][\"value\"];\n        }\n        if (newFormData.fields[findex][\"id\"] == \"purchasePrice\") {\n          formData[\"purchasePrice\"] = newFormData.fields[findex][\"value\"];\n        }\n        if (newFormData.fields[findex][\"id\"] == \"appraised\") {\n          formData[\"appraised\"] = newFormData.fields[findex][\"value\"];\n        }\n        if (newFormData.fields[findex][\"id\"] == \"insured\") {\n          formData[\"insured\"] = newFormData.fields[findex][\"value\"];\n        }\n      }\n\n      let enableNext = false;\n      if (\n        formData[\"year\"] != \"\" &&\n        formData[\"description\"] != \"\" &&\n        formData[\"monthlyBudget\"] != \"\" &&\n        formData[\"collectibleType\"] != \"\" &&\n        formData[\"model\"] != \"\" &&\n        formData[\"make\"] != \"\" &&\n        formData[\"purchasePrice\"] != \"\" &&\n        formData[\"appraised\"] != \"\" &&\n        formData[\"insured\"] != \"\"\n      ) {\n        enableNext = true;\n      }\n\n      this.setState({\n        formData: formData,\n        enableNext: enableNext,\n      });\n    }\n  }\n\n  handleFormInputChange(name, value) {\n    let formData = this.state.formData;\n    formData[name] = value;\n\n    let newState = {\n      formData: formData,\n    };\n\n    if (\n      formData[\"year\"] != \"\" &&\n      formData[\"description\"] != \"\" &&\n      formData[\"monthlyBudget\"] != \"\" &&\n      formData[\"collectibleType\"] != \"\" &&\n      formData[\"model\"] != \"\" &&\n      formData[\"make\"] != \"\" &&\n      formData[\"purchasePrice\"] != \"\" &&\n      formData[\"appraised\"] != \"\" &&\n      formData[\"insured\"] != \"\"\n    ) {\n      newState[\"enableNext\"] = true;\n    } else {\n      newState[\"enableNext\"] = false;\n    }\n\n    this.setState(newState);\n  }\n\n  handleInputChange(event) {\n    if (event.target.name == \"appraised\") {\n      if (event.target.value == \"Yes\") {\n        this.setState({\n          showDatePicker: true,\n        });\n      } else {\n        this.setState({\n          showDatePicker: false,\n        });\n      }\n    }\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.handleFormInputChange(name, value);\n  }\n\n  handleSelectChange(name, value) {\n    this.handleFormInputChange(name, value);\n  }\n\n  handleDatePickerChange(name, date, dateString) {\n    this.handleFormInputChange(name, dateString);\n  }\n\n  goNextForm(bEnd = false) {\n    if (!this.state.enableNext) {\n      return;\n    }\n\n    let formData = CollectiblesSubForm.FnCreateFormData({\n      year: this.state.formData[\"year\"],\n      description: this.state.formData[\"description\"],\n      monthlyBudget: this.state.formData[\"monthlyBudget\"],\n      collectibleType: this.state.formData[\"collectibleType\"],\n      model: this.state.formData[\"model\"],\n      make: this.state.formData[\"make\"],\n      purchasePrice: this.state.formData[\"purchasePrice\"],\n      appraised: this.state.formData[\"appraised\"],\n      insured: this.state.formData[\"insured\"],\n    });\n\n    this.props.cbUpdateSubForm(formID, formData, true, bEnd);\n\n    if (!bEnd) {\n      // this.props.cbGoSubForm(\"AssetPerformanceSubForm\");\n      this.props.cbGoNext(formID);\n    }\n  }\n\n  goPreviousForm() {\n    // this.props.cbGoSubForm(\"StepQuestionContributionDistributionSubForm\");\n    this.props.cbGoPrev(formID);\n  }\n  getDatePicker() {\n    return (\n      <Row gutter={16} type=\"flex\" justify=\"center\">\n        <Col span={16}>\n          <Form.Item label=\"Date of Approval\">\n            <DatePicker\n              placeholder=\"Select Date\"\n              style={{ width: \"100%\" }}\n              format={dateFormat}\n              onChange={(date, dateString) =>\n                this.handleDatePickerChange(\"dateOfApproval\", date, dateString)\n              }\n              value={\n                this.state.formData.dateOfApproval == \"\"\n                  ? null\n                  : moment(this.state.formData.dateOfApproval, dateFormat)\n              }\n              size={\"large\"}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n    );\n  }\n  render() {\n    const collectible_types = [\n      \"Art\",\n      \"Classic Car\",\n      \"Clothing\",\n      \"Guns, Knives, Swords, Armor\",\n      \"Memorabilia\",\n    ];\n\n    const showDatePicker = this.state;\n    return (\n      <React.Fragment>\n        <Items />\n        {/* <div className=\"info-form-block\">\n          <Row gutter={16}>\n            <Col span={24}>\n              <h2 className=\"text-center font-weight-bold mb-4\">\n                Collectibles\n              </h2>\n            </Col>\n          </Row>\n\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"Type of Collectible\">\n                <Select\n                  showSearch\n                  placeholder=\"-Select-\"\n                  value={this.state.formData.collectibleType}\n                  onChange={(value) =>\n                    this.handleSelectChange(\"collectibleType\", value)\n                  }\n                  size={\"large\"}\n                >\n                  {COLLECTIBLE_TYPES.map((collectible_type, index) => (\n                    <Option key={index} value={collectible_type}>\n                      {collectible_type}\n                    </Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n          {(this.state.formData.collectibleType == \"Art\" ||\n            this.state.formData.collectibleType == \"Clothing\" ||\n            this.state.formData.collectibleType == \"Memorabilia\" ||\n            this.state.formData.collectibleType == \"Metals and Jewelry\") && (\n            <Row gutter={16} type=\"flex\" justify=\"center\">\n              <Col span={16}>\n                <Form.Item\n                  label={\"Type of \" + this.state.formData.collectibleType}\n                >\n                  <Select\n                    showSearch\n                    placeholder=\"-Select-\"\n                    value={this.state.formData.collectibleSubType}\n                    onChange={(value) =>\n                      this.handleSelectChange(\"collectibleSubType\", value)\n                    }\n                    size={\"large\"}\n                  >\n                    {COLLECTIBLE_SUB_TYPES[\n                      this.state.formData.collectibleType\n                    ].map((collectible_sub_type, index) => (\n                      <Option key={index} value={collectible_sub_type}>\n                        {collectible_sub_type}\n                      </Option>\n                    ))}\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n          )}\n\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"Describe Collectible\">\n                <Input\n                  value={this.state.formData.description}\n                  size={\"large\"}\n                  name=\"description\"\n                  onChange={(event) => this.handleInputChange(event)}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"Purchase Price\">\n                <Currency\n                  value={this.state.formData.purchasePrice}\n                  name=\"purchasePrice\"\n                  onChange={(event) => this.handleInputChange(event)}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"$ applied to Monthly Budget\">\n                <Currency\n                  value={\n                    this.state.formData.monthlyBudget\n                      ? this.state.formData.monthlyBudget\n                      : null\n                  }\n                  name=\"monthlyBudget\"\n                  onChange={(event) => this.handleInputChange(event)}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"Year\">\n                <Input\n                  value={this.state.formData.year}\n                  name=\"year\"\n                  size={\"large\"}\n                  onChange={(event) => this.handleInputChange(event)}\n                ></Input>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"Make\">\n                <Input\n                  value={this.state.formData.make}\n                  size={\"large\"}\n                  name=\"make\"\n                  onChange={(event) => this.handleInputChange(event)}\n                ></Input>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"Model\">\n                <Input\n                  value={this.state.formData.model}\n                  size={\"large\"}\n                  name=\"model\"\n                  onChange={(event) => this.handleInputChange(event)}\n                ></Input>\n              </Form.Item>\n            </Col>\n          </Row>\n\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"Appraised\">\n                <Radio.Group\n                  name=\"appraised\"\n                  size={\"large\"}\n                  onChange={(event) => this.handleInputChange(event)}\n                  value={this.state.formData.appraised}\n                >\n                  <Radio.Button value=\"Yes\">Yes</Radio.Button>\n                  <Radio.Button value=\"No\">No</Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n          </Row>\n          {this.state.showDatePicker ? this.getDatePicker() : null}\n          <Row gutter={16} type=\"flex\" justify=\"center\">\n            <Col span={16}>\n              <Form.Item label=\"Insured\">\n                <Radio.Group\n                  name=\"insured\"\n                  size={\"large\"}\n                  onChange={(event) => this.handleInputChange(event)}\n                  value={this.state.formData.insured}\n                >\n                  <Radio.Button value=\"Yes\">Yes</Radio.Button>\n                  <Radio.Button value=\"No\">No</Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n          </Row>\n        </div>\n        <div className=\"row justify-content-between\">\n          <div className=\"col-8\">\n            <Button\n              type=\"primary\"\n              size={\"large\"}\n              onClick={() => this.goPreviousForm()}\n            >\n              <Icon type=\"left\" />\n              Previous\n            </Button>\n          </div>\n          <div className=\"col-4 d-flex justify-content-end\">\n            <Button\n              type=\"primary\"\n              disabled={!this.state.enableNext}\n              size={\"large\"}\n              onClick={() => this.goNextForm()}\n            >\n              Next\n              <Icon type=\"right\" />\n            </Button>\n          </div>\n        </div> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect()(CollectiblesSubForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}