{"ast":null,"code":"import _defineProperty from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/auth/Login.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { Component, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n// import { Container, Row, Col, Card, CardBody, Label, FormGroup, Button, Alert } from 'reactstrap';\nimport { AvForm, AvField, AvGroup, AvInput, AvFeedback } from \"availity-reactstrap-validation\";\nimport { loginUser } from \"../../redux/actions\";\nimport { isUserAuthenticated } from \"../../helpers/authUtils\";\nimport Loader from \"../../components/Loader\";\nimport logo from \"../../assets/images/logo-dark.png\";\nimport { Button } from \"../../components/button/Button\";\nimport { Input } from \"../../components/input/Input\";\nimport { InputGroup } from \"../../components/inputGroup/InputGroup\";\nimport Base64 from \"../../utils/base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { postLoginUser } from \"../../redux/login/actions\";\nimport { postLoginUser, loginSelector } from \"../../redux/slices/loginSlice\";\nimport \"./Login.css\";\nimport Dashboard from \"../Dashboard\";\nfunction Login() {\n  var userLoginToken = localStorage.getItem(\"userLoginToken\");\n  var _useState = useState(userLoginToken),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1]; // useEffect(() => {\n  //   if (token) {\n  //     history.push('/dashboard')\n  //     }\n  // }, []);\n  var assetPlanetClientName = \"asset_planet_resource\";\n  var assetPlanetClientPassword = \"a_p_creds\";\n  var basicCreds = Base64.btoa(assetPlanetClientName + \":\" + assetPlanetClientPassword);\n  var config = {\n    headers: {\n      \"Content-type\": \"Application/json\",\n      Authorization: \"Basic \" + basicCreds\n    }\n  };\n  var user = useSelector(function (state) {\n    return state.rootReducer.loginUser;\n  });\n  var dispatch = useDispatch();\n\n  // const loginUser = useSelector(loginSelector);\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUserName = _useState6[1];\n  var _useState7 = useState({}),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userData = _useState8[0],\n    setUserData = _useState8[1];\n  var history = useHistory();\n  var handleKeyPress = function handleKeyPress(event) {\n    if (event.key === \"Enter\") {\n      if (document.getElementById(\"username\").value.length === 0) {\n        setUserName(true);\n      } else {\n        setUserName(false);\n      }\n      if (document.getElementById(\"password\").value.length === 0) {\n        setPassword(true);\n      } else {\n        setPassword(false);\n      }\n      if (document.getElementById(\"username\").value.length === 0 || document.getElementById(\"password\").value.length === 0) {} else {\n        dispatch(postLoginUser(userData, config, history));\n      }\n    }\n  };\n  var handleLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (document.getElementById(\"username\").value.length === 0) {\n              setUserName(true);\n            } else {\n              setUserName(false);\n            }\n            if (document.getElementById(\"password\").value.length === 0) {\n              setPassword(true);\n            } else {\n              setPassword(false);\n            }\n            if (document.getElementById(\"username\").value.length === 0 || document.getElementById(\"password\").value.length === 0) {} else {\n              dispatch(postLoginUser(userData, config, history));\n            }\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return token ? /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-card border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"login-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange(e) {\n      setUserData(_objectSpread({}, userData, _defineProperty({}, e.target.name, e.target.value)));\n    },\n    id: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange(e) {\n      setUserData(_objectSpread({}, userData, _defineProperty({}, e.target.name, e.target.value)));\n    },\n    onKeyPress: handleKeyPress,\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  })), password && username ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\",\n      textAlign: \"left\",\n      paddingBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Please enter Username and Password\") : username ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\",\n      textAlign: \"left\",\n      paddingBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Please enter Username\", \" \") : password ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\",\n      textAlign: \"left\",\n      paddingBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Please enter Password\", \" \") : user.loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: _defineProperty({\n      paddingBottom: \"20px\"\n    }, \"paddingBottom\", \"20px\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Loading.....\") : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: \"red\",\n      paddingBottom: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, user.error), /*#__PURE__*/React.createElement(Button, {\n    onClick: function onClick() {\n      handleLogin();\n    },\n    disabled: user.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n}\nexport default Login;\n\n// <div style={{ marginTop: \"20px\" }}>\n// {/* <div style={{padding:\"50px\",background:\"black\",overflow:\"hidden\"}}>hellow</div> */}\n// <div className=\"login-card border\">\n//   <h2 className=\"login-heading\">Login</h2>\n//   <div>\n//     <InputGroup>\n//       <label>Username</label>\n//       <Input\n//         onChange={(e) => {\n//           setUserData({ ...userData, [e.target.name]: e.target.value });\n//         }}\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         name=\"username\"\n//       ></Input>\n//     </InputGroup>\n\n//     <InputGroup>\n//       <label>Password</label>\n//       <Input\n//         onChange={(e) => {\n//           setUserData({ ...userData, [e.target.name]: e.target.value });\n//         }}\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         name=\"password\"\n//       ></Input>\n//     </InputGroup>\n\n//     {user.loading ? (\n//       <div style={{ paddingBottom: \"15px\" }}>Loading.....</div>\n//     ) : (\n//       <div style={{ color: \"red\", paddingBottom: \"15px\" }}>\n//         {user.error}\n//       </div>\n//     )}\n\n//     <Button\n//       onClick={() => {\n//         handleLogin();\n//       }}\n//       disabled={user.loading}\n//     >\n//       Login\n//     </Button>\n//   </div>\n// </div>\n// </div>\n\n// ========== Login using class based component =============\n\n// class Login extends Component {\n//     _isMounted = false;\n\n//     constructor(props) {\n//         super(props);\n\n//         this.handleValidSubmit = this.handleValidSubmit.bind(this);\n//         this.state = {\n//             username: 'test',\n//             password: 'test'\n//         }\n//     }\n\n//     // componentDidMount() {\n//     //     this._isMounted = true;\n//     //     document.body.classList.add('authentication-bg');\n//     // }\n\n//     // componentWillUnmount() {\n//     //     this._isMounted = false;\n//     //     document.body.classList.remove('authentication-bg');\n//     // }\n\n//     /**\n//      * Handles the submit\n//      */\n//     handleValidSubmit = (event, values) => {\n//         this.props.loginUser(values.username, values.password, this.props.history);\n//     }\n\n//     /**\n//      * Redirect to root\n//      */\n// renderRedirectToRoot = () => {\n//     const isAuthTokenValid = isUserAuthenticated();\n//     if (isAuthTokenValid) {\n//         return <Redirect to='/' />\n//     }\n// }\n\n//     render() {\n//         const isAuthTokenValid = isUserAuthenticated();\n//         return (\n\n//             <React.Fragment>\n\n//                 {/* {this.renderRedirectToRoot()} */}\n\n//                 {/* {(this._isMounted || !isAuthTokenValid) &&  */}\n//                 <React.Fragment>\n\n//                     <div className=\"account-pages mt-5 mb-5\">\n//                         <Container>\n//                             <Row className=\"justify-content-center\">\n//                                 <Col md={8} lg={6} xl={5} >\n//                                     <Card>\n//                                         <CardBody className=\"p-4 position-relative\">\n//                                             { /* preloader */}\n//                                             {/* {this.props.loading && <Loader />} */}\n\n//                                             <div className=\"text-center mb-1\">\n//                                                 <h4 className=\"text-uppercase mt-0\">Sign In</h4>\n//                                             </div>\n// {/*\n//                                             {this.props.error && <Alert color=\"danger\" isOpen={this.props.error ? true : false}>\n//                                                 <div>{this.props.error}</div>\n//                                             </Alert>} */}\n\n//                                             <AvForm onValidSubmit={this.handleValidSubmit}>\n//                                                 <AvField name=\"username\" label=\"Username\" placeholder=\"Enter your username\" value={this.state.username} required />\n\n//                                                 <AvGroup className=\"mb-3\">\n//                                                     <Label for=\"password\">Password</Label>\n//                                                     <AvInput type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your password\" value={this.state.password} required />\n//                                                     <AvFeedback>This field is invalid</AvFeedback>\n//                                                 </AvGroup>\n\n//                                                 <FormGroup>\n//                                                     <Button color=\"primary\" className=\"btn-block\">Log In</Button>\n//                                                 </FormGroup>\n\n//                                                 <p><strong>Username:</strong> test &nbsp;&nbsp; <strong>Password:</strong> test</p>\n//                                             </AvForm>\n//                                         </CardBody>\n//                                     </Card>\n//                                 </Col>\n//                             </Row>\n\n//                             <Row className=\"mt-1\">\n//                                 <Col className=\"col-12 text-center\">\n//                                     <p><Link to=\"/forget-password\" className=\"text-muted ml-1\"><i className=\"fa fa-lock mr-1\"></i>Forgot your password?</Link></p>\n//                                     <p className=\"text-muted\">Don't have an account? <Link to=\"/register\" className=\"text-dark ml-1\"><b>Register</b></Link></p>\n//                                 </Col>\n//                             </Row>\n\n//                         </Container>\n//                     </div>\n//                 </React.Fragment>\n//                 {/* // } */}\n//             </React.Fragment>\n//         )\n//     }\n// }\n\n// const mapStateToProps = (state) => {\n//     const { user, loading, error } = state.Auth;\n//     return { user, loading, error };\n// };\n\n// export default connect(mapStateToProps, { loginUser })(Login);","map":{"version":3,"names":["React","Component","useEffect","useState","connect","Redirect","Link","useHistory","AvForm","AvField","AvGroup","AvInput","AvFeedback","loginUser","isUserAuthenticated","Loader","logo","Button","Input","InputGroup","Base64","useDispatch","useSelector","postLoginUser","loginSelector","Dashboard","Login","userLoginToken","localStorage","getItem","token","setToken","assetPlanetClientName","assetPlanetClientPassword","basicCreds","btoa","config","headers","Authorization","user","state","rootReducer","dispatch","password","setPassword","username","setUserName","userData","setUserData","history","handleKeyPress","event","key","document","getElementById","value","length","handleLogin","marginTop","e","target","name","color","textAlign","paddingBottom","loading","error"],"sources":["/home/albatross/gitCode/shared/src/pages/auth/Login.js"],"sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\n// import { Container, Row, Col, Card, CardBody, Label, FormGroup, Button, Alert } from 'reactstrap';\nimport {\n  AvForm,\n  AvField,\n  AvGroup,\n  AvInput,\n  AvFeedback,\n} from \"availity-reactstrap-validation\";\n\nimport { loginUser } from \"../../redux/actions\";\nimport { isUserAuthenticated } from \"../../helpers/authUtils\";\nimport Loader from \"../../components/Loader\";\nimport logo from \"../../assets/images/logo-dark.png\";\n\nimport { Button } from \"../../components/button/Button\";\nimport { Input } from \"../../components/input/Input\";\nimport { InputGroup } from \"../../components/inputGroup/InputGroup\";\nimport Base64 from \"../../utils/base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { postLoginUser } from \"../../redux/login/actions\";\nimport { postLoginUser, loginSelector } from \"../../redux/slices/loginSlice\";\nimport \"./Login.css\";\nimport Dashboard from \"../Dashboard\";\n\nfunction Login() {\n  const userLoginToken = localStorage.getItem(\"userLoginToken\");\n\n  const [token, setToken] = useState(userLoginToken);\n\n  // useEffect(() => {\n\n  //   if (token) {\n  //     history.push('/dashboard')\n  //     }\n  // }, []);\n\n  const assetPlanetClientName = \"asset_planet_resource\";\n  const assetPlanetClientPassword = \"a_p_creds\";\n  const basicCreds = Base64.btoa(\n    assetPlanetClientName + \":\" + assetPlanetClientPassword\n  );\n\n  const config = {\n    headers: {\n      \"Content-type\": \"Application/json\",\n      Authorization: \"Basic \" + basicCreds,\n    },\n  };\n\n  const user = useSelector((state) => state.rootReducer.loginUser);\n  const dispatch = useDispatch();\n\n  // const loginUser = useSelector(loginSelector);\n\n  const [password, setPassword] = useState(false);\n  const [username, setUserName] = useState(false);\n  const [userData, setUserData] = useState({});\n\n  const history = useHistory();\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      if (document.getElementById(\"username\").value.length === 0) {\n        setUserName(true);\n      } else {\n        setUserName(false);\n      }\n  \n      if (document.getElementById(\"password\").value.length === 0) {\n        setPassword(true);\n      } else {\n        setPassword(false);\n      }\n  \n      if (\n        document.getElementById(\"username\").value.length === 0 ||\n        document.getElementById(\"password\").value.length === 0\n      ) {\n      } else {\n        dispatch(postLoginUser(userData, config, history));\n      }\n    }\n  };\n\n  const handleLogin = async () => {\n    if (document.getElementById(\"username\").value.length === 0) {\n      setUserName(true);\n    } else {\n      setUserName(false);\n    }\n\n    if (document.getElementById(\"password\").value.length === 0) {\n      setPassword(true);\n    } else {\n      setPassword(false);\n    }\n\n    if (\n      document.getElementById(\"username\").value.length === 0 ||\n      document.getElementById(\"password\").value.length === 0\n    ) {\n    } else {\n      dispatch(postLoginUser(userData, config, history));\n    }\n  };\n\n  return token ? (\n    <Redirect to=\"/dashboard\" />\n  ) : (\n    <div style={{ marginTop: \"20px\" }}>\n      {/* <div style={{padding:\"50px\",background:\"black\",overflow:\"hidden\"}}>hellow</div> */}\n      <div className=\"login-card border\">\n        <h2 className=\"login-heading\">Login</h2>\n        <div>\n          <InputGroup>\n            <label>Username</label>\n            <Input\n              onChange={(e) => {\n                setUserData({ ...userData, [e.target.name]: e.target.value });\n              }}\n              id=\"username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              name=\"username\"\n            ></Input>\n          </InputGroup>\n\n          {/* {username ?(\n            <div style={{ color: \"red\",textAlign:\"left\" }}>Please enter username</div>\n          ):<div></div>} */}\n\n          <InputGroup>\n            <label>Password</label>\n            <Input\n              onChange={(e) => {\n                setUserData({ ...userData, [e.target.name]: e.target.value });\n              }}\n              onKeyPress={handleKeyPress}\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n            ></Input>\n          </InputGroup>\n\n          {password && username ? (\n            <div\n              style={{ color: \"red\", textAlign: \"left\", paddingBottom: \"20px\" }}\n            >\n              Please enter Username and Password\n            </div>\n          ) : username ? (\n            <div\n              style={{ color: \"red\", textAlign: \"left\", paddingBottom: \"20px\" }}\n            >\n              Please enter Username{\" \"}\n            </div>\n          ) : password ? (\n            <div\n              style={{ color: \"red\", textAlign: \"left\", paddingBottom: \"20px\" }}\n            >\n              Please enter Password{\" \"}\n            </div>\n          ) : user.loading ? (\n            <div style={{ paddingBottom: \"20px\", paddingBottom: \"20px\" }}>\n              Loading.....\n            </div>\n          ) : (\n            <div style={{ color: \"red\", paddingBottom: \"20px\" }}>\n              {user.error}\n            </div>\n          )}\n\n          {/* {user.loading ? (\n            <div style={{ paddingBottom: \"15px\" }}>Loading.....</div>\n          ) : (\n            <div style={{ color: \"red\", paddingBottom: \"15px\" }}>\n              {user.error}\n            </div>\n          )} */}\n\n          <Button\n            onClick={() => {\n              handleLogin();\n            }}\n            disabled={user.loading}\n          >\n            Login\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n\n// <div style={{ marginTop: \"20px\" }}>\n// {/* <div style={{padding:\"50px\",background:\"black\",overflow:\"hidden\"}}>hellow</div> */}\n// <div className=\"login-card border\">\n//   <h2 className=\"login-heading\">Login</h2>\n//   <div>\n//     <InputGroup>\n//       <label>Username</label>\n//       <Input\n//         onChange={(e) => {\n//           setUserData({ ...userData, [e.target.name]: e.target.value });\n//         }}\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         name=\"username\"\n//       ></Input>\n//     </InputGroup>\n\n//     <InputGroup>\n//       <label>Password</label>\n//       <Input\n//         onChange={(e) => {\n//           setUserData({ ...userData, [e.target.name]: e.target.value });\n//         }}\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         name=\"password\"\n//       ></Input>\n//     </InputGroup>\n\n//     {user.loading ? (\n//       <div style={{ paddingBottom: \"15px\" }}>Loading.....</div>\n//     ) : (\n//       <div style={{ color: \"red\", paddingBottom: \"15px\" }}>\n//         {user.error}\n//       </div>\n//     )}\n\n//     <Button\n//       onClick={() => {\n//         handleLogin();\n//       }}\n//       disabled={user.loading}\n//     >\n//       Login\n//     </Button>\n//   </div>\n// </div>\n// </div>\n\n// ========== Login using class based component =============\n\n// class Login extends Component {\n//     _isMounted = false;\n\n//     constructor(props) {\n//         super(props);\n\n//         this.handleValidSubmit = this.handleValidSubmit.bind(this);\n//         this.state = {\n//             username: 'test',\n//             password: 'test'\n//         }\n//     }\n\n//     // componentDidMount() {\n//     //     this._isMounted = true;\n//     //     document.body.classList.add('authentication-bg');\n//     // }\n\n//     // componentWillUnmount() {\n//     //     this._isMounted = false;\n//     //     document.body.classList.remove('authentication-bg');\n//     // }\n\n//     /**\n//      * Handles the submit\n//      */\n//     handleValidSubmit = (event, values) => {\n//         this.props.loginUser(values.username, values.password, this.props.history);\n//     }\n\n//     /**\n//      * Redirect to root\n//      */\n// renderRedirectToRoot = () => {\n//     const isAuthTokenValid = isUserAuthenticated();\n//     if (isAuthTokenValid) {\n//         return <Redirect to='/' />\n//     }\n// }\n\n//     render() {\n//         const isAuthTokenValid = isUserAuthenticated();\n//         return (\n\n//             <React.Fragment>\n\n//                 {/* {this.renderRedirectToRoot()} */}\n\n//                 {/* {(this._isMounted || !isAuthTokenValid) &&  */}\n//                 <React.Fragment>\n\n//                     <div className=\"account-pages mt-5 mb-5\">\n//                         <Container>\n//                             <Row className=\"justify-content-center\">\n//                                 <Col md={8} lg={6} xl={5} >\n//                                     <Card>\n//                                         <CardBody className=\"p-4 position-relative\">\n//                                             { /* preloader */}\n//                                             {/* {this.props.loading && <Loader />} */}\n\n//                                             <div className=\"text-center mb-1\">\n//                                                 <h4 className=\"text-uppercase mt-0\">Sign In</h4>\n//                                             </div>\n// {/*\n//                                             {this.props.error && <Alert color=\"danger\" isOpen={this.props.error ? true : false}>\n//                                                 <div>{this.props.error}</div>\n//                                             </Alert>} */}\n\n//                                             <AvForm onValidSubmit={this.handleValidSubmit}>\n//                                                 <AvField name=\"username\" label=\"Username\" placeholder=\"Enter your username\" value={this.state.username} required />\n\n//                                                 <AvGroup className=\"mb-3\">\n//                                                     <Label for=\"password\">Password</Label>\n//                                                     <AvInput type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your password\" value={this.state.password} required />\n//                                                     <AvFeedback>This field is invalid</AvFeedback>\n//                                                 </AvGroup>\n\n//                                                 <FormGroup>\n//                                                     <Button color=\"primary\" className=\"btn-block\">Log In</Button>\n//                                                 </FormGroup>\n\n//                                                 <p><strong>Username:</strong> test &nbsp;&nbsp; <strong>Password:</strong> test</p>\n//                                             </AvForm>\n//                                         </CardBody>\n//                                     </Card>\n//                                 </Col>\n//                             </Row>\n\n//                             <Row className=\"mt-1\">\n//                                 <Col className=\"col-12 text-center\">\n//                                     <p><Link to=\"/forget-password\" className=\"text-muted ml-1\"><i className=\"fa fa-lock mr-1\"></i>Forgot your password?</Link></p>\n//                                     <p className=\"text-muted\">Don't have an account? <Link to=\"/register\" className=\"text-dark ml-1\"><b>Register</b></Link></p>\n//                                 </Col>\n//                             </Row>\n\n//                         </Container>\n//                     </div>\n//                 </React.Fragment>\n//                 {/* // } */}\n//             </React.Fragment>\n//         )\n//     }\n// }\n\n// const mapStateToProps = (state) => {\n//     const { user, loading, error } = state.Auth;\n//     return { user, loading, error };\n// };\n\n// export default connect(mapStateToProps, { loginUser })(Login);\n"],"mappings":";;;;;+CACA;AADA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7D,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,QAAQ,EAAEC,IAAI,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA,SACEC,MAAM,EACNC,OAAO,EACPC,OAAO,EACPC,OAAO,EACPC,UAAU,QACL,gCAAgC;AAEvC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,IAAI,MAAM,mCAAmC;AAEpD,SAASC,MAAM,QAAQ,gCAAgC;AACvD,SAASC,KAAK,QAAQ,8BAA8B;AACpD,SAASC,UAAU,QAAQ,wCAAwC;AACnE,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AACA,SAASC,aAAa,EAAEC,aAAa,QAAQ,+BAA+B;AAC5E,OAAO,aAAa;AACpB,OAAOC,SAAS,MAAM,cAAc;AAEpC,SAASC,KAAK,GAAG;EACf,IAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EAAC,gBAEpC1B,QAAQ,CAACwB,cAAc,CAAC;IAAA;IAA3CG,KAAK;IAAEC,QAAQ,kBAEtB;EAEA;EACA;EACA;EACA;EAEA,IAAMC,qBAAqB,GAAG,uBAAuB;EACrD,IAAMC,yBAAyB,GAAG,WAAW;EAC7C,IAAMC,UAAU,GAAGd,MAAM,CAACe,IAAI,CAC5BH,qBAAqB,GAAG,GAAG,GAAGC,yBAAyB,CACxD;EAED,IAAMG,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAE,QAAQ,GAAGJ;IAC5B;EACF,CAAC;EAED,IAAMK,IAAI,GAAGjB,WAAW,CAAC,UAACkB,KAAK;IAAA,OAAKA,KAAK,CAACC,WAAW,CAAC5B,SAAS;EAAA,EAAC;EAChE,IAAM6B,QAAQ,GAAGrB,WAAW,EAAE;;EAE9B;EAAA,iBAEgClB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAxCwC,QAAQ;IAAEC,WAAW;EAAA,iBACIzC,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAxC0C,QAAQ;IAAEC,WAAW;EAAA,iBACI3C,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAArC4C,QAAQ;IAAEC,WAAW;EAE5B,IAAMC,OAAO,GAAG1C,UAAU,EAAE;EAE5B,IAAM2C,cAAc,GAAG,SAAjBA,cAAc,CAAIC,KAAK,EAAK;IAChC,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACzB,IAAIC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QAC1DV,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLA,WAAW,CAAC,KAAK,CAAC;MACpB;MAEA,IAAIO,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QAC1DZ,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACLA,WAAW,CAAC,KAAK,CAAC;MACpB;MAEA,IACES,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,IACtDH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EACtD,CACF,CAAC,MAAM;QACLd,QAAQ,CAACnB,aAAa,CAACwB,QAAQ,EAAEX,MAAM,EAAEa,OAAO,CAAC,CAAC;MACpD;IACF;EACF,CAAC;EAED,IAAMQ,WAAW;IAAA,sEAAG;MAAA;QAAA;UAAA;YAClB,IAAIJ,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;cAC1DV,WAAW,CAAC,IAAI,CAAC;YACnB,CAAC,MAAM;cACLA,WAAW,CAAC,KAAK,CAAC;YACpB;YAEA,IAAIO,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;cAC1DZ,WAAW,CAAC,IAAI,CAAC;YACnB,CAAC,MAAM;cACLA,WAAW,CAAC,KAAK,CAAC;YACpB;YAEA,IACES,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,IACtDH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EACtD,CACF,CAAC,MAAM;cACLd,QAAQ,CAACnB,aAAa,CAACwB,QAAQ,EAAEX,MAAM,EAAEa,OAAO,CAAC,CAAC;YACpD;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA,CACF;IAAA,gBApBKQ,WAAW;MAAA;IAAA;EAAA,GAoBhB;EAED,OAAO3B,KAAK,gBACV,oBAAC,QAAQ;IAAC,EAAE,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,gBAE5B;IAAK,KAAK,EAAE;MAAE4B,SAAS,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAEhC;IAAK,SAAS,EAAC,mBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAChC;IAAI,SAAS,EAAC,eAAe;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,OAAK,CAAK,eACxC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAO,UAAQ,CAAQ,eACvB,oBAAC,KAAK;IACJ,QAAQ,EAAE,kBAACC,CAAC,EAAK;MACfX,WAAW,mBAAMD,QAAQ,sBAAGY,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACL,KAAK,GAAG;IAC/D,CAAE;IACF,EAAE,EAAC,UAAU;IACb,IAAI,EAAC,MAAM;IACX,WAAW,EAAC,UAAU;IACtB,IAAI,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,CACE,eAMb,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAO,UAAQ,CAAQ,eACvB,oBAAC,KAAK;IACJ,QAAQ,EAAE,kBAACI,CAAC,EAAK;MACfX,WAAW,mBAAMD,QAAQ,sBAAGY,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACL,KAAK,GAAG;IAC/D,CAAE;IACF,UAAU,EAAEL,cAAe;IAC3B,EAAE,EAAC,UAAU;IACb,IAAI,EAAC,UAAU;IACf,WAAW,EAAC,UAAU;IACtB,IAAI,EAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,CACE,EAEZP,QAAQ,IAAIE,QAAQ,gBACnB;IACE,KAAK,EAAE;MAAEiB,KAAK,EAAE,KAAK;MAAEC,SAAS,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnE,oCAED,CAAM,GACJnB,QAAQ,gBACV;IACE,KAAK,EAAE;MAAEiB,KAAK,EAAE,KAAK;MAAEC,SAAS,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnE,uBACsB,EAAC,GAAG,CACrB,GACJrB,QAAQ,gBACV;IACE,KAAK,EAAE;MAAEmB,KAAK,EAAE,KAAK;MAAEC,SAAS,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnE,uBACsB,EAAC,GAAG,CACrB,GACJzB,IAAI,CAAC0B,OAAO,gBACd;IAAK,KAAK;MAAID,aAAa,EAAE;IAAM,oBAAiB,MAAM,CAAG;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,cAE9D,CAAM,gBAEN;IAAK,KAAK,EAAE;MAAEF,KAAK,EAAE,KAAK;MAAEE,aAAa,EAAE;IAAO,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACjDzB,IAAI,CAAC2B,KAAK,CAEd,eAUD,oBAAC,MAAM;IACL,OAAO,EAAE,mBAAM;MACbT,WAAW,EAAE;IACf,CAAE;IACF,QAAQ,EAAElB,IAAI,CAAC0B,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACxB,OAED,CAAS,CACL,CACF,CAET;AACH;AAEA,eAAevC,KAAK;;AAEp},"metadata":{},"sourceType":"module"}