{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _objectWithoutProperties from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/testMods/PrivateEducationDash.js\",\n  _this = this;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ROLES from 'constants/roles';\n/* *** Antd Components *** */\nimport { Modal, Row, Button, Col, Progress, Typography } from 'antd';\n\n/* *** Custom Components *** */\nimport PageTitle from 'components/layout/PageTitle';\nimport ReportInfoRow from 'components/shared/ReportInfo';\nimport Synopsis from 'components/layout/Synopsis/Synopsis';\nimport GoalRow from 'pages/reports/GoalsReport/modals/GoalRow';\n\n/* *** Images *** */\nimport Logo from 'assets/images/abstract-dynamic-logo-vector.jpg';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QL_GOAL_LIST, QL_GOAL_DELETE } from 'constants/queries';\nimport Report from 'components/Report';\nvar fnMutationAssetsDelete = null;\nvar dataMutationAssetsDelete = null;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_GOAL_DELETE);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationAssetsDelete = _useMutation2[0];\n  dataMutationAssetsDelete = _useMutation2[1].dataMutationAssetsDelete;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  });\n}\nfunction LoadDBDataHook(props) {\n  var _useQuery = useQuery(QL_GOAL_LIST, {\n      notifyOnNetworkStatusChange: true\n    }),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    refetch = _useQuery.refetch,\n    networkStatus = _useQuery.networkStatus;\n  if (props.dbReload) {\n    console.log('reload..');\n    refetch();\n  }\n  props.cbUpdateNetworkStatus(networkStatus);\n  console.log('networkStatus:', networkStatus);\n  if (data) {\n    props.cbLoadDBData(networkStatus, data);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  });\n}\nvar Title = Typography.Title,\n  Text = Typography.Text;\nvar TitleGoal = function TitleGoal(_ref) {\n  var color = _ref.color,\n    rest = _objectWithoutProperties(_ref, [\"color\"]);\n  return /*#__PURE__*/React.createElement(Title, Object.assign({}, rest, {\n    style: {\n      fontSize: 26,\n      color: color,\n      marginBottom: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }));\n};\nvar ProgressTitle = function ProgressTitle(_ref2) {\n  var color = _ref2.color,\n    rest = _objectWithoutProperties(_ref2, [\"color\"]);\n  return /*#__PURE__*/React.createElement(Text, Object.assign({}, rest, {\n    style: {\n      fontSize: 20,\n      fontWeight: 600,\n      color: color,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }));\n};\nvar ChartText = function ChartText(_ref3) {\n  var color = _ref3.color,\n    rest = _objectWithoutProperties(_ref3, [\"color\"]);\n  return /*#__PURE__*/React.createElement(Text, Object.assign({}, rest, {\n    style: {\n      fontSize: 16,\n      color: color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }));\n};\nvar GoalsList = /*#__PURE__*/function (_Component) {\n  _inherits(GoalsList, _Component);\n  function GoalsList(props) {\n    var _this2;\n    _classCallCheck(this, GoalsList);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(GoalsList).call(this, props));\n    _this2.confirmDelete = function (e) {\n      var dbID = window.localStorage.getItem('assets_delete_id');\n      if (dbID != null && dbID != '') {\n        fnMutationAssetsDelete({\n          variables: {\n            id: dbID\n          }\n        });\n        _this2.setState({\n          dbReload: false,\n          isOpenDelete: false\n        });\n        var instance = _assertThisInitialized(_assertThisInitialized(_this2));\n        setTimeout(function () {\n          instance.setState({\n            dbReload: true,\n            dbLoading: true\n          });\n        }, 1000);\n      } else {\n        _this2.setState({\n          isOpenDelete: false\n        });\n      }\n    };\n    _this2.handleCancel = function (e) {\n      _this2.setState({\n        isOpenDelete: false\n      });\n    };\n    _this2.state = {\n      isOpenDelete: false,\n      reload: true,\n      total_assets: 0,\n      dbLoaded: false,\n      dbLoading: true,\n      goals: [],\n      report_rows: [],\n      dbReload: false,\n      networkStatus: 0\n    };\n    _this2.fnEdit = _this2.fnEdit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.fnView = _this2.fnView.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.loadDBData = _this2.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.updateNetworkStatus = _this2.updateNetworkStatus.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n  _createClass(GoalsList, [{\n    key: \"fnEdit\",\n    value: function fnEdit(record) {\n      this.props.history.push(\"/assets_edit/\" + record.id);\n    }\n  }, {\n    key: \"fnView\",\n    value: function fnView(record) {\n      this.props.history.push(\"/assets_view/\" + record.id);\n    }\n  }, {\n    key: \"fnDelete\",\n    value: function fnDelete(record) {\n      window.localStorage.setItem('assets_delete_id', record.id);\n      this.setState({\n        isOpenDelete: !this.state.isOpenDelete\n      });\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(networkStatus, data) {\n      console.log('loadDBData:', data);\n      if (this.state.networkStatus == networkStatus) {\n        return;\n      }\n      var total_assets = 0;\n      var goals = [];\n      for (var index = 0; index < data['goals'].length; index++) {\n        goals.push({\n          title: data['goals'][index]['description'],\n          need: index,\n          have: index,\n          report_rows: [{\n            key: index,\n            id: data['goals'][index]['id'],\n            amount_needed: data['goals'][index]['goalFinancingInformation']['amountNeededInFutureWithInflation'] != null ? parseFloat(data['goals'][index]['goalFinancingInformation']['amountNeededInFutureWithInflation']) : 0,\n            assetsAssignedToGoal: data['goals'][index]['assetsToAssignToGoal']['assetsToAssignToGoal'],\n            goalDate: data['goals'][index]['date'],\n            assignedTo: data['goals'][index]['assignedTo'],\n            inflation: data['goals'][index]['goalFinancingInformation']['inflationRateForThisGoal']\n          }]\n        });\n      }\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          goals: goals,\n          dbLoading: false,\n          dbLoaded: true,\n          dbReload: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"updateNetworkStatus\",\n    value: function updateNetworkStatus(networkStatus) {\n      if (this.state.networkStatus != networkStatus) {\n        var instance = this;\n        setTimeout(function () {\n          instance.setState({\n            networkStatus: networkStatus\n          });\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var goalReportData = [{\n        'title': 'Goal 1 : Gettin\\' Hitched',\n        'have': '20,000',\n        'need': '0',\n        'color': 'purple',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 2 : Sparkles EVERYWHERE!',\n        'have': '20,000',\n        'need': '0',\n        'color': 'green',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 3 : Pants Optional',\n        'have': '20,000',\n        'need': '0',\n        'color': 'maroon',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 4 : BEWBS',\n        'have': '20,000',\n        'need': '0',\n        'color': 'blue',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 5 : Muscle. Tough.',\n        'have': '20,000',\n        'need': '0',\n        'color': 'orange',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 6 : ROAD TRIP',\n        'have': '20,000',\n        'need': '0',\n        'color': 'navy',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 7 : Testing',\n        'have': '20,000',\n        'need': '0',\n        'color': 'gray',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 8 : Corvette\\'s for Christmas',\n        'have': '20,000',\n        'need': '0',\n        'color': 'purple',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 9 : Just Buying Stuff',\n        'have': '20,000',\n        'need': '0',\n        'color': 'green',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 10 : TESTING LOAN',\n        'have': '20,000',\n        'need': '0',\n        'color': 'maroon',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 11 : Surgery test loan',\n        'have': '20,000',\n        'need': '0',\n        'color': 'blue',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 12 : Vacation Home',\n        'have': '20,000',\n        'need': '0',\n        'color': 'orange',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 13 : Buy Vacation Home',\n        'have': '20,000',\n        'need': '0',\n        'color': 'navy',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 14 : 135 Main St',\n        'have': '20,000',\n        'need': '0',\n        'color': 'gray',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 15 : Let\\'s Buy a Rental',\n        'have': '20,000',\n        'need': '0',\n        'color': 'purple',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 16 : Testing Asset Assoc',\n        'have': '20,000',\n        'need': '0',\n        'color': 'green',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 17 : Testing Asset Creation',\n        'have': '20,000',\n        'need': '0',\n        'color': 'maroon',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 18 : test goal',\n        'have': '20,000',\n        'need': '0',\n        'color': 'blue',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 19 : new goal',\n        'have': '20,000',\n        'need': '0',\n        'color': 'orange',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }, {\n        'title': 'Goal 20 : Gonna Retire',\n        'have': '20,000',\n        'need': '0',\n        'color': 'navy',\n        dataSets: [{\n          'label': 'Amount Needed',\n          'value': ''\n        }, {\n          'label': 'Assets Assigned to Goal ',\n          'value': ''\n        }, {\n          'label': 'Goal Date',\n          'value': '06/02/2025'\n        }, {\n          'label': 'Goal Assigned To',\n          'value': 'Frank Jones'\n        }, {\n          'label': 'Inflation Rate',\n          'value': ''\n        }]\n      }];\n      var reportInfoData = [{\n        'title': 'Client Name',\n        'value': 'Bill Client'\n      }, {\n        'title': 'Plan Nickname',\n        'value': 'First Plan'\n      }, {\n        'title': 'Spouse Name',\n        'value': 'Peggy Client'\n      }, {\n        'title': 'Today\\'s Date',\n        'value': '11/20/2019'\n      }];\n      var report_cols = [{\n        title: 'Amount Needed',\n        dataIndex: 'amount_needed',\n        key: 'amount_needed'\n      }, {\n        title: 'Assets Assigned to Goal',\n        dataIndex: 'assetsAssignedToGoal',\n        key: 'assetsAssignedToGoal'\n      }, {\n        title: 'Goal Date',\n        dataIndex: 'goalDate',\n        key: 'goalDate'\n      }, {\n        title: 'Assigned To',\n        dataIndex: 'assignedTo',\n        key: 'assignedTo'\n      }, {\n        title: 'Inflation',\n        dataIndex: 'inflation',\n        key: 'inflation'\n      }, {\n        title: '',\n        key: 'id',\n        render: function render(record) {\n          if (_this3.props.user.role != ROLES.VIEW_ONLY) {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"a\", {\n              className: \"report-action-btn report-action-btn--view\",\n              onClick: function onClick() {\n                return _this3.fnView(record);\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 33\n              }\n            }, \"View\"), /*#__PURE__*/React.createElement(\"a\", {\n              className: \"report-action-btn report-action-btn--edit\",\n              onClick: function onClick() {\n                return _this3.fnEdit(record);\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 33\n              }\n            }, \"Edit\"), /*#__PURE__*/React.createElement(\"a\", {\n              className: \"report-action-btn report-action-btn--delete\",\n              onClick: function onClick() {\n                return _this3.fnDelete(record);\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 33\n              }\n            }, \"Delete\"));\n          } else {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"a\", {\n              className: \"report-action-btn report-action-btn--view\",\n              onClick: function onClick() {\n                return _this3.fnView(record);\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 33\n              }\n            }, \"View\"));\n          }\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pageWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbReload: this.state.dbReload,\n        cbLoadDBData: this.loadDBData,\n        cbUpdateNetworkStatus: this.updateNetworkStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(PageTitle, {\n        title: \"Goals Report\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        style: {\n          'textAlign': 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 17\n        }\n      }, this.props.user.role != ROLES.VIEW_ONLY && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/goals_add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 47\n        }\n      }, \"Add\")))), this.state.dbLoading && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 45\n        }\n      }, \"Loading...\"), this.state.goals.map(function (goal, index) {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          align: \"middle\",\n          justify: \"space-around\",\n          type: \"flex\",\n          gutter: [100, 0],\n          style: {\n            margin: '20px 0 30px'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          span: 24,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(TitleGoal, {\n          color: \"purple\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 41\n          }\n        }, goal.title)), /*#__PURE__*/React.createElement(Col, {\n          span: 9,\n          style: {\n            margin: '12px 0',\n            padding: '16px',\n            textAlign: 'center',\n            border: '1px solid #ddd',\n            backgroundColor: 'rgba(237, 237, 237, 0.40)',\n            borderRadius: '10px'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          style: {\n            marginBottom: 16\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(ProgressTitle, {\n          color: \"purple\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 49\n          }\n        }, goal.title))), /*#__PURE__*/React.createElement(Progress, {\n          type: \"circle\",\n          percent: 75,\n          width: 150,\n          strokeColor: \"purple\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 41\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          style: {\n            marginTop: 20\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(ChartText, {\n          color: \"purple\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 49\n          }\n        }, \"Need : $\", goal.need)), /*#__PURE__*/React.createElement(Col, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(ChartText, {\n          color: \"purple\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 49\n          }\n        }, \"Have : $\", goal.have)))), /*#__PURE__*/React.createElement(Col, {\n          span: 15,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Report, {\n          loading: _this3.state.dbLoading,\n          cols: report_cols,\n          rows: goal.report_rows,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 41\n          }\n        }))));\n      }), /*#__PURE__*/React.createElement(Modal, {\n        title: \"Alert\",\n        visible: this.state.isOpenDelete,\n        onOk: this.confirmDelete,\n        onCancel: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 21\n        }\n      }, \"Are you sure to delete?\")));\n    }\n  }]);\n  return GoalsList;\n}(Component);\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.rootReducer.loginUser.loginUserData\n  };\n};\nexport default connect(mapStateToProps, null)(GoalsList);","map":{"version":3,"names":["React","Component","connect","Link","ROLES","Modal","Row","Button","Col","Progress","Typography","PageTitle","ReportInfoRow","Synopsis","GoalRow","Logo","useQuery","useMutation","QL_GOAL_LIST","QL_GOAL_DELETE","Report","fnMutationAssetsDelete","dataMutationAssetsDelete","HiddenHook","LoadDBDataHook","props","notifyOnNetworkStatusChange","data","loading","error","refetch","networkStatus","dbReload","console","log","cbUpdateNetworkStatus","cbLoadDBData","Title","Text","TitleGoal","color","rest","fontSize","marginBottom","ProgressTitle","fontWeight","textAlign","ChartText","GoalsList","confirmDelete","e","dbID","window","localStorage","getItem","variables","id","setState","isOpenDelete","instance","setTimeout","dbLoading","handleCancel","state","reload","total_assets","dbLoaded","goals","report_rows","fnEdit","bind","fnView","loadDBData","updateNetworkStatus","record","history","push","setItem","index","length","title","need","have","key","amount_needed","parseFloat","assetsAssignedToGoal","goalDate","assignedTo","inflation","goalReportData","dataSets","reportInfoData","report_cols","dataIndex","render","user","role","VIEW_ONLY","fnDelete","map","goal","margin","padding","border","backgroundColor","borderRadius","marginTop","mapStateToProps","rootReducer","loginUser","loginUserData"],"sources":["/home/albatross/gitCode/shared/src/pages/testMods/PrivateEducationDash.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ROLES from 'constants/roles';\n/* *** Antd Components *** */\nimport { Modal, Row, Button, Col, Progress, Typography } from 'antd';\n\n/* *** Custom Components *** */\nimport PageTitle from 'components/layout/PageTitle';\nimport ReportInfoRow from 'components/shared/ReportInfo';\nimport Synopsis from 'components/layout/Synopsis/Synopsis';\nimport GoalRow from 'pages/reports/GoalsReport/modals/GoalRow';\n\n/* *** Images *** */\nimport Logo from 'assets/images/abstract-dynamic-logo-vector.jpg';\n\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport {\n    QL_GOAL_LIST,\n    QL_GOAL_DELETE\n} from 'constants/queries';\n\nimport Report from 'components/Report';\n\nvar fnMutationAssetsDelete = null;\nvar dataMutationAssetsDelete = null;\n\nfunction HiddenHook(){\n    [fnMutationAssetsDelete, { dataMutationAssetsDelete }] = useMutation(QL_GOAL_DELETE);\n\n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nfunction LoadDBDataHook(props){\n    const {data, loading, error, refetch, networkStatus } = useQuery(QL_GOAL_LIST, { notifyOnNetworkStatusChange: true });\n    \n    if(props.dbReload){\n        console.log('reload..');\n        refetch();\n    }\n\n    props.cbUpdateNetworkStatus(networkStatus);\n    console.log('networkStatus:', networkStatus);\n    if(data){\n        props.cbLoadDBData(networkStatus, data);\n    }\n    \n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nconst { Title, Text } = Typography;\n\nconst TitleGoal = ({ color, ...rest}) => (\n    <Title {...rest} style={{ fontSize: 26, color: color, marginBottom: 16 }} />\n);\n\nconst ProgressTitle = ({ color, ...rest}) => (\n    <Text {...rest} style={{ fontSize: 20, fontWeight: 600, color: color, textAlign: 'center' }} />\n);\n\nconst ChartText = ({ color, ...rest}) => (\n    <Text {...rest} style={{ fontSize: 16, color: color }} />\n);\n\nclass GoalsList extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            isOpenDelete: false,\n            reload: true,\n\n            total_assets: 0,\n            dbLoaded: false,\n            dbLoading: true,\n            goals: [],\n            report_rows: [],\n            dbReload: false,\n            networkStatus: 0\n        }\n        \n        this.fnEdit = this.fnEdit.bind(this);\n        this.fnView = this.fnView.bind(this);\n\n        this.loadDBData = this.loadDBData.bind(this);\n        this.updateNetworkStatus = this.updateNetworkStatus.bind(this);\n    }\n\n    fnEdit(record){\n        this.props.history.push(\"/assets_edit/\" + record.id);\n    }\n\n    fnView(record){\n        this.props.history.push(\"/assets_view/\" + record.id);\n    }\n\n    fnDelete(record){\n        window.localStorage.setItem('assets_delete_id', record.id);\n        this.setState({\n            isOpenDelete: !this.state.isOpenDelete\n        })\n    }\n\n    confirmDelete = e => {\n        \n        let dbID = window.localStorage.getItem('assets_delete_id');\n        if(dbID != null && dbID != ''){\n            fnMutationAssetsDelete({ variables: { id: dbID } })\n            this.setState({\n                dbReload: false,\n                isOpenDelete: false\n            })\n\n            var instance = this;\n            setTimeout(function(){\n                instance.setState({\n                    dbReload: true,\n                    dbLoading: true\n                })\n            }, 1000)\n        }\n        else{\n            this.setState({\n                isOpenDelete: false,\n            });\n        }\n\n    };\n    \n    handleCancel = e => {\n        this.setState({\n            isOpenDelete: false,\n        });\n    };\n\n    loadDBData(networkStatus, data){        \n        console.log('loadDBData:', data);\n        \n        if(this.state.networkStatus == networkStatus){\n            return;\n        }\n\n        var total_assets = 0;\n        var goals = [];\n\n        for(var index = 0; index < data['goals'].length; index++){\n\n            goals.push({\n                title: data['goals'][index]['description'],\n                need: index,\n                have: index,\n                report_rows: [\n                    {\n                        key: index,\n                        id: data['goals'][index]['id'],\n                        amount_needed: data['goals'][index]['goalFinancingInformation']['amountNeededInFutureWithInflation'] != null ? parseFloat(data['goals'][index]['goalFinancingInformation']['amountNeededInFutureWithInflation']) : 0,\n                        assetsAssignedToGoal: data['goals'][index]['assetsToAssignToGoal']['assetsToAssignToGoal'],\n                        goalDate: data['goals'][index]['date'],\n                        assignedTo: data['goals'][index]['assignedTo'],\n                        inflation: data['goals'][index]['goalFinancingInformation']['inflationRateForThisGoal']\n                    }\n                ]\n            })\n        }\n\n        var instance = this;\n        setTimeout(function(){\n            instance.setState({\n                goals: goals,\n                dbLoading: false,\n                dbLoaded: true,\n                dbReload: false\n            })\n        }, 500);\n        \n        \n    }\n\n    updateNetworkStatus(networkStatus){\n        if(this.state.networkStatus != networkStatus){\n            var instance = this;\n            setTimeout(function(){\n                instance.setState({\n                    networkStatus: networkStatus\n                });\n            }, 1000);\n        }\n    }\n\n    render() {\n        const goalReportData = [\n            {\n                'title': 'Goal 1 : Gettin\\' Hitched',\n                'have': '20,000',\n                'need': '0',\n                'color': 'purple',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 2 : Sparkles EVERYWHERE!',\n                'have': '20,000',\n                'need': '0',\n                'color': 'green',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 3 : Pants Optional',\n                'have': '20,000',\n                'need': '0',\n                'color': 'maroon',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 4 : BEWBS',\n                'have': '20,000',\n                'need': '0',\n                'color': 'blue',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 5 : Muscle. Tough.',\n                'have': '20,000',\n                'need': '0',\n                'color': 'orange',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 6 : ROAD TRIP',\n                'have': '20,000',\n                'need': '0',\n                'color': 'navy',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 7 : Testing',\n                'have': '20,000',\n                'need': '0',\n                'color': 'gray',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 8 : Corvette\\'s for Christmas',\n                'have': '20,000',\n                'need': '0',\n                'color': 'purple',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 9 : Just Buying Stuff',\n                'have': '20,000',\n                'need': '0',\n                'color': 'green',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 10 : TESTING LOAN',\n                'have': '20,000',\n                'need': '0',\n                'color': 'maroon',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 11 : Surgery test loan',\n                'have': '20,000',\n                'need': '0',\n                'color': 'blue',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 12 : Vacation Home',\n                'have': '20,000',\n                'need': '0',\n                'color': 'orange',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 13 : Buy Vacation Home',\n                'have': '20,000',\n                'need': '0',\n                'color': 'navy',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 14 : 135 Main St',\n                'have': '20,000',\n                'need': '0',\n                'color': 'gray',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 15 : Let\\'s Buy a Rental',\n                'have': '20,000',\n                'need': '0',\n                'color': 'purple',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 16 : Testing Asset Assoc',\n                'have': '20,000',\n                'need': '0',\n                'color': 'green',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 17 : Testing Asset Creation',\n                'have': '20,000',\n                'need': '0',\n                'color': 'maroon',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 18 : test goal',\n                'have': '20,000',\n                'need': '0',\n                'color': 'blue',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 19 : new goal',\n                'have': '20,000',\n                'need': '0',\n                'color': 'orange',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n            {\n                'title': 'Goal 20 : Gonna Retire',\n                'have': '20,000',\n                'need': '0',\n                'color': 'navy',\n                dataSets: [\n                    {\n                        'label': 'Amount Needed',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Assets Assigned to Goal ',\n                        'value': ''\n                    },\n                    {\n                        'label': 'Goal Date',\n                        'value': '06/02/2025'\n                    },\n                    {\n                        'label': 'Goal Assigned To',\n                        'value': 'Frank Jones'\n                    },\n                    {\n                        'label': 'Inflation Rate',\n                        'value': ''\n                    },\n                ]\n            },\n        ];\n\n        const reportInfoData = [\n            {\n                'title': 'Client Name',\n                'value': 'Bill Client'\n            },\n            {\n                'title': 'Plan Nickname',\n                'value': 'First Plan'\n            },\n            {\n                'title': 'Spouse Name',\n                'value': 'Peggy Client'\n            },\n            {\n                'title': 'Today\\'s Date',\n                'value': '11/20/2019'\n            }\n        ];\n\n        const report_cols = [\n            {\n              title: 'Amount Needed',\n              dataIndex: 'amount_needed',\n              key: 'amount_needed'\n            },\n            {\n              title: 'Assets Assigned to Goal',\n              dataIndex: 'assetsAssignedToGoal',\n              key: 'assetsAssignedToGoal',\n            },\n            {\n                title: 'Goal Date',\n                dataIndex: 'goalDate',\n                key: 'goalDate',\n              },\n            {\n              title: 'Assigned To',\n              dataIndex: 'assignedTo',\n              key: 'assignedTo',\n            },\n            {\n                title: 'Inflation',\n                dataIndex: 'inflation',\n                key: 'inflation',\n            },\n            {\n                title: '',\n                key: 'id',\n                render: (record) => {\n                    if(this.props.user.role != ROLES.VIEW_ONLY){\n                        return(\n                            <span>\n                                <a className=\"report-action-btn report-action-btn--view\" onClick={() => this.fnView(record)}>View</a>\n                                <a className=\"report-action-btn report-action-btn--edit\" onClick={() => this.fnEdit(record)}>Edit</a>\n                                <a className=\"report-action-btn report-action-btn--delete\" onClick={() => this.fnDelete(record)}>Delete</a>\n                            </span>\n                        )\n                    }\n                    else{\n                        return (\n                            <span>\n                                <a className=\"report-action-btn report-action-btn--view\" onClick={() => this.fnView(record)}>View</a>\n                            </span>\n                        )\n                    }\n                }\n            },\n        ];\n\n        return (\n            <div className=\"pageWrapper\">\n                <HiddenHook />\n                <LoadDBDataHook \n                    dbLoaded={this.state.dbLoaded}\n                    dbReload={this.state.dbReload}\n                    cbLoadDBData={this.loadDBData}\n                    cbUpdateNetworkStatus={this.updateNetworkStatus}\n                />\n                <PageTitle title=\"Goals Report\" />\n                <div className=\"\" style={{'textAlign': 'right'}}>\n                {\n                    this.props.user.role != ROLES.VIEW_ONLY &&\n                    <React.Fragment> \n                        <Link to=\"/goals_add\"><Button type=\"primary\">Add</Button></Link>\n                    </React.Fragment> \n                }\n                </div>\n                {\n                    this.state.dbLoading && <p>Loading...</p>\n                }\n                {\n                    this.state.goals.map((goal, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                <Row align=\"middle\" justify=\"space-around\" type=\"flex\" gutter={[100, 0]} style={{ margin: '20px 0 30px' }}>\n                                    <Col span={24}>\n                                        <TitleGoal color=\"purple\">{goal.title}</TitleGoal>\n                                    </Col>\n                                    <Col span={9} style={{ margin: '12px 0', padding: '16px', textAlign: 'center', border: '1px solid #ddd', backgroundColor: 'rgba(237, 237, 237, 0.40)', borderRadius: '10px' }}>\n                                        <Row style={{ marginBottom: 16 }}>\n                                            <Col>\n                                                <ProgressTitle color='purple'>{goal.title}</ProgressTitle>\n                                            </Col>\n                                        </Row>\n                                        <Progress type=\"circle\" percent={75} width={150} strokeColor='purple' />\n                                        <Row style={{ marginTop: 20 }}>\n                                            <Col>\n                                                <ChartText color='purple'>Need : ${goal.need}</ChartText>\n                                            </Col>\n                                            <Col>\n                                                <ChartText color='purple'>Have : ${goal.have}</ChartText>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                    <Col span={15}>\n                                        <Report \n                                            loading={this.state.dbLoading}\n                                            cols={report_cols} \n                                            rows={goal.report_rows}\n                                        ></Report>\n                                    </Col>                    \n                                </Row>\n                            </React.Fragment>\n                        )  \n                    })\n                }\n                \n                <Modal\n                    title=\"Alert\"\n                    visible={this.state.isOpenDelete}\n                    onOk={this.confirmDelete}\n                    onCancel={this.handleCancel}\n                    >\n                    <p>Are you sure to delete?</p>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.rootReducer.loginUser.loginUserData\n\n    }\n}\nexport default connect(mapStateToProps, null)(GoalsList);"],"mappings":"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"},"metadata":{},"sourceType":"module"}