{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/reports/IncomeReport/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\n\n/* *** Antd Components *** */\nimport { Row, Col } from 'antd';\n\n/* *** Custom Components *** */\nimport PageTitle from '../../../components/layout/PageTitle';\nimport ReportInfoRow from '../../../components/shared/ReportInfo';\nimport Synopsis from '../../../components/layout/Synopsis/Synopsis';\nimport HighlightedReportBlock from '../../../components/layout/HighlightedReportBlock';\nimport TableReport from '../../../components/layout/TableReport';\nimport InfoList from '../../../components/InfoList';\n\n/* *** Images *** */\nimport Logo from '../../../assets/images/abstract-dynamic-logo-vector.jpg';\nimport highlightedIcon from '../../../assets/images/contributions.png';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QL_INCOME_LIST } from '../../../constants/queries';\nimport Report from '../../../components/Report';\nimport { float2Currency } from 'helpers/Utils';\nfunction LoadDBDataHook(props) {\n  var _useQuery = useQuery(QL_INCOME_LIST, {\n      notifyOnNetworkStatusChange: true\n    }),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    refetch = _useQuery.refetch,\n    networkStatus = _useQuery.networkStatus;\n  if (props.dbReload) {\n    console.log('reload..');\n    refetch();\n  }\n  props.cbUpdateNetworkStatus(networkStatus);\n  console.log('networkStatus:', networkStatus);\n  if (data) {\n    props.cbLoadDBData(networkStatus, data);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  });\n}\nvar IncomeReport = /*#__PURE__*/function (_Component) {\n  _inherits(IncomeReport, _Component);\n  function IncomeReport(props) {\n    var _this;\n    _classCallCheck(this, IncomeReport);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IncomeReport).call(this, props));\n    _this.state = {\n      overall_income: [{\n        'label': 'Passive Income',\n        'value': ''\n      }, {\n        'label': 'Earned Income',\n        'value': ''\n      }, {\n        'label': 'Gross Income Total',\n        'value': ''\n      }],\n      overall_adj_income: [{\n        'label': 'Gross Income',\n        'value': ''\n      }, {\n        'label': 'Adjusted Growth Income(AGI)',\n        'value': ''\n      }],\n      dbLoaded: false,\n      dbLoading: true,\n      report_rows: [],\n      dbReload: false,\n      networkStatus: 0\n    };\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateNetworkStatus = _this.updateNetworkStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(IncomeReport, [{\n    key: \"loadDBData\",\n    value: function loadDBData(networkStatusIn, data) {\n      console.log('loadDBData:', data);\n      if (this.state.networkStatusIn == networkStatusIn) {\n        return;\n      }\n      var rows = [];\n      var total_passive_income = 0;\n      var total_earned_income = 0;\n      var total_income = 0;\n      var total_gross_income = 0;\n      var total_a_gross_income = 0;\n      for (var index = 0; index < data['incomes'].length; index++) {\n        var gross_income = 0;\n        gross_income = data['incomes'][index]['grossWages'] != null ? parseFloat(data['incomes'][index]['grossWages']) : 0;\n        switch (data['incomes'][index]['incomeType']) {\n          case \"Bonus from Work\":\n          case \"Sales Commision from Work\":\n          case \"Earned Income From Work\":\n            // earned income\n            total_passive_income += gross_income;\n            break;\n          default:\n            // passive income\n            total_earned_income += gross_income;\n            break;\n        }\n        var a_gross_income = 0;\n        a_gross_income = data['incomes'][index]['incomeTaxation']['adjustedGrossIncome'] != null ? parseFloat(data['incomes'][index]['incomeTaxation']['adjustedGrossIncome']) : 0;\n        console.log('a_gross_income:', a_gross_income);\n        // total_a_gross_income += a_gross_income;\n        rows.push({\n          key: index,\n          id: data['incomes'][index]['id'],\n          income_type: data['incomes'][index]['incomeType'],\n          nickname_income: data['incomes'][index]['nicknameIncome'],\n          owner: data['incomes'][index]['owner'],\n          est_amt_remaining_first_year: data['incomes'][index]['estimatedAmountRemainingFirstYear'],\n          feterdal_taxation_type: data['incomes'][index]['incomeTaxation']['federalTaxationType'],\n          passive: data['incomes'][index]['incomeTaxation']['passiveOrEarned'],\n          income_ends_at: data['incomes'][index]['incomeEndsAt']\n        });\n      }\n      var overall_income = this.state.overall_income;\n      overall_income[0]['value'] = float2Currency(total_passive_income);\n      overall_income[1]['value'] = float2Currency(total_earned_income);\n      overall_income[2]['value'] = float2Currency(total_passive_income + total_earned_income);\n      var overall_adj_income = this.state.overall_adj_income;\n      overall_adj_income[0]['value'] = float2Currency(total_gross_income);\n      overall_adj_income[1]['value'] = float2Currency(total_a_gross_income);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          overall_income: overall_income,\n          overall_adj_income: overall_adj_income,\n          report_rows: rows,\n          dbLoading: false,\n          dbLoaded: true,\n          dbReload: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"updateNetworkStatus\",\n    value: function updateNetworkStatus(networkStatusIn) {\n      if (this.state.networkStatusIn != networkStatusIn) {\n        var instance = this;\n        setTimeout(function () {\n          instance.setState({\n            networkStatusIn: networkStatusIn\n          });\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var reportInfoData = [{\n        'title': 'Client Name',\n        'value': 'Bill Client'\n      }, {\n        'title': 'Plan Nickname',\n        'value': 'First Plan'\n      }, {\n        'title': 'Spouse Name',\n        'value': 'Peggy Client'\n      }, {\n        'title': 'Today\\'s Date',\n        'value': '11/20/2019'\n      }];\n      var report_cols = [{\n        title: 'Income Type',\n        dataIndex: 'income_type',\n        key: 'income_type'\n      }, {\n        title: 'Nickname Income',\n        dataIndex: 'nickname_income',\n        key: 'nickname_income'\n      }, {\n        title: 'Owner',\n        dataIndex: 'owner',\n        key: 'owner'\n      }, {\n        title: 'Estimate Amount Per Year',\n        dataIndex: 'est_amt_remaining_first_year',\n        key: 'est_amt_remaining_first_year'\n      }, {\n        title: 'Federal Taxation Type',\n        dataIndex: 'feterdal_taxation_type',\n        key: 'feterdal_taxation_type'\n      }, {\n        title: 'Passive/Earned',\n        dataIndex: 'passive',\n        key: 'passive'\n      }, {\n        title: 'Income Ends At',\n        dataIndex: 'income_ends_at',\n        key: 'income_ends_at'\n      }];\n      var barData = {\n        labels: ['1. Testing Multiple dist to income', 'Dist', 'Adam\\'s Dist', 'Brand New Rental', 'Dist Two', 'Early WD', 'Frank\\'s Annuity'],\n        datasets: [{\n          label: '',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: [0, 50000, 100000, 150000, 0, 50000, 100000]\n        }]\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pageWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbReload: this.state.dbReload,\n        cbLoadDBData: this.loadDBData,\n        cbUpdateNetworkStatus: this.updateNetworkStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(PageTitle, {\n        title: \"Income Report\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Synopsis, {\n        content: \"Gross Income, Adjusted Gross Income, Modified Adjusted Gross Income, Passive or Earned\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReportInfoRow, {\n        data: reportInfoData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        style: {\n          margin: '12px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Logo,\n        alt: \"\",\n        style: {\n          height: '130px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        type: \"flex\",\n        gutter: [20, 0],\n        style: {\n          margin: '20px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 7,\n        style: {\n          paddingTop: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(InfoList, {\n        column: 1,\n        title: \"Gross Income\",\n        data: this.state.overall_income,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        span: 10,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(HighlightedReportBlock, {\n        title: \"Total Gross Income\",\n        value: this.state.overall_income[2]['value'],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: highlightedIcon,\n        alt: \"\",\n        style: {\n          height: '100px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        span: 7,\n        style: {\n          paddingTop: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(InfoList, {\n        column: 1,\n        title: \"Adjusted Gross Income\",\n        data: this.state.overall_adj_income,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        style: {\n          margin: '12px 0',\n          padding: '16px',\n          border: '1px solid #ddd',\n          backgroundColor: 'rgba(237, 237, 237, 0.40)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Bar, {\n        data: barData,\n        height: 300,\n        options: {\n          maintainAspectRatio: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fragment-assitance-received\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        title: \"All Income Information\",\n        level: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Report, {\n        loading: this.state.dbLoading,\n        cols: report_cols,\n        rows: this.state.report_rows,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return IncomeReport;\n}(Component);\nexport default connect()(IncomeReport);","map":{"version":3,"names":["React","Component","connect","Bar","Row","Col","PageTitle","ReportInfoRow","Synopsis","HighlightedReportBlock","TableReport","InfoList","Logo","highlightedIcon","useQuery","useMutation","QL_INCOME_LIST","Report","float2Currency","LoadDBDataHook","props","notifyOnNetworkStatusChange","data","loading","error","refetch","networkStatus","dbReload","console","log","cbUpdateNetworkStatus","cbLoadDBData","IncomeReport","state","overall_income","overall_adj_income","dbLoaded","dbLoading","report_rows","loadDBData","bind","updateNetworkStatus","networkStatusIn","rows","total_passive_income","total_earned_income","total_income","total_gross_income","total_a_gross_income","index","length","gross_income","parseFloat","a_gross_income","push","key","id","income_type","nickname_income","owner","est_amt_remaining_first_year","feterdal_taxation_type","passive","income_ends_at","instance","setTimeout","setState","reportInfoData","report_cols","title","dataIndex","barData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","margin","height","paddingTop","padding","border","maintainAspectRatio"],"sources":["/home/albatross/gitCode/shared/src/pages/reports/IncomeReport/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Bar } from 'react-chartjs-2';\n\n/* *** Antd Components *** */\nimport { Row, Col } from 'antd';\n\n/* *** Custom Components *** */\nimport PageTitle from '../../../components/layout/PageTitle';\nimport ReportInfoRow from '../../../components/shared/ReportInfo';\nimport Synopsis from '../../../components/layout/Synopsis/Synopsis';\nimport HighlightedReportBlock from '../../../components/layout/HighlightedReportBlock';\nimport TableReport from '../../../components/layout/TableReport';\nimport InfoList from '../../../components/InfoList';\n\n/* *** Images *** */\nimport Logo from '../../../assets/images/abstract-dynamic-logo-vector.jpg'\nimport highlightedIcon from '../../../assets/images/contributions.png';\n\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport {\n    QL_INCOME_LIST\n} from '../../../constants/queries';\nimport Report from '../../../components/Report';\n\nimport {float2Currency} from 'helpers/Utils';\n\n\nfunction LoadDBDataHook(props){\n    const {data, loading, error, refetch, networkStatus } = useQuery(QL_INCOME_LIST, { notifyOnNetworkStatusChange: true });\n    \n    if(props.dbReload){\n        console.log('reload..');\n        refetch();\n    }\n\n    props.cbUpdateNetworkStatus(networkStatus);\n    console.log('networkStatus:', networkStatus);\n    if(data){\n        props.cbLoadDBData(networkStatus, data);\n    }\n    \n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nclass IncomeReport extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            overall_income: [\n                {\n                    'label': 'Passive Income',\n                    'value': ''\n                },\n                {\n                    'label': 'Earned Income',\n                    'value': ''\n                },\n                {\n                    'label': 'Gross Income Total',\n                    'value': ''\n                }\n            ],\n            overall_adj_income: [\n                {\n                    'label': 'Gross Income',\n                    'value': ''\n                },\n                {\n                    'label': 'Adjusted Growth Income(AGI)',\n                    'value': ''\n                }\n            ],\n            dbLoaded: false,\n            dbLoading: true,\n            report_rows: [],\n            dbReload: false,\n            networkStatus: 0\n        }\n\n        this.loadDBData = this.loadDBData.bind(this);\n        this.updateNetworkStatus = this.updateNetworkStatus.bind(this);\n    }\n\n    loadDBData(networkStatusIn, data){        \n        console.log('loadDBData:', data);\n\n        if(this.state.networkStatusIn == networkStatusIn){\n            return;\n        }\n\n        var rows = [];\n        var total_passive_income = 0;\n        var total_earned_income = 0;\n        var total_income = 0;\n\n        var total_gross_income = 0;\n        var total_a_gross_income = 0;\n\n        for(var index = 0; index < data['incomes'].length; index++){\n            var gross_income = 0;\n            gross_income = data['incomes'][index]['grossWages'] != null ? parseFloat(data['incomes'][index]['grossWages']) : 0;\n\n            switch(data['incomes'][index]['incomeType']){\n                case \"Bonus from Work\":\n                case \"Sales Commision from Work\":\n                case \"Earned Income From Work\":\n                    // earned income\n                    total_passive_income += gross_income; \n                    break;\n                default:\n                    // passive income\n                    total_earned_income += gross_income;\n                    break;\n            }\n\n            \n\n            var a_gross_income = 0;\n            a_gross_income = data['incomes'][index]['incomeTaxation']['adjustedGrossIncome'] != null ? parseFloat(data['incomes'][index]['incomeTaxation']['adjustedGrossIncome']) : 0;\n            console.log('a_gross_income:', a_gross_income);\n            // total_a_gross_income += a_gross_income;\n            rows.push(\n                {\n                    key: index,\n                    id: data['incomes'][index]['id'],\n                    income_type: data['incomes'][index]['incomeType'],\n                    nickname_income: data['incomes'][index]['nicknameIncome'],\n                    owner: data['incomes'][index]['owner'],\n                    est_amt_remaining_first_year: data['incomes'][index]['estimatedAmountRemainingFirstYear'],\n                    feterdal_taxation_type: data['incomes'][index]['incomeTaxation']['federalTaxationType'],\n                    passive: data['incomes'][index]['incomeTaxation']['passiveOrEarned'],\n                    income_ends_at: data['incomes'][index]['incomeEndsAt']\n                }\n            )\n        }  \n\n        var overall_income = this.state.overall_income;\n        overall_income[0]['value'] = float2Currency(total_passive_income);\n        overall_income[1]['value'] = float2Currency(total_earned_income);\n        overall_income[2]['value'] = float2Currency(total_passive_income + total_earned_income);\n\n        var overall_adj_income = this.state.overall_adj_income;\n        overall_adj_income[0]['value'] = float2Currency(total_gross_income);\n        overall_adj_income[1]['value'] = float2Currency(total_a_gross_income);\n        \n        var instance = this;\n        setTimeout(function(){\n            instance.setState({\n                overall_income: overall_income,\n                overall_adj_income: overall_adj_income,\n                report_rows: rows,\n                dbLoading: false,\n                dbLoaded: true,\n                dbReload: false\n            })\n        }, 500);        \n    }\n\n    updateNetworkStatus(networkStatusIn){\n        if(this.state.networkStatusIn != networkStatusIn){\n            var instance = this;\n            setTimeout(function(){\n                instance.setState({\n                    networkStatusIn: networkStatusIn\n                });\n            }, 1000);\n        }\n    }\n\n    render() {\n        const reportInfoData = [\n            {\n                'title': 'Client Name',\n                'value': 'Bill Client'\n            },\n            {\n                'title': 'Plan Nickname',\n                'value': 'First Plan'\n            },\n            {\n                'title': 'Spouse Name',\n                'value': 'Peggy Client'\n            },\n            {\n                'title': 'Today\\'s Date',\n                'value': '11/20/2019'\n            }\n        ];\n\n        const report_cols = [\n            {\n              title: 'Income Type',\n              dataIndex: 'income_type',\n              key: 'income_type'\n            },\n            {\n              title: 'Nickname Income',\n              dataIndex: 'nickname_income',\n              key: 'nickname_income',\n            },\n            {\n                title: 'Owner',\n                dataIndex: 'owner',\n                key: 'owner',\n            },\n            {\n              title: 'Estimate Amount Per Year',\n              dataIndex: 'est_amt_remaining_first_year',\n              key: 'est_amt_remaining_first_year',\n            },\n            {\n                title: 'Federal Taxation Type',\n                dataIndex: 'feterdal_taxation_type',\n                key: 'feterdal_taxation_type',\n            },\n            {\n                title: 'Passive/Earned',\n                dataIndex: 'passive',\n                key: 'passive',\n            },\n            {\n                title: 'Income Ends At',\n                dataIndex: 'income_ends_at',\n                key: 'income_ends_at'\n            }\n        ];\n\n        const barData = {\n            labels: ['1. Testing Multiple dist to income', 'Dist', 'Adam\\'s Dist', 'Brand New Rental', 'Dist Two', 'Early WD', 'Frank\\'s Annuity'],\n            datasets: [\n              {\n                label: '',\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: [0, 50000, 100000, 150000, 0, 50000, 100000]\n              }\n            ]\n        };        \n        \n        return (\n            <div className=\"pageWrapper\">\n                <LoadDBDataHook \n                    dbLoaded={this.state.dbLoaded}\n                    dbReload={this.state.dbReload}\n                    cbLoadDBData={this.loadDBData}\n                    cbUpdateNetworkStatus={this.updateNetworkStatus}\n                />\n                <PageTitle title=\"Income Report\" />\n                <Synopsis content=\"Gross Income, Adjusted Gross Income, Modified Adjusted Gross Income, Passive or Earned\" />\n                <ReportInfoRow data={reportInfoData} />\n                <Row type=\"flex\" justify=\"center\" style={{ margin: '12px 0' }}>\n                    <img src={Logo} alt=\"\" style={{ height : '130px' }} /> \n                </Row>\n                <Row type=\"flex\" gutter={[20, 0]} style={{ margin: '20px 0' }}>\n                    <Col span={7} style={{ paddingTop: '20px'}}>\n                        <InfoList column={1} title=\"Gross Income\" data={this.state.overall_income} />\n                    </Col>\n                    <Col span={10}>\n                        <HighlightedReportBlock title=\"Total Gross Income\" value={this.state.overall_income[2]['value']}>\n                            <img src={highlightedIcon} alt=\"\" style={{ height: '100px' }} />     \n                        </HighlightedReportBlock>\n                    </Col>\n                    <Col span={7} style={{ paddingTop: '20px'}}>\n                        <InfoList column={1} title=\"Adjusted Gross Income\" data={this.state.overall_adj_income} />\n                    </Col>\n                </Row>\n                <Row type=\"flex\" justify=\"center\" style={{ margin: '12px 0', padding: '16px', border: '1px solid #ddd', backgroundColor: 'rgba(237, 237, 237, 0.40)' }}>\n                    <Bar\n                        data={barData}\n                        height={300}\n                        options={{\n                            maintainAspectRatio: false\n                        }}\n                    />\n                </Row>\n                <div className=\"fragment-assitance-received\">\n                    <PageTitle title={\"All Income Information\"} level={4} />\n                    <Report \n                        loading={this.state.dbLoading}\n                        cols={report_cols} \n                        rows={this.state.report_rows}\n                    ></Report>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default connect()(IncomeReport);"],"mappings":"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"},"metadata":{},"sourceType":"module"}