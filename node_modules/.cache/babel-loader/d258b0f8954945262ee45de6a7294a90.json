{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/client_info/clients_plans/ClientNew.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport ImageIcon from 'assets/images/asset.png';\nimport AssetPlanet from 'assets/images/asset-planet-logo.jpg';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { QL_CLIENT_ADD, QL_CLIENT_UPDATE, QL_CLIENT_GET } from '../../../constants/queries';\nimport { FormPagePose } from '../../../components/Animations';\nimport ClientSpouseInformationSubForm from './subforms/ClientSpouseInformationSubForm';\nimport DependentsSubForm from './subforms/DependentsSubForm';\nimport ClientInformationSubForm from './subforms/ClientInformationSubForm';\nimport SpouseInformationSubForm from './subforms/SpouseInformationSubForm';\nimport TrustInformationSubForm from './subforms/TrustInformationSubForm';\nimport CorporateInformationSubForm from './subforms/CorporateInformationSubForm';\nimport CharityInformationSubForm from './subforms/CharityInformationSubForm';\nimport OthersImpactedSubForm from './subforms/OthersImpactedSubForm';\nimport ProfessionalContactsSubForm from './subforms/ProfessionalContactsSubForm';\nimport MyDetailsInformationSubForm from './subforms/MyDetailsInformationSubForm';\nimport QuestionSpousePartnerHasSubForm from './subforms/QuestionSpousePartnerHasSubForm';\nimport QuestionDependentSubForm from './subforms/QuestionDependentSubForm';\nimport QuestionTrustSubForm from './subforms/QuestionTrustSubForm';\nimport QuestionCorporationSubForm from './subforms/QuestionCorporationSubForm';\nimport QuestionCharitySubForm from './subforms/QuestionCharitySubForm';\nimport QuestionFinanciallyOthersSubForm from './subforms/QuestionFinanciallyOthersSubForm';\nimport EndSubForm from './subforms/EndSubForm';\nimport { setClientInfoObject } from '../../../redux/slices/clientInfoSlice';\nimport ClientInfoSideDisplay from './operations/ClientInfoSideDisplay';\nvar fnMutationClientAdd = null;\nvar dataMutationClientAdd = null;\nvar fnMutationClientUpdate = null;\nvar dataMutationClientUpdate = null;\nvar prevPos = 0;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_CLIENT_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationClientAdd = _useMutation2[0];\n  dataMutationClientAdd = _useMutation2[1].dataMutationClientAdd;\n  var _useMutation3 = useMutation(QL_CLIENT_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationClientUpdate = _useMutation4[0];\n  dataMutationClientUpdate = _useMutation4[1].dataMutationClientUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  });\n}\nfunction convertDB2FormData(data) {\n  console.log('readDataaaaaaaaaaaaaaaaa:', data);\n\n  // this.props.dispatch(this.props.handleClientInfoObject(data))\n  var formData = [];\n  formData.push({\n    id: 'ClientSpouseInformationSubForm',\n    data: ClientSpouseInformationSubForm.FnCreateFormData({\n      clientFirstName: data['client']['firstName'],\n      clientLastName: data['client']['lastName'],\n      spouseFirstName: data['client']['spouse']['firstName'],\n      spouseLastName: data['client']['spouse']['lastName']\n    }),\n    visible: true\n  });\n  formData.push({\n    id: 'DependentsSubForm',\n    data: {\n      title: 'Include your children and any other dependents',\n      data: data['client']['dependents']\n    },\n    visible: false\n  });\n  formData.push({\n    id: 'ClientInformationSubForm',\n    data: ClientInformationSubForm.FnCreateFormData({\n      clientBirthdate: data['client']['birthdate'],\n      clientEstimatedDeathAge: data['client']['estimatedDeathAge'],\n      clientPrimaryContactNumber: data['client']['primaryContactNumber'],\n      clientSecondaryContactNumber: data['client']['secondaryContactNumber'],\n      clientWorkContactNumber: data['client']['workContactNumber'],\n      clientEmailAddress: data['client']['emailAddress'],\n      clientSecondaryEmailAddress: data['client']['secondaryEmailAddress'],\n      clientGender: data['client']['gender'],\n      clientInvestmentKnowledge: data['client']['investmentKnowledge'],\n      clientRetirementDate: data['client']['retirementDate'],\n      clientNotes: data['client']['notes'],\n      clientAddressFirstLine: data['client']['address']['firstLine'],\n      clientAddressSecondLine: data['client']['secondLine'],\n      clientAddressCity: data['client']['address']['city'],\n      clientAddressPostalCode: data['client']['address']['postalCode'],\n      clientAddressCountry: data['client']['address']['country'],\n      clientAddressState: data['client']['address']['state']\n    }),\n    visible: true\n  });\n  formData.push({\n    id: 'SpouseInformationSubForm',\n    data: SpouseInformationSubForm.FnCreateFormData({\n      spouseBirthdate: data['client']['spouse']['birthdate'],\n      spouseEstimatedDeathAge: data['client']['spouse']['estimatedDeathAge'],\n      spouseEmailAddress: data['client']['spouse']['emailAddress'],\n      spouseSecondaryEmailAddress: data['client']['spouse']['secondaryEmailAddress'],\n      spouseGender: data['client']['spouse']['gender'],\n      spousePrimaryContactNumber: data['client']['spouse']['primaryContactNumber'],\n      spouseSecondaryContactNumber: data['client']['spouse']['secondaryContactNumber'],\n      spouseWorkContactNumber: data['client']['spouse']['workContactNumber'],\n      spouseInvestmentKnowledge: data['client']['spouse']['investmentKnowledge'],\n      spouseRetirementDate: data['client']['spouse']['retirementDate']\n    }),\n    visible: true\n  });\n  formData.push({\n    id: 'TrustInformationSubForm',\n    data: {\n      title: 'Trust Information',\n      data: data['client']['trusts']\n    },\n    visible: false\n  });\n  formData.push({\n    id: 'CorporateInformationSubForm',\n    data: {\n      title: 'Coporate Information',\n      data: data['client']['corporates']\n    },\n    visible: false\n  });\n  formData.push({\n    id: 'CharityInformationSubForm',\n    data: {\n      title: 'Charity Information',\n      data: data['client']['charities']\n    },\n    visible: false\n  });\n  formData.push({\n    id: 'OthersImpactedSubForm',\n    data: {\n      title: 'Others Financially Impacted',\n      data: data['client']['financiallyImpacteds']\n    },\n    visible: false\n  });\n  formData.push({\n    id: 'ProfessionalContactsSubForm',\n    data: {\n      title: 'Professional Contacts',\n      data: data['client']['professionalContacts']\n    },\n    visible: false\n  });\n  return formData;\n}\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != '') {\n    var _useQuery = useQuery(QL_CLIENT_GET, {\n        variables: {\n          id: props.dbID\n        }\n      }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n    if (data) {\n      console.log('call..');\n      props.cbLoadDBData(convertDB2FormData(data));\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 10\n    }\n  });\n}\nvar ClientNew = /*#__PURE__*/function (_Component) {\n  _inherits(ClientNew, _Component);\n  function ClientNew(props) {\n    var _this;\n    _classCallCheck(this, ClientNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ClientNew).call(this, props));\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    var dbID = null;\n    var dbLoaded = true;\n    var incomeID = _this.props.match.params.incomeID;\n    if (incomeID) {\n      dbID = incomeID;\n      dbLoaded = false;\n    }\n    _this.state = {\n      dataID: dbID,\n      curSubFormID: 'ClientInformationSubForm',\n      curSubForm: ClientInformationSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }\n        //         ]\n        //     }\n        // }\n      ],\n      formSteps: [{\n        id: 'ClientInformationSubForm',\n        icon: 'icon_ex.png',\n        title: 'Client Information'\n      },\n      // {\n      //     id: 'MyDetailsInformationSubForm',\n      //     icon: 'icon_ex.png',\n      //     title: 'Client Details'\n      // },\n      {\n        id: 'QuestionSpousePartnerHasSubForm',\n        icon: 'icon_ex.png',\n        title: 'Spouse / Partner Information'\n      }, {\n        id: 'QuestionDependentSubForm',\n        icon: 'icon_ex.png',\n        title: 'Dependents'\n      }, {\n        id: 'QuestionTrustSubForm',\n        icon: 'icon_ex.png',\n        title: 'Trust'\n      }, {\n        id: 'QuestionCorporationSubForm',\n        icon: 'icon_ex.png',\n        title: 'Corporate'\n      }, {\n        id: 'QuestionCharitySubForm',\n        icon: 'icon_ex.png',\n        title: 'Charity'\n      }, {\n        id: 'QuestionFinanciallyOthersSubForm',\n        icon: 'icon_ex.png',\n        title: 'Others Financially Impacted'\n      }],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      isEndForm: false\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(ClientNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.goSubForm('ClientInformationSubForm');\n      // this.goSubForm(\"ProfessionalContactsSubForm\");\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index]['id'] == formID) {\n          var data = formData[index]['data'];\n          var fields = data['fields'];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex]['id'] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return '';\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var varQL = null;\n      switch (subFormID) {\n        case 'MyDetailsInformationSubForm':\n          break;\n        case 'ClientSpouseInformationSubForm':\n          varQL = {\n            client: {\n              firstName: this.getSubFormFieldValue(subFormID, 'clientFirstName'),\n              lastName: this.getSubFormFieldValue(subFormID, 'clientLastName')\n            },\n            spouse: {\n              firstName: this.getSubFormFieldValue(subFormID, 'spouseFirstName'),\n              lastName: this.getSubFormFieldValue(subFormID, 'spouseLastName')\n            }\n          };\n          break;\n        case 'DependentsSubForm':\n          varQL = {\n            dependents: subFormData\n          };\n          break;\n        case 'ClientInformationSubForm':\n          varQL = {\n            client: {\n              birthdate: this.getSubFormFieldValue(subFormID, 'clientBirthdate'),\n              estimatedDeathAge: this.getSubFormFieldValue(subFormID, 'clientEstimatedDeathAge') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'clientEstimatedDeathAge')) : 0,\n              // \"\": this.getSubFormFieldValue(subFormID, 'clientCurrentAge'),\n              primaryContactNumber: this.getSubFormFieldValue(subFormID, 'clientPrimaryContactNumber'),\n              secondaryContactNumber: this.getSubFormFieldValue(subFormID, 'clientSecondaryContactNumber'),\n              workContactNumber: this.getSubFormFieldValue(subFormID, 'clientWorkContactNumber'),\n              emailAddress: this.getSubFormFieldValue(subFormID, 'clientEmailAddress'),\n              secondaryEmailAddress: this.getSubFormFieldValue(subFormID, 'clientSecondaryEmailAddress'),\n              gender: this.getSubFormFieldValue(subFormID, 'clientGender'),\n              investmentKnowledge: this.getSubFormFieldValue(subFormID, 'clientInvestmentKnowledge'),\n              retirementDate: this.getSubFormFieldValue(subFormID, 'clientRetirementDate'),\n              notes: this.getSubFormFieldValue(subFormID, 'clientNotes')\n            },\n            address: {\n              firstLine: this.getSubFormFieldValue(subFormID, 'clientAddressFirstLine'),\n              secondLine: this.getSubFormFieldValue(subFormID, 'clientAddressSecondLine'),\n              city: this.getSubFormFieldValue(subFormID, 'clientAddressCity'),\n              postalCode: this.getSubFormFieldValue(subFormID, 'clientAddressPostalCode'),\n              country: this.getSubFormFieldValue(subFormID, 'clientAddressCountry'),\n              state: this.getSubFormFieldValue(subFormID, 'clientAddressState')\n            }\n          };\n          break;\n        case 'SpouseInformationSubForm':\n          varQL = {\n            spouse: {\n              birthdate: this.getSubFormFieldValue(subFormID, 'spouseBirthdate'),\n              estimatedDeathAge: this.getSubFormFieldValue(subFormID, 'spouseEstimatedDeathAge') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'spouseEstimatedDeathAge')) : 0,\n              // \"\": this.getSubFormFieldValue(subFormID, 'spouseCurrentAge'),\n              emailAddress: this.getSubFormFieldValue(subFormID, 'spouseEmailAddress'),\n              secondaryEmailAddress: this.getSubFormFieldValue(subFormID, 'spouseSecondaryEmailAddress'),\n              gender: this.getSubFormFieldValue(subFormID, 'spouseGender'),\n              primaryContactNumber: this.getSubFormFieldValue(subFormID, 'spousePrimaryContactNumber'),\n              secondaryContactNumber: this.getSubFormFieldValue(subFormID, 'spouseSecondaryContactNumber'),\n              workContactNumber: this.getSubFormFieldValue(subFormID, 'spouseWorkContactNumber'),\n              investmentKnowledge: this.getSubFormFieldValue(subFormID, 'spouseInvestmentKnowledge'),\n              retirementDate: this.getSubFormFieldValue(subFormID, 'spouseRetirementDate')\n            }\n          };\n          break;\n        case 'TrustInformationSubForm':\n          varQL = {\n            trusts: subFormData\n          };\n          break;\n        case 'CorporateInformationSubForm':\n          varQL = {\n            corporates: subFormData\n          };\n          break;\n        case 'CharityInformationSubForm':\n          varQL = {\n            charities: subFormData\n          };\n          break;\n        case 'OthersImpactedSubForm':\n          varQL = {\n            financiallyImpacteds: subFormData\n          };\n          break;\n        case 'ProfessionalContactsSubForm':\n          varQL = {\n            professionalContacts: subFormData\n          };\n          break;\n        case 'EndSubForm':\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          formData[findex]['data'] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      var varQL = this.createQLVariable(subFormID, subFormData);\n      console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n      var instance = this;\n      if (varQL != null) {\n        if (this.state.dataID == null) {\n          fnMutationClientAdd({\n            variables: {\n              data: varQL\n            }\n          }).then(function (response) {\n            instance.setState({\n              dataID: response['data']['createClient']['id']\n            });\n          });\n        } else {\n          fnMutationClientUpdate({\n            variables: {\n              id: this.state.dataID,\n              data: varQL\n            }\n          });\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var fromState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pformData = arguments.length > 2 ? arguments[2] : undefined;\n      var formData;\n      if (fromState) {\n        formData = this.state.formData;\n      } else {\n        formData = pformData;\n      }\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          return formData[findex]['data'];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      this.setState({\n        formVisible: false\n      });\n      var nextSubForm = ClientSpouseInformationSubForm;\n      var subFormData = this.getSubFormData(subFormID);\n      switch (subFormID) {\n        case 'ClientSpouseInformationSubForm':\n          nextSubForm = ClientSpouseInformationSubForm;\n          break;\n        case 'ClientInformationSubForm':\n          nextSubForm = ClientInformationSubForm;\n          break;\n        case 'SpouseInformationSubForm':\n          nextSubForm = SpouseInformationSubForm;\n          break;\n        case 'DependentsSubForm':\n          nextSubForm = DependentsSubForm;\n          break;\n        case 'TrustInformationSubForm':\n          nextSubForm = TrustInformationSubForm;\n          break;\n        case 'CorporateInformationSubForm':\n          nextSubForm = CorporateInformationSubForm;\n          break;\n        case 'CharityInformationSubForm':\n          nextSubForm = CharityInformationSubForm;\n          break;\n        case 'OthersImpactedSubForm':\n          nextSubForm = OthersImpactedSubForm;\n          break;\n        case 'ProfessionalContactsSubForm':\n          nextSubForm = ProfessionalContactsSubForm;\n          break;\n        case 'MyDetailsInformationSubForm':\n          nextSubForm = MyDetailsInformationSubForm;\n          break;\n        case 'QuestionSpousePartnerHasSubForm':\n          nextSubForm = QuestionSpousePartnerHasSubForm;\n          break;\n        case 'QuestionDependentSubForm':\n          nextSubForm = QuestionDependentSubForm;\n          break;\n        case 'QuestionTrustSubForm':\n          nextSubForm = QuestionTrustSubForm;\n          break;\n        case 'QuestionCorporationSubForm':\n          nextSubForm = QuestionCorporationSubForm;\n          break;\n        case 'QuestionCharitySubForm':\n          nextSubForm = QuestionCharitySubForm;\n          break;\n        case 'QuestionFinanciallyOthersSubForm':\n          nextSubForm = QuestionFinanciallyOthersSubForm;\n          break;\n        case 'EndSubForm':\n          nextSubForm = EndSubForm;\n          this.setState({\n            isEndForm: true\n          });\n          break;\n      }\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubFormID: subFormID,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(formData) {\n      console.log('formData:', formData);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          formVisible: true,\n          dbLoaded: true,\n          formData: formData,\n          subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n        });\n      }, 100);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navlinks = [{\n        href: '/',\n        title: 'Home'\n      }, {\n        href: '/modules',\n        title: 'Modules'\n      }, {\n        href: '/clients_plans',\n        title: 'Client and Plans'\n      }];\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = 'form-page-container-wrap';\n      if (this.state.isRightSideOpen) {\n        formpageClassName = 'form-page-container-wrap right-side--opend';\n      } else {\n        formpageClassName = 'form-page-container-wrap right-side--collapsed';\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-container align-items-top justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-asset\",\n        src: AssetPlanet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 15\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var elementPos = _this3.state.formSteps.map(function (x) {\n          return x.id;\n        }).indexOf(_this3.state.curSubFormID);\n        var classBtn = 'btn nav-items btn-circle';\n        if (elementPos === -1) {\n          elementPos = prevPos;\n        } else {\n          prevPos = elementPos;\n        }\n        classBtn = elementPos >= index ? 'btn nav-items btn-circle active' : 'btn nav-items btn-circle';\n        if (_this3.state.isEndForm) classBtn = 'btn nav-items btn-circle disabled';\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"process-step\",\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: classBtn,\n          \"data-toggle\": \"tab\",\n          onClick: function onClick() {\n            if (classBtn !== 'btn nav-items btn-circle disabled') _this3.goSubForm(formStep.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: 30,\n            color: '#006400'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 25\n          }\n        }, index + 1)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"step-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 23\n          }\n        }, formStep.title));\n      })))), /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 11\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbID: this.state.dbID,\n        cbLoadDBData: this.loadDBData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-nav-history text-uppercase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 13\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 38\n        }\n      }, \"Loading...\"), this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormPagePose, {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? 'visible' : 'hidden',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side custom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ClientInfoSideDisplay, {\n        data: this.props.clientInfoObject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 1\n        }\n      }))));\n    }\n  }]);\n  return ClientNew;\n}(Component);\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  // console.log(\"all inventries\",state.rootReducer.clientInfo.clientInfoObject);\n\n  console.log(\"in map siaptach to props\");\n  return {\n    // dispatching plain actions\n    handleClientInfoObject: function handleClientInfoObject(data) {\n      return dispatch(setClientInfoObject(data));\n    }\n  };\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(\"all client info data\", state.rootReducer.clientInfo.clientInfoObject);\n  return {\n    clientInfoObject: state.rootReducer.clientInfo.clientInfoObject\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientNew);","map":{"version":3,"names":["React","Component","connect","Link","Icon","ImageIcon","AssetPlanet","useMutation","useQuery","QL_CLIENT_ADD","QL_CLIENT_UPDATE","QL_CLIENT_GET","FormPagePose","ClientSpouseInformationSubForm","DependentsSubForm","ClientInformationSubForm","SpouseInformationSubForm","TrustInformationSubForm","CorporateInformationSubForm","CharityInformationSubForm","OthersImpactedSubForm","ProfessionalContactsSubForm","MyDetailsInformationSubForm","QuestionSpousePartnerHasSubForm","QuestionDependentSubForm","QuestionTrustSubForm","QuestionCorporationSubForm","QuestionCharitySubForm","QuestionFinanciallyOthersSubForm","EndSubForm","setClientInfoObject","ClientInfoSideDisplay","fnMutationClientAdd","dataMutationClientAdd","fnMutationClientUpdate","dataMutationClientUpdate","prevPos","HiddenHook","convertDB2FormData","data","console","log","formData","push","id","FnCreateFormData","clientFirstName","clientLastName","spouseFirstName","spouseLastName","visible","title","clientBirthdate","clientEstimatedDeathAge","clientPrimaryContactNumber","clientSecondaryContactNumber","clientWorkContactNumber","clientEmailAddress","clientSecondaryEmailAddress","clientGender","clientInvestmentKnowledge","clientRetirementDate","clientNotes","clientAddressFirstLine","clientAddressSecondLine","clientAddressCity","clientAddressPostalCode","clientAddressCountry","clientAddressState","spouseBirthdate","spouseEstimatedDeathAge","spouseEmailAddress","spouseSecondaryEmailAddress","spouseGender","spousePrimaryContactNumber","spouseSecondaryContactNumber","spouseWorkContactNumber","spouseInvestmentKnowledge","spouseRetirementDate","LoadDBDataHook","props","dbID","variables","loading","error","cbLoadDBData","ClientNew","toggleRightSide","e","preventDefault","setState","isRightSideOpen","state","dbLoaded","incomeID","match","params","dataID","curSubFormID","curSubForm","formVisible","subFormData","formSteps","icon","isEndForm","goSubForm","bind","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","loadDBData","formID","fieldID","index","length","fields","findex","field","value","subFormID","varQL","client","firstName","lastName","spouse","dependents","birthdate","estimatedDeathAge","parseInt","primaryContactNumber","secondaryContactNumber","workContactNumber","emailAddress","secondaryEmailAddress","gender","investmentKnowledge","retirementDate","notes","address","firstLine","secondLine","city","postalCode","country","trusts","corporates","charities","financiallyImpacteds","professionalContacts","bFound","instance","then","response","fromState","pformData","nextSubForm","setTimeout","navlinks","href","SubForm","formpageClassName","map","formStep","elementPos","x","indexOf","classBtn","fontSize","color","clientInfoObject","mapDispatchToProps","dispatch","handleClientInfoObject","mapStateToProps","rootReducer","clientInfo"],"sources":["/home/albatross/gitCode/shared/src/pages/client_info/clients_plans/ClientNew.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport ImageIcon from 'assets/images/asset.png';\nimport AssetPlanet from 'assets/images/asset-planet-logo.jpg';\n\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport {\n  QL_CLIENT_ADD,\n  QL_CLIENT_UPDATE,\n  QL_CLIENT_GET,\n} from '../../../constants/queries';\n\nimport { FormPagePose } from '../../../components/Animations';\n\nimport ClientSpouseInformationSubForm from './subforms/ClientSpouseInformationSubForm';\nimport DependentsSubForm from './subforms/DependentsSubForm';\nimport ClientInformationSubForm from './subforms/ClientInformationSubForm';\nimport SpouseInformationSubForm from './subforms/SpouseInformationSubForm';\nimport TrustInformationSubForm from './subforms/TrustInformationSubForm';\nimport CorporateInformationSubForm from './subforms/CorporateInformationSubForm';\nimport CharityInformationSubForm from './subforms/CharityInformationSubForm';\nimport OthersImpactedSubForm from './subforms/OthersImpactedSubForm';\nimport ProfessionalContactsSubForm from './subforms/ProfessionalContactsSubForm';\nimport MyDetailsInformationSubForm from './subforms/MyDetailsInformationSubForm';\nimport QuestionSpousePartnerHasSubForm from './subforms/QuestionSpousePartnerHasSubForm';\nimport QuestionDependentSubForm from './subforms/QuestionDependentSubForm';\nimport QuestionTrustSubForm from './subforms/QuestionTrustSubForm';\nimport QuestionCorporationSubForm from './subforms/QuestionCorporationSubForm';\nimport QuestionCharitySubForm from './subforms/QuestionCharitySubForm';\nimport QuestionFinanciallyOthersSubForm from './subforms/QuestionFinanciallyOthersSubForm';\nimport EndSubForm from './subforms/EndSubForm';\nimport { setClientInfoObject } from '../../../redux/slices/clientInfoSlice';\nimport ClientInfoSideDisplay from './operations/ClientInfoSideDisplay';\n\nvar fnMutationClientAdd = null;\nvar dataMutationClientAdd = null;\n\nvar fnMutationClientUpdate = null;\nvar dataMutationClientUpdate = null;\nlet prevPos = 0;\n\nfunction HiddenHook() {\n  [fnMutationClientAdd, { dataMutationClientAdd }] = useMutation(QL_CLIENT_ADD);\n  [fnMutationClientUpdate, { dataMutationClientUpdate }] = useMutation(\n    QL_CLIENT_UPDATE\n  );\n\n  return <React.Fragment></React.Fragment>;\n}\n\n\n\nfunction convertDB2FormData(data) {\n  console.log('readDataaaaaaaaaaaaaaaaa:', data);\n\n\n  // this.props.dispatch(this.props.handleClientInfoObject(data))\n  let formData = [];\n\n  formData.push({\n    id: 'ClientSpouseInformationSubForm',\n    data: ClientSpouseInformationSubForm.FnCreateFormData({\n      clientFirstName: data['client']['firstName'],\n      clientLastName: data['client']['lastName'],\n      spouseFirstName: data['client']['spouse']['firstName'],\n      spouseLastName: data['client']['spouse']['lastName'],\n    }),\n    visible: true,\n  });\n\n  formData.push({\n    id: 'DependentsSubForm',\n    data: {\n      title: 'Include your children and any other dependents',\n      data: data['client']['dependents'],\n    },\n    visible: false,\n  });\n\n  formData.push({\n    id: 'ClientInformationSubForm',\n    data: ClientInformationSubForm.FnCreateFormData({\n      clientBirthdate: data['client']['birthdate'],\n      clientEstimatedDeathAge: data['client']['estimatedDeathAge'],\n      clientPrimaryContactNumber: data['client']['primaryContactNumber'],\n      clientSecondaryContactNumber: data['client']['secondaryContactNumber'],\n      clientWorkContactNumber: data['client']['workContactNumber'],\n      clientEmailAddress: data['client']['emailAddress'],\n      clientSecondaryEmailAddress: data['client']['secondaryEmailAddress'],\n      clientGender: data['client']['gender'],\n      clientInvestmentKnowledge: data['client']['investmentKnowledge'],\n      clientRetirementDate: data['client']['retirementDate'],\n      clientNotes: data['client']['notes'],\n\n      clientAddressFirstLine: data['client']['address']['firstLine'],\n      clientAddressSecondLine: data['client']['secondLine'],\n      clientAddressCity: data['client']['address']['city'],\n      clientAddressPostalCode: data['client']['address']['postalCode'],\n      clientAddressCountry: data['client']['address']['country'],\n      clientAddressState: data['client']['address']['state'],\n    }),\n    visible: true,\n  });\n  formData.push({\n    id: 'SpouseInformationSubForm',\n    data: SpouseInformationSubForm.FnCreateFormData({\n      spouseBirthdate: data['client']['spouse']['birthdate'],\n      spouseEstimatedDeathAge: data['client']['spouse']['estimatedDeathAge'],\n      spouseEmailAddress: data['client']['spouse']['emailAddress'],\n      spouseSecondaryEmailAddress:\n        data['client']['spouse']['secondaryEmailAddress'],\n      spouseGender: data['client']['spouse']['gender'],\n      spousePrimaryContactNumber:\n        data['client']['spouse']['primaryContactNumber'],\n      spouseSecondaryContactNumber:\n        data['client']['spouse']['secondaryContactNumber'],\n      spouseWorkContactNumber: data['client']['spouse']['workContactNumber'],\n      spouseInvestmentKnowledge:\n        data['client']['spouse']['investmentKnowledge'],\n      spouseRetirementDate: data['client']['spouse']['retirementDate'],\n    }),\n    visible: true,\n  });\n\n  formData.push({\n    id: 'TrustInformationSubForm',\n    data: {\n      title: 'Trust Information',\n      data: data['client']['trusts'],\n    },\n    visible: false,\n  });\n\n  formData.push({\n    id: 'CorporateInformationSubForm',\n    data: {\n      title: 'Coporate Information',\n      data: data['client']['corporates'],\n    },\n    visible: false,\n  });\n\n  formData.push({\n    id: 'CharityInformationSubForm',\n    data: {\n      title: 'Charity Information',\n      data: data['client']['charities'],\n    },\n    visible: false,\n  });\n\n  formData.push({\n    id: 'OthersImpactedSubForm',\n    data: {\n      title: 'Others Financially Impacted',\n      data: data['client']['financiallyImpacteds'],\n    },\n    visible: false,\n  });\n\n  formData.push({\n    id: 'ProfessionalContactsSubForm',\n    data: {\n      title: 'Professional Contacts',\n      data: data['client']['professionalContacts'],\n    },\n    visible: false,\n  });\n\n  return formData;\n}\n\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != '') {\n    const { data, loading, error } = useQuery(QL_CLIENT_GET, {\n      variables: { id: props.dbID },\n    });\n    if (data) {\n      console.log('call..');\n      props.cbLoadDBData(convertDB2FormData(data));\n    }\n  }\n\n  return <React.Fragment></React.Fragment>;\n}\n\nclass ClientNew extends Component {\n  constructor(props) {\n    super(props);\n\n    let dbID = null;\n    let dbLoaded = true;\n\n    const { incomeID } = this.props.match.params;\n\n    if (incomeID) {\n      dbID = incomeID;\n      dbLoaded = false;\n    }\n\n    this.state = {\n      dataID: dbID,\n      curSubFormID: 'ClientInformationSubForm',\n      curSubForm: ClientInformationSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }\n        //         ]\n        //     }\n        // }\n      ],\n      formSteps: [\n        {\n          id: 'ClientInformationSubForm',\n          icon: 'icon_ex.png',\n          title: 'Client Information',\n        },\n        // {\n        //     id: 'MyDetailsInformationSubForm',\n        //     icon: 'icon_ex.png',\n        //     title: 'Client Details'\n        // },\n        {\n          id: 'QuestionSpousePartnerHasSubForm',\n          icon: 'icon_ex.png',\n          title: 'Spouse / Partner Information',\n        },\n        {\n          id: 'QuestionDependentSubForm',\n          icon: 'icon_ex.png',\n          title: 'Dependents',\n        },\n        {\n          id: 'QuestionTrustSubForm',\n          icon: 'icon_ex.png',\n          title: 'Trust',\n        },\n        {\n          id: 'QuestionCorporationSubForm',\n          icon: 'icon_ex.png',\n          title: 'Corporate',\n        },\n        {\n          id: 'QuestionCharitySubForm',\n          icon: 'icon_ex.png',\n          title: 'Charity',\n        },\n        {\n          id: 'QuestionFinanciallyOthersSubForm',\n          icon: 'icon_ex.png',\n          title: 'Others Financially Impacted',\n        },\n      ],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      isEndForm: false\n    };\n\n    this.goSubForm = this.goSubForm.bind(this);\n    this.updateSubForm = this.updateSubForm.bind(this);\n    this.getSubFormData = this.getSubFormData.bind(this);\n    this.getSubFormField = this.getSubFormField.bind(this);\n\n    this.createQLVariable = this.createQLVariable.bind(this);\n    this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n    this.toggleRightSide = this.toggleRightSide.bind(this);\n\n    this.loadDBData = this.loadDBData.bind(this);\n  }\n\n  componentDidMount() {\n    this.goSubForm('ClientInformationSubForm');\n    // this.goSubForm(\"ProfessionalContactsSubForm\");\n  }\n\n  getSubFormField(formID, fieldID) {\n    let formData = this.state.formData;\n\n    for (var index = 0; index < formData.length; index++) {\n      if (formData[index]['id'] == formID) {\n        let data = formData[index]['data'];\n        let fields = data['fields'];\n        for (var findex = 0; findex < fields.length; findex++) {\n          if (fields[findex]['id'] == fieldID) {\n            return fields[findex];\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getSubFormFieldValue(formID, fieldID) {\n    let field = this.getSubFormField(formID, fieldID);\n\n    if (field == null) {\n      return '';\n    } else {\n      return field.value;\n    }\n  }\n\n  createQLVariable(subFormID, subFormData) {\n    let varQL = null;\n\n    switch (subFormID) {\n      case 'MyDetailsInformationSubForm':\n        break;\n      case 'ClientSpouseInformationSubForm':\n        varQL = {\n          client: {\n            firstName: this.getSubFormFieldValue(subFormID, 'clientFirstName'),\n            lastName: this.getSubFormFieldValue(subFormID, 'clientLastName'),\n          },\n          spouse: {\n            firstName: this.getSubFormFieldValue(subFormID, 'spouseFirstName'),\n            lastName: this.getSubFormFieldValue(subFormID, 'spouseLastName'),\n          },\n        };\n        break;\n      case 'DependentsSubForm':\n        varQL = {\n          dependents: subFormData,\n        };\n        break;\n      case 'ClientInformationSubForm':\n        varQL = {\n          client: {\n            birthdate: this.getSubFormFieldValue(subFormID, 'clientBirthdate'),\n            estimatedDeathAge:\n              this.getSubFormFieldValue(subFormID, 'clientEstimatedDeathAge') !=\n              ''\n                ? parseInt(\n                    this.getSubFormFieldValue(\n                      subFormID,\n                      'clientEstimatedDeathAge'\n                    )\n                  )\n                : 0,\n            // \"\": this.getSubFormFieldValue(subFormID, 'clientCurrentAge'),\n            primaryContactNumber: this.getSubFormFieldValue(\n              subFormID,\n              'clientPrimaryContactNumber'\n            ),\n            secondaryContactNumber: this.getSubFormFieldValue(\n              subFormID,\n              'clientSecondaryContactNumber'\n            ),\n            workContactNumber: this.getSubFormFieldValue(\n              subFormID,\n              'clientWorkContactNumber'\n            ),\n            emailAddress: this.getSubFormFieldValue(\n              subFormID,\n              'clientEmailAddress'\n            ),\n            secondaryEmailAddress: this.getSubFormFieldValue(\n              subFormID,\n              'clientSecondaryEmailAddress'\n            ),\n            gender: this.getSubFormFieldValue(subFormID, 'clientGender'),\n            investmentKnowledge: this.getSubFormFieldValue(\n              subFormID,\n              'clientInvestmentKnowledge'\n            ),\n            retirementDate: this.getSubFormFieldValue(\n              subFormID,\n              'clientRetirementDate'\n            ),\n            notes: this.getSubFormFieldValue(subFormID, 'clientNotes'),\n          },\n          address: {\n            firstLine: this.getSubFormFieldValue(\n              subFormID,\n              'clientAddressFirstLine'\n            ),\n            secondLine: this.getSubFormFieldValue(\n              subFormID,\n              'clientAddressSecondLine'\n            ),\n            city: this.getSubFormFieldValue(subFormID, 'clientAddressCity'),\n            postalCode: this.getSubFormFieldValue(\n              subFormID,\n              'clientAddressPostalCode'\n            ),\n            country: this.getSubFormFieldValue(\n              subFormID,\n              'clientAddressCountry'\n            ),\n            state: this.getSubFormFieldValue(subFormID, 'clientAddressState'),\n          },\n        };\n        break;\n      case 'SpouseInformationSubForm':\n        varQL = {\n          spouse: {\n            birthdate: this.getSubFormFieldValue(subFormID, 'spouseBirthdate'),\n            estimatedDeathAge:\n              this.getSubFormFieldValue(subFormID, 'spouseEstimatedDeathAge') !=\n              ''\n                ? parseInt(\n                    this.getSubFormFieldValue(\n                      subFormID,\n                      'spouseEstimatedDeathAge'\n                    )\n                  )\n                : 0,\n            // \"\": this.getSubFormFieldValue(subFormID, 'spouseCurrentAge'),\n            emailAddress: this.getSubFormFieldValue(\n              subFormID,\n              'spouseEmailAddress'\n            ),\n            secondaryEmailAddress: this.getSubFormFieldValue(\n              subFormID,\n              'spouseSecondaryEmailAddress'\n            ),\n            gender: this.getSubFormFieldValue(subFormID, 'spouseGender'),\n            primaryContactNumber: this.getSubFormFieldValue(\n              subFormID,\n              'spousePrimaryContactNumber'\n            ),\n            secondaryContactNumber: this.getSubFormFieldValue(\n              subFormID,\n              'spouseSecondaryContactNumber'\n            ),\n            workContactNumber: this.getSubFormFieldValue(\n              subFormID,\n              'spouseWorkContactNumber'\n            ),\n            investmentKnowledge: this.getSubFormFieldValue(\n              subFormID,\n              'spouseInvestmentKnowledge'\n            ),\n            retirementDate: this.getSubFormFieldValue(\n              subFormID,\n              'spouseRetirementDate'\n            ),\n          },\n        };\n        break;\n      case 'TrustInformationSubForm':\n        varQL = {\n          trusts: subFormData,\n        };\n        break;\n      case 'CorporateInformationSubForm':\n        varQL = {\n          corporates: subFormData,\n        };\n        break;\n      case 'CharityInformationSubForm':\n        varQL = {\n          charities: subFormData,\n        };\n        break;\n      case 'OthersImpactedSubForm':\n        varQL = {\n          financiallyImpacteds: subFormData,\n        };\n        break;\n      case 'ProfessionalContactsSubForm':\n        varQL = {\n          professionalContacts: subFormData,\n        };\n        break;\n      case 'EndSubForm':\n    }\n\n    return varQL;\n  }\n\n  updateSubForm(subFormID, subFormData, visible = true) {\n    let formData = this.state.formData;\n\n    var bFound = false;\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex]['id'] == subFormID) {\n        formData[findex]['data'] = subFormData;\n        bFound = true;\n      }\n    }\n\n    if (!bFound) {\n      formData.push({\n        id: subFormID,\n        data: subFormData,\n        visible: visible,\n      });\n    }\n\n    let varQL = this.createQLVariable(subFormID, subFormData);\n\n    console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n\n    var instance = this;\n    if (varQL != null) {\n      if (this.state.dataID == null) {\n        fnMutationClientAdd({ variables: { data: varQL } }).then((response) => {\n          instance.setState({\n            dataID: response['data']['createClient']['id'],\n          });\n        });\n      } else {\n        fnMutationClientUpdate({\n          variables: { id: this.state.dataID, data: varQL },\n        });\n      }\n    }\n\n    this.setState({\n      formData: formData,\n    });\n  }\n\n  getSubFormData(subFormID, fromState = true, pformData) {\n    let formData;\n    if (fromState) {\n      formData = this.state.formData;\n    } else {\n      formData = pformData;\n    }\n\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex]['id'] == subFormID) {\n        return formData[findex]['data'];\n      }\n    }\n\n    return {};\n  }\n\n  goSubForm(subFormID) {\n    this.setState({\n      formVisible: false,\n    });\n\n    let nextSubForm = ClientSpouseInformationSubForm;\n    let subFormData = this.getSubFormData(subFormID);\n\n    switch (subFormID) {\n      case 'ClientSpouseInformationSubForm':\n        nextSubForm = ClientSpouseInformationSubForm;\n        break;\n      case 'ClientInformationSubForm':\n        nextSubForm = ClientInformationSubForm;\n        break;\n      case 'SpouseInformationSubForm':\n        nextSubForm = SpouseInformationSubForm;\n        break;\n      case 'DependentsSubForm':\n        nextSubForm = DependentsSubForm;\n        break;\n      case 'TrustInformationSubForm':\n        nextSubForm = TrustInformationSubForm;\n        break;\n      case 'CorporateInformationSubForm':\n        nextSubForm = CorporateInformationSubForm;\n        break;\n      case 'CharityInformationSubForm':\n        nextSubForm = CharityInformationSubForm;\n        break;\n      case 'OthersImpactedSubForm':\n        nextSubForm = OthersImpactedSubForm;\n        break;\n      case 'ProfessionalContactsSubForm':\n        nextSubForm = ProfessionalContactsSubForm;\n        break;\n      case 'MyDetailsInformationSubForm':\n        nextSubForm = MyDetailsInformationSubForm;\n        break;\n      case 'QuestionSpousePartnerHasSubForm':\n        nextSubForm = QuestionSpousePartnerHasSubForm;\n        break;\n      case 'QuestionDependentSubForm':\n        nextSubForm = QuestionDependentSubForm;\n        break;\n      case 'QuestionTrustSubForm':\n        nextSubForm = QuestionTrustSubForm;\n        break;\n      case 'QuestionCorporationSubForm':\n        nextSubForm = QuestionCorporationSubForm;\n        break;\n      case 'QuestionCharitySubForm':\n        nextSubForm = QuestionCharitySubForm;\n        break;\n      case 'QuestionFinanciallyOthersSubForm':\n        nextSubForm = QuestionFinanciallyOthersSubForm;\n        break;\n      case 'EndSubForm':\n        nextSubForm = EndSubForm;\n        this.setState({isEndForm: true})\n        break;\n    }\n\n    setTimeout(() => {\n      this.setState({\n        formVisible: true,\n        curSubFormID: subFormID,\n        curSubForm: nextSubForm,\n        subFormData: subFormData,\n      });\n    }, 100);\n  }\n\n  toggleRightSide = (e) => {\n    e.preventDefault();\n    this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n  };\n\n  loadDBData(formData) {\n    console.log('formData:', formData);\n\n    var instance = this;\n    setTimeout(function () {\n      instance.setState({\n        formVisible: true,\n        dbLoaded: true,\n        formData: formData,\n        subFormData: instance.getSubFormData(\n          instance.state.curSubFormID,\n          false,\n          formData\n        ),\n      });\n    }, 100);\n  }\n\n  render() {\n    const navlinks = [\n      {\n        href: '/',\n        title: 'Home',\n      },\n      {\n        href: '/modules',\n        title: 'Modules',\n      },\n      {\n        href: '/clients_plans',\n        title: 'Client and Plans',\n      },\n    ];\n\n    let SubForm = this.state.curSubForm;\n\n    let formpageClassName = 'form-page-container-wrap';\n    if (this.state.isRightSideOpen) {\n      formpageClassName = 'form-page-container-wrap right-side--opend';\n    } else {\n      formpageClassName = 'form-page-container-wrap right-side--collapsed';\n    }\n    return (\n      <div className={formpageClassName}>\n        <div className='form-page--main-side'>\n          <div className='steps'>\n            <div className='logo-container align-items-top justify-content-center'>\n              <img className='img-asset' src={AssetPlanet} />\n            </div>\n            <div className='process'>\n              <div className='process-row'>\n                {this.state.formSteps.map((formStep, index) => {\n                  let elementPos = this.state.formSteps\n                    .map(function (x) {\n                      return x.id;\n                    })\n                    .indexOf(this.state.curSubFormID);\n\n                    let classBtn = 'btn nav-items btn-circle'\n\n                  if (elementPos === -1) {\n                    elementPos = prevPos;\n                  } else {\n                    prevPos = elementPos;\n                  }\n\n                  classBtn =  elementPos >= index\n                  ? 'btn nav-items btn-circle active'\n                  : 'btn nav-items btn-circle'\n\n                  if(this.state.isEndForm)  classBtn = 'btn nav-items btn-circle disabled'\n\n                  return (\n                    <div className='process-step' key={index}>\n                      <button\n                        type='button'\n                        className={\n                        classBtn\n                        }\n                        data-toggle='tab'\n                        onClick={() =>  {\n                          if(classBtn !== 'btn nav-items btn-circle disabled')\n                            this.goSubForm(formStep.id)}}\n                      >\n                        {/* <img className=\"img-icon\" src={ImageIcon} /> */}\n                        <div style={{ fontSize: 30, color: '#006400' }}>\n                          {index + 1}\n                        </div>\n                      </button>\n                      <p className='step-title'>{formStep.title}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <HiddenHook />\n          {!this.state.dbLoaded && (\n            <LoadDBDataHook\n              dbLoaded={this.state.dbLoaded}\n              dbID={this.state.dbID}\n              cbLoadDBData={this.loadDBData}\n            />\n          )}\n          <div className='container'>\n            <div className='page-nav-history text-uppercase'>\n              {/* {navlinks.map((navlink, index) => {\n                return (\n                  <span key={index}>\n                    <Link\n                      key={index}\n                      to={navlink.href}\n                      className='page-nav-link'\n                    >\n                      {navlink.title}\n                    </Link>\n                    {index != navlinks.length - 1 ? '/' : null}\n                  </span>\n                );\n              })} */}\n            </div>\n            {!this.state.dbLoaded && <div>Loading...</div>}\n            {this.state.dbLoaded && (\n              <div className='form-page-container'>\n                <div className='form-page--left-side'>\n                  <FormPagePose\n                    className='info-form-block'\n                    pose={this.state.formVisible ? 'visible' : 'hidden'}\n                  >\n                    <SubForm\n                      subFormData={this.state.subFormData}\n                      cbGoSubForm={this.goSubForm}\n                      cbUpdateSubForm={this.updateSubForm}\n                      formData={this.state.formData}\n                      cbGetSubFormField={this.getSubFormField}\n                    />\n                  </FormPagePose>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className='form-page--right-side custom'>\n          <span\n            className='right-side-collapse-icon'\n            onClick={this.toggleRightSide}\n          >\n            <i className='fe-menu'></i>\n          </span>\n          <div className='form-page--right-side-wrap'>\n\n<ClientInfoSideDisplay \ndata={this.props.clientInfoObject}\n\n/>\n</div>\n          {/* <div className='form-page--right-side-wrap'>\n            {this.state.formData.map((subForm, sindex) => {\n              if (subForm.visible == false) {\n                return <div key={sindex}></div>;\n              }\n\n              let subFormData = subForm.data;\n              return (\n                <div className='form-brief-block' key={sindex}>\n                  <div className='form-brief-top'>\n                    <h4 className='form-brief-title'>{subFormData.title}</h4>\n                    <span\n                      className='form-brief-edit-btn'\n                      onClick={() => this.goSubForm(subForm.id)}\n                    >\n                      <Icon type='edit'></Icon>\n                    </span>\n                  </div>\n                  <div className='form-brief-content'>\n                    {subFormData.fields.map((field, ffindex) => {\n                      return (\n                        <div className='form-brief-item' key={ffindex}>\n                          <p className='form-brief-item-title'>\n                            {field.title != '' ? field.title + ':' : null}{' '}\n                          </p>\n                          <p className='form-brief-item-value'>{field.value}</p>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div> */}\n        </div>\n         {/* <div className='form-page--right-side custom'>\n\n\n        <div className='form-page--right-side-wrap'>\n\n        <ClientInfoSideDisplay \n        data={this.props.clientInfoObject}\n        \n        />\n        </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n  // console.log(\"all inventries\",state.rootReducer.clientInfo.clientInfoObject);\n\n  console.log(\"in map siaptach to props\");\n\n  return {\n       // dispatching plain actions\n       handleClientInfoObject: (data) => dispatch(setClientInfoObject(data)),\n  };\n};\n\nconst mapStateToProps = (state) => {\n\n  console.log(\"all client info data\",state.rootReducer.clientInfo.clientInfoObject);\n\n  return {\n    clientInfoObject: state.rootReducer.clientInfo.clientInfoObject\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ClientNew);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}