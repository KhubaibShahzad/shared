{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/modules/assistance/assistance_in/AssistanceReceivedNew.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport ImageIcon from 'assets/images/asset.png';\nimport AssetPlanet from 'assets/images/asset-planet-logo.jpg';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { QL_ASSISTANCE_IN_ADD, QL_ASSISTANCE_IN_UPDATE, QL_ASSISTANCE_IN_GET } from '../../../../constants/queries';\nimport { FormPagePose } from '../../../../components/Animations';\nimport QuestionCurrentFutureSubForm from './subforms/QuestionCurrentFutureSubForm';\nimport CurrentAssistanceSubForm from './subforms/CurrentAssistanceSubForm';\nimport FutureAssistanceSubForm from './subforms/FutureAssistanceSubForm';\nimport EndSubForm from './subforms/EndSubForm';\nvar fnMutationAssistanceInAdd = null;\nvar dataMutationAssistanceInAdd = null;\nvar fnMutationAssistanceInUpdate = null;\nvar dataMutationAssistanceInUpdate = null;\nvar prevPos = 0;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_ASSISTANCE_IN_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationAssistanceInAdd = _useMutation2[0];\n  dataMutationAssistanceInAdd = _useMutation2[1].dataMutationAssistanceInAdd;\n  var _useMutation3 = useMutation(QL_ASSISTANCE_IN_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationAssistanceInUpdate = _useMutation4[0];\n  dataMutationAssistanceInUpdate = _useMutation4[1].dataMutationAssistanceInUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  });\n}\nfunction convertDB2FormData(data) {\n  var formData = [];\n  formData.push({\n    id: 'CurrentAssistanceSubForm',\n    data: CurrentAssistanceSubForm.FnCreateFormData({\n      recipientFirstName: data['assistanceIn']['recipientFirstName'],\n      recipientLastName: data['assistanceIn']['recipientLastName'],\n      assistanceFirstName: data['assistanceIn']['personProvidingAssistanceFirstName'],\n      assistanceLastName: data['assistanceIn']['personProvidingAssistanceLastName'],\n      relationship: data['assistanceIn']['relationship'],\n      amountRecieved: data['assistanceIn']['amountReceived'],\n      frequency: data['assistanceIn']['frequency'],\n      estimatedStartDate: data['assistanceIn']['estimatedStartDate'] == null ? '' : data['assistanceIn']['estimatedStartDate'],\n      assistanceEnds: data['assistanceIn']['assistanceEnds']\n    }),\n    visible: true\n  });\n  formData.push({\n    id: 'FutureAssistanceSubForm',\n    data: FutureAssistanceSubForm.FnCreateFormData({\n      inheritanceAmount: data['assistanceIn']['inheritanceAmount'],\n      yearExpectedIncome: data['assistanceIn']['yearOfExpectedIncome'],\n      firstName: data['assistanceIn']['personInheritingFromFirstName'],\n      lastName: data['assistanceIn']['personInheritingFromLastName'],\n      relationship: data['assistanceIn']['relationship']\n    }),\n    visible: true\n  });\n  return formData;\n}\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != '') {\n    var _useQuery = useQuery(QL_ASSISTANCE_IN_GET, {\n        variables: {\n          id: props.dbID\n        }\n      }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n    if (data) {\n      console.log('call..', data);\n      props.cbLoadDBData(convertDB2FormData(data));\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  });\n}\nvar AssistanceReceivedNew = /*#__PURE__*/function (_Component) {\n  _inherits(AssistanceReceivedNew, _Component);\n  function AssistanceReceivedNew(props) {\n    var _this;\n    _classCallCheck(this, AssistanceReceivedNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssistanceReceivedNew).call(this, props));\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    var dbID = null;\n    var dbLoaded = true;\n    var assistanceInID = _this.props.match.params.assistanceInID;\n    if (assistanceInID) {\n      dbID = assistanceInID;\n      dbLoaded = false;\n    }\n    _this.state = {\n      dataID: dbID,\n      curSubFormID: 'QuestionCurrentFutureSubForm',\n      curSubForm: QuestionCurrentFutureSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }   \n        //         ]\n        //     }\n        // }\n      ],\n      isRightSideOpen: true,\n      formSteps: [{\n        id: 'QuestionCurrentFutureSubForm',\n        icon: 'icon_ex.png',\n        title: 'Assistance Current or Future'\n      }, {\n        id: 'StepDetails',\n        icon: 'icon_ex.png',\n        title: 'Details'\n      }],\n      dbLoaded: dbLoaded,\n      dbID: dbID\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(AssistanceReceivedNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.goSubForm(\"QuestionCurrentFutureSubForm\");\n      // this.goSubForm(\"TaxLiquiditySubForm\");\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index]['id'] == formID) {\n          var data = formData[index]['data'];\n          var fields = data['fields'];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex]['id'] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return '';\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var varQL = null;\n      switch (subFormID) {\n        case 'QuestionCurrentFutureSubForm':\n          varQL = {\n            \"assistanceIn\": {\n              \"currentAssistance\": this.getSubFormFieldValue(subFormID, 'isCurrent') == 'Current' ? true : false\n            }\n          };\n          break;\n        case 'CurrentAssistanceSubForm':\n          varQL = {\n            \"assistanceIn\": {\n              \"recipientFirstName\": this.getSubFormFieldValue(subFormID, 'recipientFirstName'),\n              \"recipientLastName\": this.getSubFormFieldValue(subFormID, 'recipientLastName'),\n              \"personProvidingAssistanceFirstName\": this.getSubFormFieldValue(subFormID, 'assistanceFirstName'),\n              \"personProvidingAssistanceLastName\": this.getSubFormFieldValue(subFormID, 'assistanceLastName'),\n              \"relationship\": this.getSubFormFieldValue(subFormID, 'relationship'),\n              \"amountReceived\": this.getSubFormFieldValue(subFormID, 'amountRecieved') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'amountRecieved')) : 0,\n              \"frequency\": this.getSubFormFieldValue(subFormID, 'frequency'),\n              \"estimatedStartDate\": this.getSubFormFieldValue(subFormID, 'estimatedStartDate'),\n              \"assistanceEnds\": this.getSubFormFieldValue(subFormID, 'assistanceEnds')\n            }\n          };\n          break;\n        case 'FutureAssistanceSubForm':\n          varQL = {\n            \"assistanceIn\": {\n              \"inheritanceAmount\": this.getSubFormFieldValue(subFormID, 'inheritanceAmount') != '' ? parseFloat(this.getSubFormFieldValue(subFormID, 'inheritanceAmount')) : 0,\n              \"yearOfExpectedIncome\": this.getSubFormFieldValue(subFormID, 'yearExpectedIncome'),\n              \"personInheritingFromFirstName\": this.getSubFormFieldValue(subFormID, 'firstName'),\n              \"personInheritingFromLastName\": this.getSubFormFieldValue(subFormID, 'lastName'),\n              \"relationship\": this.getSubFormFieldValue(subFormID, 'relationship')\n            }\n          };\n          break;\n        case 'EndSubForm':\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          formData[findex]['data'] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      var varQL = this.createQLVariable(subFormID, subFormData);\n      console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n      var instance = this;\n      if (varQL != null) {\n        if (this.state.dataID == null) {\n          fnMutationAssistanceInAdd({\n            variables: {\n              data: varQL\n            }\n          }).then(function (response) {\n            instance.setState({\n              dataID: response['data']['createAssistanceIn']['id']\n            });\n          });\n        } else {\n          fnMutationAssistanceInUpdate({\n            variables: {\n              id: this.state.dataID,\n              data: varQL\n            }\n          });\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var fromState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pformData = arguments.length > 2 ? arguments[2] : undefined;\n      var formData;\n      if (fromState) {\n        formData = this.state.formData;\n      } else {\n        formData = pformData;\n      }\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          return formData[findex]['data'];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      this.setState({\n        formVisible: false\n      });\n      var nextSubForm = QuestionCurrentFutureSubForm;\n      var subFormData = this.getSubFormData(subFormID);\n      switch (subFormID) {\n        case 'QuestionCurrentFutureSubForm':\n          nextSubForm = QuestionCurrentFutureSubForm;\n          break;\n        case 'CurrentAssistanceSubForm':\n          nextSubForm = CurrentAssistanceSubForm;\n          break;\n        case 'FutureAssistanceSubForm':\n          nextSubForm = FutureAssistanceSubForm;\n          break;\n        case 'EndSubForm':\n          nextSubForm = EndSubForm;\n          break;\n        case 'StepDetails':\n          if (this.getSubFormFieldValue('QuestionCurrentFutureSubForm', 'isCurrent') == 'Current') {\n            nextSubForm = CurrentAssistanceSubForm;\n          } else {\n            nextSubForm = FutureAssistanceSubForm;\n          }\n          break;\n      }\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubFormID: subFormID,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(formData) {\n      console.log('formData:', formData);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          formVisible: true,\n          dbLoaded: true,\n          formData: formData,\n          subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n        });\n      }, 100);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navlinks = [{\n        href: '/',\n        title: 'Home'\n      }, {\n        href: '/modules',\n        title: 'Modules'\n      }, {\n        href: '/assistance',\n        title: 'Assistance'\n      }];\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = 'form-page-container-wrap';\n      if (this.state.isRightSideOpen) {\n        formpageClassName = 'form-page-container-wrap right-side--opend';\n      } else {\n        formpageClassName = 'form-page-container-wrap right-side--collapsed';\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-container align-items-top justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-asset\",\n        src: AssetPlanet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 29\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var elementPos = _this3.state.formSteps.map(function (x) {\n          return x.id;\n        }).indexOf(_this3.state.curSubFormID);\n        if (elementPos === -1) {\n          elementPos = prevPos + 1;\n        } else {\n          prevPos = elementPos;\n        }\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"process-step\",\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: elementPos >= index ? 'btn nav-items btn-circle active' : 'btn nav-items btn-circle',\n          \"data-toggle\": \"tab\",\n          onClick: function onClick() {\n            return _this3.goSubForm(formStep.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"img-icon\",\n          src: ImageIcon,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 53\n          }\n        })), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"step-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 49\n          }\n        }, formStep.title));\n      })))), /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 21\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbID: this.state.dbID,\n        cbLoadDBData: this.loadDBData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-nav-history\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 53\n        }\n      }, \"Loading...\"), this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormPagePose, {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? 'visible' : 'hidden',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 41\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 21\n        }\n      }, this.state.formData.map(function (subForm, sindex) {\n        if (subForm.visible == false) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: sindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 45\n            }\n          });\n        }\n        var subFormData = subForm.data;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-block\",\n          key: sindex,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-top\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"form-brief-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 41\n          }\n        }, subFormData.title), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"form-brief-edit-btn\",\n          onClick: function onClick() {\n            return _this3.goSubForm(subForm.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          type: \"edit\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 122\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-content\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 37\n          }\n        }, subFormData.fields.map(function (field, ffindex) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-item\",\n            key: ffindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"form-brief-item-title\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 53\n            }\n          }, field.title != '' ? field.title + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"form-brief-item-value\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 53\n            }\n          }, field.value));\n        })));\n      }))));\n    }\n  }]);\n  return AssistanceReceivedNew;\n}(Component);\nexport default connect()(AssistanceReceivedNew);","map":{"version":3,"names":["React","Component","connect","Link","Icon","ImageIcon","AssetPlanet","useMutation","useQuery","QL_ASSISTANCE_IN_ADD","QL_ASSISTANCE_IN_UPDATE","QL_ASSISTANCE_IN_GET","FormPagePose","QuestionCurrentFutureSubForm","CurrentAssistanceSubForm","FutureAssistanceSubForm","EndSubForm","fnMutationAssistanceInAdd","dataMutationAssistanceInAdd","fnMutationAssistanceInUpdate","dataMutationAssistanceInUpdate","prevPos","HiddenHook","convertDB2FormData","data","formData","push","id","FnCreateFormData","recipientFirstName","recipientLastName","assistanceFirstName","assistanceLastName","relationship","amountRecieved","frequency","estimatedStartDate","assistanceEnds","visible","inheritanceAmount","yearExpectedIncome","firstName","lastName","LoadDBDataHook","props","dbID","variables","loading","error","console","log","cbLoadDBData","AssistanceReceivedNew","toggleRightSide","e","preventDefault","setState","isRightSideOpen","state","dbLoaded","assistanceInID","match","params","dataID","curSubFormID","curSubForm","formVisible","subFormData","formSteps","icon","title","goSubForm","bind","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","loadDBData","formID","fieldID","index","length","fields","findex","field","value","subFormID","varQL","parseInt","parseFloat","bFound","instance","then","response","fromState","pformData","nextSubForm","setTimeout","navlinks","href","SubForm","formpageClassName","map","formStep","elementPos","x","indexOf","subForm","sindex","ffindex"],"sources":["/home/albatross/gitCode/shared/src/pages/modules/assistance/assistance_in/AssistanceReceivedNew.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport ImageIcon from 'assets/images/asset.png';\nimport AssetPlanet from 'assets/images/asset-planet-logo.jpg';\n\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport {\n    QL_ASSISTANCE_IN_ADD,\n    QL_ASSISTANCE_IN_UPDATE,\n    QL_ASSISTANCE_IN_GET\n} from '../../../../constants/queries';\n\nimport { FormPagePose } from '../../../../components/Animations';\n\nimport QuestionCurrentFutureSubForm from './subforms/QuestionCurrentFutureSubForm';\nimport CurrentAssistanceSubForm from './subforms/CurrentAssistanceSubForm';\nimport FutureAssistanceSubForm from './subforms/FutureAssistanceSubForm';\nimport EndSubForm from './subforms/EndSubForm';\n\nvar fnMutationAssistanceInAdd = null;\nvar dataMutationAssistanceInAdd = null;\n\nvar fnMutationAssistanceInUpdate = null;\nvar dataMutationAssistanceInUpdate = null;\nlet prevPos = 0;\n\nfunction HiddenHook(){\n    [fnMutationAssistanceInAdd, { dataMutationAssistanceInAdd }] = useMutation(QL_ASSISTANCE_IN_ADD);\n    [fnMutationAssistanceInUpdate, { dataMutationAssistanceInUpdate }] = useMutation(QL_ASSISTANCE_IN_UPDATE);\n\n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nfunction convertDB2FormData(data){\n\n    let formData = [];\n\n    formData.push({\n        id: 'CurrentAssistanceSubForm',\n        data: CurrentAssistanceSubForm.FnCreateFormData({\n            recipientFirstName: data['assistanceIn']['recipientFirstName'],\n            recipientLastName: data['assistanceIn']['recipientLastName'],\n            assistanceFirstName: data['assistanceIn']['personProvidingAssistanceFirstName'],\n            assistanceLastName: data['assistanceIn']['personProvidingAssistanceLastName'],\n            relationship: data['assistanceIn']['relationship'],\n            amountRecieved: data['assistanceIn']['amountReceived'],\n            frequency: data['assistanceIn']['frequency'],\n            estimatedStartDate: data['assistanceIn']['estimatedStartDate'] == null ? '' : data['assistanceIn']['estimatedStartDate'],\n            assistanceEnds: data['assistanceIn']['assistanceEnds']\n        }),\n        visible: true\n    })\n\n    formData.push({\n        id: 'FutureAssistanceSubForm',\n        data: FutureAssistanceSubForm.FnCreateFormData({\n            inheritanceAmount: data['assistanceIn']['inheritanceAmount'],\n            yearExpectedIncome: data['assistanceIn']['yearOfExpectedIncome'],\n            firstName: data['assistanceIn']['personInheritingFromFirstName'],\n            lastName: data['assistanceIn']['personInheritingFromLastName'],\n            relationship: data['assistanceIn']['relationship']\n        }),\n        visible: true\n    })\n\n    return formData;\n}\n\nfunction LoadDBDataHook(props){\n    if(props.dbID != null && props.dbID != ''){\n        const {data, loading, error} = useQuery(QL_ASSISTANCE_IN_GET, { variables: { id: props.dbID} });\n        if(data){\n            console.log('call..', data);\n            props.cbLoadDBData(convertDB2FormData(data));\n        }\n    }\n    \n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nclass AssistanceReceivedNew extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let dbID = null;\n        let dbLoaded = true;\n\n        const { assistanceInID } = this.props.match.params;        \n\n        if( assistanceInID ){\n            dbID = assistanceInID;\n            dbLoaded = false;\n        }      \n\n        this.state = {\n            dataID: dbID,\n            curSubFormID: 'QuestionCurrentFutureSubForm',\n            curSubForm: QuestionCurrentFutureSubForm,\n            formVisible: false,\n            subFormData: {},\n            formData: [\n                // {\n                //     id: 'assetsInformation',\n                //     data: {\n                //         title: '',\n                //         fields: [\n                //             {\n                //                 id: '' ,\n                //                 title: '',\n                //                 value: ''\n                //              }   \n                //         ]\n                //     }\n                // }\n            ],\n            isRightSideOpen: true,\n            formSteps: [\n                {\n                    id: 'QuestionCurrentFutureSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Assistance Current or Future'\n                },\n                {\n                    id: 'StepDetails',\n                    icon: 'icon_ex.png',\n                    title: 'Details'\n                }                \n            ],\n            dbLoaded: dbLoaded,\n            dbID: dbID\n        }\n\n        this.goSubForm = this.goSubForm.bind(this);\n        this.updateSubForm = this.updateSubForm.bind(this);\n        this.getSubFormData = this.getSubFormData.bind(this);\n        this.getSubFormField = this.getSubFormField.bind(this);\n\n        this.createQLVariable = this.createQLVariable.bind(this);\n        this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n        this.toggleRightSide = this.toggleRightSide.bind(this);\n\n        this.loadDBData = this.loadDBData.bind(this);\n    }\n\n    componentDidMount() {\n        this.goSubForm(\"QuestionCurrentFutureSubForm\");\n        // this.goSubForm(\"TaxLiquiditySubForm\");\n    }\n\n    getSubFormField(formID, fieldID){\n        let formData = this.state.formData;\n\n        for(var index = 0; index < formData.length; index++){\n            if(formData[index]['id'] == formID){\n                let data = formData[index]['data'];\n                let fields = data['fields'];\n                for(var findex = 0; findex < fields.length; findex++){\n                    if(fields[findex]['id'] == fieldID){\n                        return fields[findex];\n                    }\n                }\n            }\n        }\n\n        return null\n    }\n\n    getSubFormFieldValue(formID, fieldID){\n        let field = this.getSubFormField(formID, fieldID);\n\n        if(field == null){\n            return '';\n        }\n        else{\n            return field.value;\n        }\n    }\n\n\n    createQLVariable(subFormID, subFormData){\n        let varQL = null;\n\n        switch(subFormID){\n            case 'QuestionCurrentFutureSubForm': \n                varQL = {\n                    \"assistanceIn\" : {\n                        \"currentAssistance\": this.getSubFormFieldValue(subFormID, 'isCurrent') == 'Current' ? true : false\n                    }\n                };\n                break;\n            case 'CurrentAssistanceSubForm':\n                varQL = {\n                    \"assistanceIn\" : {\n                        \"recipientFirstName\": this.getSubFormFieldValue(subFormID, 'recipientFirstName'),\n                        \"recipientLastName\": this.getSubFormFieldValue(subFormID, 'recipientLastName'),\n                        \"personProvidingAssistanceFirstName\": this.getSubFormFieldValue(subFormID, 'assistanceFirstName'),\n                        \"personProvidingAssistanceLastName\": this.getSubFormFieldValue(subFormID, 'assistanceLastName'),\n                        \"relationship\": this.getSubFormFieldValue(subFormID, 'relationship'),\n                        \"amountReceived\": this.getSubFormFieldValue(subFormID, 'amountRecieved') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'amountRecieved')) : 0,\n                        \"frequency\": this.getSubFormFieldValue(subFormID, 'frequency'),\n                        \"estimatedStartDate\": this.getSubFormFieldValue(subFormID, 'estimatedStartDate'),\n                        \"assistanceEnds\": this.getSubFormFieldValue(subFormID, 'assistanceEnds'),\n                    }\n                };\n                break;\n            case 'FutureAssistanceSubForm':\n                varQL = {\n                    \"assistanceIn\" : {\n                        \"inheritanceAmount\": this.getSubFormFieldValue(subFormID, 'inheritanceAmount') != '' ? parseFloat(this.getSubFormFieldValue(subFormID, 'inheritanceAmount')) : 0,\n                        \"yearOfExpectedIncome\": this.getSubFormFieldValue(subFormID, 'yearExpectedIncome'),\n                        \"personInheritingFromFirstName\": this.getSubFormFieldValue(subFormID, 'firstName'),\n                        \"personInheritingFromLastName\": this.getSubFormFieldValue(subFormID, 'lastName'),\n                        \"relationship\": this.getSubFormFieldValue(subFormID, 'relationship'),\n                    }\n                };\n                break;\n            case 'EndSubForm':\n                \n        }\n\n        return varQL;\n    }\n\n    updateSubForm(subFormID, subFormData, visible = true){\n        let formData = this.state.formData;\n\n        var bFound = false;\n        for(var findex = 0; findex < formData.length; findex++){\n            if(formData[findex]['id'] == subFormID){\n                formData[findex]['data'] = subFormData;\n                bFound = true;\n            }\n        }\n\n        if(!bFound){\n            formData.push({\n                id: subFormID,\n                data: subFormData,\n                visible: visible\n            })\n        }\n\n        \n        let varQL = this.createQLVariable(subFormID, subFormData);\n\n        console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n        \n        var instance = this;\n        if(varQL != null){\n            if(this.state.dataID == null){\n                fnMutationAssistanceInAdd({ variables: { data: varQL } }).then((response) => {\n                    instance.setState({\n                        dataID: response['data']['createAssistanceIn']['id']\n                    })\n                });\n            }\n            else{\n                fnMutationAssistanceInUpdate({ variables: { id: this.state.dataID, data: varQL } })\n            }\n        }\n\n        this.setState({\n            formData: formData\n        });\n    }\n\n    getSubFormData(subFormID, fromState = true, pformData){\n        let formData;\n        if(fromState){\n            formData = this.state.formData;\n        }\n        else{\n            formData = pformData;\n        }\n\n        for(var findex = 0; findex < formData.length; findex++){\n            if(formData[findex]['id'] == subFormID){\n                return formData[findex]['data'];\n            }\n        }\n\n        return {};\n    }\n\n    goSubForm(subFormID){\n\n        this.setState({\n            formVisible: false,\n        })\n\n        let nextSubForm = QuestionCurrentFutureSubForm;\n        let subFormData = this.getSubFormData(subFormID);\n\n        switch(subFormID){\n            case 'QuestionCurrentFutureSubForm': \n                nextSubForm = QuestionCurrentFutureSubForm;\n                break;\n            case 'CurrentAssistanceSubForm': \n                nextSubForm = CurrentAssistanceSubForm;\n                break;\n            case 'FutureAssistanceSubForm': \n                nextSubForm = FutureAssistanceSubForm;\n                break;\n            case 'EndSubForm':\n                nextSubForm = EndSubForm;\n                break;\n            case 'StepDetails':\n                if(this.getSubFormFieldValue('QuestionCurrentFutureSubForm', 'isCurrent') == 'Current'){\n                    nextSubForm = CurrentAssistanceSubForm;\n                }\n                else {\n                    nextSubForm = FutureAssistanceSubForm;\n                }\n                break;\n        }\n\n        setTimeout(() => {\n            this.setState({ \n                formVisible: true,\n                curSubFormID: subFormID,\n                curSubForm: nextSubForm,\n                subFormData: subFormData\n            });\n        }, 100);\n\n    }\n\n    toggleRightSide = (e) => {\n        e.preventDefault();\n        this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n    }\n\n    loadDBData(formData){\n        console.log('formData:', formData);\n\n        var instance = this;\n        setTimeout(function(){\n            instance.setState({ \n                formVisible: true,\n                dbLoaded: true,\n                formData: formData,\n                subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n            });\n        }, 100)        \n\n    }\n\n    render() {\n\n        const navlinks = [\n            {\n                href: '/',\n                title: 'Home'\n            },\n            {\n                href: '/modules',\n                title: 'Modules'\n            },\n            {\n                href: '/assistance',\n                title: 'Assistance'\n            }\n        ]\n\n        let SubForm = this.state.curSubForm;\n\n        let formpageClassName = 'form-page-container-wrap';\n        if(this.state.isRightSideOpen){\n            formpageClassName = 'form-page-container-wrap right-side--opend';\n        }\n        else {\n            formpageClassName = 'form-page-container-wrap right-side--collapsed';\n        }\n\n        return (\n            <div className={formpageClassName}>\n                <div className=\"form-page--main-side\">\n                    <div className=\"steps\">\n                        <div className=\"logo-container align-items-top justify-content-center\">\n                            <img className=\"img-asset\" src={AssetPlanet} />\n                        </div>\n                        <div className=\"process\">\n                            <div className=\"process-row\">\n                                {\n                                    this.state.formSteps.map((formStep, index) => {\n                                        let elementPos = this.state.formSteps.map(function(x) {return x.id; }).indexOf(this.state.curSubFormID);\n\n                                        if (elementPos === -1) {\n                                            elementPos = prevPos+1;\n                                        } else {\n                                            prevPos = elementPos;\n                                        }\n                                        return (\n                                            <div className=\"process-step\" key={index}>\n                                                <button type=\"button\" className={ elementPos >= index ? 'btn nav-items btn-circle active' : 'btn nav-items btn-circle' } data-toggle=\"tab\" onClick={() => this.goSubForm(formStep.id)}>\n                                                    <img className=\"img-icon\" src={ImageIcon} />\n                                                </button>\n                                                <p className=\"step-title\">{formStep.title}</p>\n                                            </div>\n                                        )\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <HiddenHook />\n                    {\n                        !this.state.dbLoaded && \n                        <LoadDBDataHook \n                            dbLoaded={this.state.dbLoaded}\n                            dbID={this.state.dbID}\n                            cbLoadDBData={this.loadDBData}\n                        />\n                    }\n                    <div className=\"container\">\n                        <div className=\"page-nav-history\">\n                            {/* { \n                                navlinks.map((navlink, index) => {\n                                    return (\n                                        <span key={index}>\n                                            <Link key={index} to={navlink.href} className=\"page-nav-link text-uppercase\">\n                                                {navlink.title}\n                                            </Link>\n                                            {index != (navlinks.length - 1) ? \"/\" : null}\n                                        </span>\n                                        \n                                    )                            \n                                }) \n                            } */}\n                        </div>\n                        {\n                            !this.state.dbLoaded && <div>Loading...</div>\n                        }\n                        {\n                            this.state.dbLoaded && \n                            <div className=\"form-page-container\">\n                                <div className=\"form-page--left-side\">\n                                    <FormPagePose className=\"info-form-block\" pose={ this.state.formVisible ? 'visible' : 'hidden'}>\n                                        <SubForm \n                                            subFormData={this.state.subFormData}\n                                            cbGoSubForm={this.goSubForm}\n                                            cbUpdateSubForm={this.updateSubForm}\n                                            formData={this.state.formData}\n                                            cbGetSubFormField={this.getSubFormField}\n                                        />\n                                    </FormPagePose>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n                <div className=\"form-page--right-side\">\n                    <span className=\"right-side-collapse-icon\" onClick={this.toggleRightSide}>\n                        <i className=\"fe-menu\"></i>\n                    </span>\n                    <div className=\"form-page--right-side-wrap\">\n                        {\n                            this.state.formData.map((subForm, sindex) => {\n                                if(subForm.visible == false){\n                                    return (<div key={sindex}></div>)\n                                }\n                                \n                                let subFormData = subForm.data;\n                                return(\n                                <div className=\"form-brief-block\" key={sindex}>\n                                    <div className=\"form-brief-top\">\n                                        <h4 className=\"form-brief-title\">{subFormData.title}</h4>\n                                        <span className=\"form-brief-edit-btn\" onClick={() => this.goSubForm(subForm.id)}><Icon type=\"edit\"></Icon></span>\n                                    </div>\n                                    <div className=\"form-brief-content\">\n                                    {\n                                        subFormData.fields.map((field, ffindex) => {\n                                            return(\n                                                <div className=\"form-brief-item\" key={ffindex}>\n                                                    <p className=\"form-brief-item-title\">{field.title != '' ? field.title + \":\" : null} </p>\n                                                    <p className=\"form-brief-item-value\">{field.value}</p>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    </div>\n                                </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(AssistanceReceivedNew);"],"mappings":"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"},"metadata":{},"sourceType":"module"}