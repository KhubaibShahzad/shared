{"ast":null,"code":"import _defineProperty from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/modules/assistance/AssistanceNew.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport { useMutation } from '@apollo/react-hooks';\nimport { QL_ASSISTANCE_IN_ADD, QL_ASSISTANCE_IN_UPDATE, QL_ASSISTANCE_OUT_ADD, QL_ASSISTANCE_OUT_UPDATE } from '../../../constants/queries';\nimport { FormPagePose } from '../../../components/Animations';\nimport QuestionAssistanceInOutSubForm from './QuestionAssistanceInOutSubForm';\nimport QuestionCurrentFutureSubForm from './assistance_in/subforms/QuestionCurrentFutureSubForm';\nimport CurrentAssistanceSubForm from './assistance_in/subforms/CurrentAssistanceSubForm';\nimport FutureAssistanceSubForm from './assistance_in/subforms/FutureAssistanceSubForm';\nimport EndSubForm from './EndSubForm';\nimport AssistanceOutSubForm from './assistance_out/subforms/AssistanceOutSubForm';\nvar fnMutationAssistanceInAdd = null;\nvar dataMutationAssistanceInAdd = null;\nvar fnMutationAssistanceInUpdate = null;\nvar dataMutationAssistanceInUpdate = null;\nvar fnMutationAssistanceOutAdd = null;\nvar dataMutationAssistanceOutAdd = null;\nvar fnMutationAssistanceOutUpdate = null;\nvar dataMutationAssistanceOutUpdate = null;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_ASSISTANCE_IN_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationAssistanceInAdd = _useMutation2[0];\n  dataMutationAssistanceInAdd = _useMutation2[1].dataMutationAssistanceInAdd;\n  var _useMutation3 = useMutation(QL_ASSISTANCE_IN_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationAssistanceInUpdate = _useMutation4[0];\n  dataMutationAssistanceInUpdate = _useMutation4[1].dataMutationAssistanceInUpdate;\n  var _useMutation5 = useMutation(QL_ASSISTANCE_OUT_ADD);\n  var _useMutation6 = _slicedToArray(_useMutation5, 2);\n  fnMutationAssistanceOutAdd = _useMutation6[0];\n  dataMutationAssistanceOutAdd = _useMutation6[1].dataMutationAssistanceOutAdd;\n  var _useMutation7 = useMutation(QL_ASSISTANCE_OUT_UPDATE);\n  var _useMutation8 = _slicedToArray(_useMutation7, 2);\n  fnMutationAssistanceOutUpdate = _useMutation8[0];\n  dataMutationAssistanceOutUpdate = _useMutation8[1].dataMutationAssistanceOutUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  });\n}\nvar AssistanceNew = /*#__PURE__*/function (_Component) {\n  _inherits(AssistanceNew, _Component);\n  function AssistanceNew(props) {\n    var _this;\n    _classCallCheck(this, AssistanceNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssistanceNew).call(this, props));\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    _this.state = {\n      dataID: null,\n      assistanceType: 'In',\n      curSubForm: QuestionAssistanceInOutSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }   \n        //         ]\n        //     }\n        // }\n      ],\n      isRightSideOpen: true,\n      formSteps: [{\n        id: 'StaticSubForm',\n        icon: 'icon_ex.png',\n        title: 'Step1'\n      }, {\n        id: 'QuestionPredictionSubForm',\n        icon: 'icon_ex.png',\n        title: 'Step2'\n      }, {\n        id: 'ChoosePredictionSubForm',\n        icon: 'icon_ex.png',\n        title: 'Step3'\n      }, {\n        id: 'QuestionOwnRateSubForm',\n        icon: 'icon_ex.png',\n        title: 'Step4'\n      }, {\n        id: 'UserDefinedSubForm',\n        icon: 'icon_ex.png',\n        title: 'Step5'\n      }, {\n        id: 'QuestionMonteCarloSubForm',\n        icon: 'icon_ex.png',\n        title: 'Step6'\n      }, {\n        id: 'MonteCarloSubForm',\n        icon: 'icon_ex.png',\n        title: 'Step7'\n      }]\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(AssistanceNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.goSubForm(\"QuestionAssistanceInOutSubForm\");\n      // this.goSubForm(\"TaxLiquiditySubForm\");\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index]['id'] == formID) {\n          var data = formData[index]['data'];\n          var fields = data['fields'];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex]['id'] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return '';\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var _assistanceIn;\n      var varQL = null;\n      switch (subFormID) {\n        case 'QuestionAssistanceInOutSubForm':\n          break;\n        case 'QuestionCurrentFutureSubForm':\n          varQL = {\n            \"assistanceIn\": {\n              \"currentAssistance\": this.getSubFormFieldValue(subFormID, 'isCurrent') == 'Current' ? true : false\n            }\n          };\n          break;\n        case 'CurrentAssistanceSubForm':\n          varQL = {\n            \"assistanceIn\": (_assistanceIn = {\n              \"recipientFirstName\": this.getSubFormFieldValue(subFormID, 'recipientFirstName')\n            }, _defineProperty(_assistanceIn, \"recipientFirstName\", this.getSubFormFieldValue(subFormID, 'recipientLastName')), _defineProperty(_assistanceIn, \"personProvidingAssistanceFirstName\", this.getSubFormFieldValue(subFormID, 'assistanceFirstName')), _defineProperty(_assistanceIn, \"personProvidingAssistanceLastName\", this.getSubFormFieldValue(subFormID, 'assistanceLastName')), _defineProperty(_assistanceIn, \"relationship\", this.getSubFormFieldValue(subFormID, 'relationship')), _defineProperty(_assistanceIn, \"amountReceived\", parseInt(this.getSubFormFieldValue(subFormID, 'amountRecieved'))), _defineProperty(_assistanceIn, \"frequency\", this.getSubFormFieldValue(subFormID, 'frequency')), _defineProperty(_assistanceIn, \"estimatedStartDate\", this.getSubFormFieldValue(subFormID, 'estimatedStartDate')), _defineProperty(_assistanceIn, \"assistanceEnds\", this.getSubFormFieldValue(subFormID, 'assistanceEnds')), _assistanceIn)\n          };\n          break;\n        case 'FutureAssistanceSubForm':\n          varQL = {\n            \"assistanceIn\": {\n              // \"\": this.getSubFormFieldValue(subFormID, 'inheritanceAmount'),\n              // \"\": this.getSubFormFieldValue(subFormID, 'yearExpectedIncome'),\n              // \"\": this.getSubFormFieldValue(subFormID, 'firstName'),\n              // \"\": this.getSubFormFieldValue(subFormID, 'lastName'),\n              // \"\": this.getSubFormFieldValue(subFormID, 'relationship'),\n            }\n          };\n          break;\n        case 'AssistanceOutSubForm':\n          varQL = {\n            \"assistanceOut\": {\n              \"recipientFirstName\": this.getSubFormFieldValue(subFormID, 'firstName'),\n              \"recipientLastName\": this.getSubFormFieldValue(subFormID, 'lastName'),\n              \"personProvidingAssistance\": this.getSubFormFieldValue(subFormID, 'person'),\n              \"relationship\": this.getSubFormFieldValue(subFormID, 'relationship'),\n              \"estimatedStartDate\": this.getSubFormFieldValue(subFormID, 'estimatedStartDate'),\n              // \"addToMonthlyBudget\":\n              \"annualGiftingAmount\": this.getSubFormFieldValue(subFormID, 'annualGiftingAmount') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'annualGiftingAmount')) : 0,\n              \"frequency\": this.getSubFormFieldValue(subFormID, 'frequency'),\n              \"assistanceEnds\": this.getSubFormFieldValue(subFormID, 'assistanceEnds'),\n              \"budgetItem\": this.getSubFormFieldValue(subFormID, 'budgetItem')\n              // \"notes\":\n              // \"estimatedEndDate\":\n            }\n          };\n\n          break;\n        case 'EndSubForm':\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          formData[findex]['data'] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      if (subFormID == 'QuestionAssistanceInOutSubForm') {\n        this.setState({\n          assistanceType: this.getSubFormFieldValue(subFormID, 'isAssistanceInOut')\n        });\n      } else {\n        var varQL = this.createQLVariable(subFormID, subFormData);\n        console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n        var instance = this;\n        if (varQL != null) {\n          if (this.state.dataID == null) {\n            if (this.state.assistanceType == 'In') {\n              fnMutationAssistanceInAdd({\n                variables: {\n                  data: varQL\n                }\n              }).then(function (response) {\n                instance.setState({\n                  dataID: response['data']['createAssistanceIn']['id']\n                });\n              });\n            } else {\n              fnMutationAssistanceOutAdd({\n                variables: {\n                  data: varQL\n                }\n              }).then(function (response) {\n                instance.setState({\n                  dataID: response['data']['createAssistanceOut']['id']\n                });\n              });\n            }\n          } else {\n            if (this.state.assistanceType == 'In') {\n              fnMutationAssistanceInUpdate({\n                variables: {\n                  id: this.state.dataID,\n                  data: varQL\n                }\n              });\n            } else {\n              fnMutationAssistanceOutUpdate({\n                variables: {\n                  id: this.state.dataID,\n                  data: varQL\n                }\n              });\n            }\n          }\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var formData = this.state.formData;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex]['id'] == subFormID) {\n          return formData[findex]['data'];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      this.setState({\n        formVisible: false\n      });\n      var nextSubForm = QuestionAssistanceInOutSubForm;\n      var subFormData = this.getSubFormData(subFormID);\n      switch (subFormID) {\n        case 'QuestionAssistanceInOutSubForm':\n          nextSubForm = QuestionAssistanceInOutSubForm;\n          break;\n        case 'QuestionCurrentFutureSubForm':\n          nextSubForm = QuestionCurrentFutureSubForm;\n          break;\n        case 'CurrentAssistanceSubForm':\n          nextSubForm = CurrentAssistanceSubForm;\n          break;\n        case 'FutureAssistanceSubForm':\n          nextSubForm = FutureAssistanceSubForm;\n          break;\n        case 'AssistanceOutSubForm':\n          nextSubForm = AssistanceOutSubForm;\n          break;\n        case 'EndSubForm':\n          nextSubForm = EndSubForm;\n          break;\n      }\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navlinks = [{\n        href: '/',\n        title: 'Home'\n      }, {\n        href: '/modules',\n        title: 'Modules'\n      }, {\n        href: '/assistance',\n        title: 'Assistance'\n      }];\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = 'form-page-container-wrap';\n      if (this.state.isRightSideOpen) {\n        formpageClassName = 'form-page-container-wrap right-side--opend';\n      } else {\n        formpageClassName = 'form-page-container-wrap right-side--collapsed';\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-nav-history\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-step-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"form-step-wrap\",\n          onClick: function onClick() {\n            return _this3.goSubForm(formStep.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"\",\n          src: require('../../../assets/images/page_icons/' + formStep.icon),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 41\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 41\n          }\n        }, formStep.title));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormPagePose, {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? 'visible' : 'hidden',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 33\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }\n      }, this.state.formData.map(function (subForm, sindex) {\n        if (subForm.visible == false) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: sindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 45\n            }\n          });\n        }\n        var subFormData = subForm.data;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-block\",\n          key: sindex,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-top\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"form-brief-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 41\n          }\n        }, subFormData.title), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"form-brief-edit-btn\",\n          onClick: function onClick() {\n            return _this3.goSubForm(subForm.id);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          type: \"edit\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 122\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-content\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 37\n          }\n        }, subFormData.fields.map(function (field, ffindex) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-item\",\n            key: ffindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 49\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"form-brief-item-title\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 53\n            }\n          }, field.title != '' ? field.title + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n            className: \"form-brief-item-value\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 53\n            }\n          }, field.value));\n        })));\n      }))));\n    }\n  }]);\n  return AssistanceNew;\n}(Component);\nexport default connect()(AssistanceNew);","map":{"version":3,"names":["React","Component","connect","Link","Icon","useMutation","QL_ASSISTANCE_IN_ADD","QL_ASSISTANCE_IN_UPDATE","QL_ASSISTANCE_OUT_ADD","QL_ASSISTANCE_OUT_UPDATE","FormPagePose","QuestionAssistanceInOutSubForm","QuestionCurrentFutureSubForm","CurrentAssistanceSubForm","FutureAssistanceSubForm","EndSubForm","AssistanceOutSubForm","fnMutationAssistanceInAdd","dataMutationAssistanceInAdd","fnMutationAssistanceInUpdate","dataMutationAssistanceInUpdate","fnMutationAssistanceOutAdd","dataMutationAssistanceOutAdd","fnMutationAssistanceOutUpdate","dataMutationAssistanceOutUpdate","HiddenHook","AssistanceNew","props","toggleRightSide","e","preventDefault","setState","isRightSideOpen","state","dataID","assistanceType","curSubForm","formVisible","subFormData","formData","formSteps","id","icon","title","goSubForm","bind","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","formID","fieldID","index","length","data","fields","findex","field","value","subFormID","varQL","parseInt","visible","bFound","push","console","log","instance","variables","then","response","nextSubForm","setTimeout","navlinks","href","SubForm","formpageClassName","map","formStep","require","subForm","sindex","ffindex"],"sources":["/home/albatross/gitCode/shared/src/pages/modules/assistance/AssistanceNew.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport {\n    QL_ASSISTANCE_IN_ADD,\n    QL_ASSISTANCE_IN_UPDATE,\n    QL_ASSISTANCE_OUT_ADD,\n    QL_ASSISTANCE_OUT_UPDATE\n} from '../../../constants/queries';\n\nimport { FormPagePose } from '../../../components/Animations';\n\nimport QuestionAssistanceInOutSubForm from './QuestionAssistanceInOutSubForm';\nimport QuestionCurrentFutureSubForm from './assistance_in/subforms/QuestionCurrentFutureSubForm';\nimport CurrentAssistanceSubForm from './assistance_in/subforms/CurrentAssistanceSubForm';\nimport FutureAssistanceSubForm from './assistance_in/subforms/FutureAssistanceSubForm';\nimport EndSubForm from './EndSubForm';\nimport AssistanceOutSubForm from './assistance_out/subforms/AssistanceOutSubForm';\n\nvar fnMutationAssistanceInAdd = null;\nvar dataMutationAssistanceInAdd = null;\n\nvar fnMutationAssistanceInUpdate = null;\nvar dataMutationAssistanceInUpdate = null;\n\nvar fnMutationAssistanceOutAdd = null;\nvar dataMutationAssistanceOutAdd = null;\n\nvar fnMutationAssistanceOutUpdate = null;\nvar dataMutationAssistanceOutUpdate = null;\n\nfunction HiddenHook(){\n    [fnMutationAssistanceInAdd, { dataMutationAssistanceInAdd }] = useMutation(QL_ASSISTANCE_IN_ADD);\n    [fnMutationAssistanceInUpdate, { dataMutationAssistanceInUpdate }] = useMutation(QL_ASSISTANCE_IN_UPDATE);\n\n    [fnMutationAssistanceOutAdd, { dataMutationAssistanceOutAdd }] = useMutation(QL_ASSISTANCE_OUT_ADD);\n    [fnMutationAssistanceOutUpdate, { dataMutationAssistanceOutUpdate }] = useMutation(QL_ASSISTANCE_OUT_UPDATE);\n\n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nclass AssistanceNew extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dataID: null,\n            assistanceType: 'In',\n            curSubForm: QuestionAssistanceInOutSubForm,\n            formVisible: false,\n            subFormData: {},\n            formData: [\n                // {\n                //     id: 'assetsInformation',\n                //     data: {\n                //         title: '',\n                //         fields: [\n                //             {\n                //                 id: '' ,\n                //                 title: '',\n                //                 value: ''\n                //              }   \n                //         ]\n                //     }\n                // }\n            ],\n            isRightSideOpen: true,\n            formSteps: [\n                {\n                    id: 'StaticSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Step1'\n                },\n                {\n                    id: 'QuestionPredictionSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Step2'\n                },\n                {\n                    id: 'ChoosePredictionSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Step3'\n                },\n                {\n                    id: 'QuestionOwnRateSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Step4'\n                },\n                {\n                    id: 'UserDefinedSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Step5'\n                },\n                {\n                    id: 'QuestionMonteCarloSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Step6'\n                },\n                {\n                    id: 'MonteCarloSubForm',\n                    icon: 'icon_ex.png',\n                    title: 'Step7'\n                }\n            ]\n        }\n\n        this.goSubForm = this.goSubForm.bind(this);\n        this.updateSubForm = this.updateSubForm.bind(this);\n        this.getSubFormData = this.getSubFormData.bind(this);\n        this.getSubFormField = this.getSubFormField.bind(this);\n\n        this.createQLVariable = this.createQLVariable.bind(this);\n        this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n        this.toggleRightSide = this.toggleRightSide.bind(this);\n    }\n\n    componentDidMount() {\n        this.goSubForm(\"QuestionAssistanceInOutSubForm\");\n        // this.goSubForm(\"TaxLiquiditySubForm\");\n    }\n\n    getSubFormField(formID, fieldID){\n        let formData = this.state.formData;\n\n        for(var index = 0; index < formData.length; index++){\n            if(formData[index]['id'] == formID){\n                let data = formData[index]['data'];\n                let fields = data['fields'];\n                for(var findex = 0; findex < fields.length; findex++){\n                    if(fields[findex]['id'] == fieldID){\n                        return fields[findex];\n                    }\n                }\n            }\n        }\n\n        return null\n    }\n\n    getSubFormFieldValue(formID, fieldID){\n        let field = this.getSubFormField(formID, fieldID);\n\n        if(field == null){\n            return '';\n        }\n        else{\n            return field.value;\n        }\n    }\n\n    createQLVariable(subFormID, subFormData){\n        let varQL = null;\n\n        switch(subFormID){\n            case 'QuestionAssistanceInOutSubForm': \n                break;\n            case 'QuestionCurrentFutureSubForm': \n                varQL = {\n                    \"assistanceIn\" : {\n                        \"currentAssistance\": this.getSubFormFieldValue(subFormID, 'isCurrent') == 'Current' ? true : false\n                    }\n                };\n                break;\n            case 'CurrentAssistanceSubForm':\n                varQL = {\n                    \"assistanceIn\" : {\n                        \"recipientFirstName\": this.getSubFormFieldValue(subFormID, 'recipientFirstName'),\n                        \"recipientFirstName\": this.getSubFormFieldValue(subFormID, 'recipientLastName'),\n                        \"personProvidingAssistanceFirstName\": this.getSubFormFieldValue(subFormID, 'assistanceFirstName'),\n                        \"personProvidingAssistanceLastName\": this.getSubFormFieldValue(subFormID, 'assistanceLastName'),\n                        \"relationship\": this.getSubFormFieldValue(subFormID, 'relationship'),\n                        \"amountReceived\": parseInt(this.getSubFormFieldValue(subFormID, 'amountRecieved')),\n                        \"frequency\": this.getSubFormFieldValue(subFormID, 'frequency'),\n                        \"estimatedStartDate\": this.getSubFormFieldValue(subFormID, 'estimatedStartDate'),\n                        \"assistanceEnds\": this.getSubFormFieldValue(subFormID, 'assistanceEnds'),\n                        // \"goalBeingFunded\":\n                        // \"estimatedEndDate\"\n                        // \"totalAmountReceived\"\n                    }\n                };\n                break;\n            case 'FutureAssistanceSubForm':\n                varQL = {\n                    \"assistanceIn\" : {\n                        // \"\": this.getSubFormFieldValue(subFormID, 'inheritanceAmount'),\n                        // \"\": this.getSubFormFieldValue(subFormID, 'yearExpectedIncome'),\n                        // \"\": this.getSubFormFieldValue(subFormID, 'firstName'),\n                        // \"\": this.getSubFormFieldValue(subFormID, 'lastName'),\n                        // \"\": this.getSubFormFieldValue(subFormID, 'relationship'),\n                    }\n                };\n                break;\n            case 'AssistanceOutSubForm':\n                varQL = {\n                    \"assistanceOut\" : {\n                        \"recipientFirstName\": this.getSubFormFieldValue(subFormID, 'firstName'),\n                        \"recipientLastName\": this.getSubFormFieldValue(subFormID, 'lastName'),\n                        \"personProvidingAssistance\": this.getSubFormFieldValue(subFormID, 'person'),\n                        \"relationship\": this.getSubFormFieldValue(subFormID, 'relationship'),\n                        \"estimatedStartDate\": this.getSubFormFieldValue(subFormID, 'estimatedStartDate'),\n                        // \"addToMonthlyBudget\":\n                        \"annualGiftingAmount\": this.getSubFormFieldValue(subFormID, 'annualGiftingAmount') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'annualGiftingAmount')) : 0,\n                        \"frequency\": this.getSubFormFieldValue(subFormID, 'frequency'),\n                        \"assistanceEnds\": this.getSubFormFieldValue(subFormID, 'assistanceEnds'),\n                        \"budgetItem\": this.getSubFormFieldValue(subFormID, 'budgetItem'),\n                        // \"notes\":\n                        // \"estimatedEndDate\":\n                        \n                    }\n                };\n                break;\n            case 'EndSubForm':\n                \n        }\n\n        return varQL;\n    }\n\n    updateSubForm(subFormID, subFormData, visible = true){\n        let formData = this.state.formData;\n\n        var bFound = false;\n        for(var findex = 0; findex < formData.length; findex++){\n            if(formData[findex]['id'] == subFormID){\n                formData[findex]['data'] = subFormData;\n                bFound = true;\n            }\n        }\n\n        if(!bFound){\n            formData.push({\n                id: subFormID,\n                data: subFormData,\n                visible: visible\n            })\n        }\n\n        if(subFormID == 'QuestionAssistanceInOutSubForm'){\n            this.setState({\n                assistanceType: this.getSubFormFieldValue(subFormID, 'isAssistanceInOut')\n            })\n        }\n        else {\n            let varQL = this.createQLVariable(subFormID, subFormData);\n\n            console.log('varQL:', varQL, ', dataID:', this.state.dataID);\n            \n            var instance = this;\n            if(varQL != null){\n                if(this.state.dataID == null){\n                    if(this.state.assistanceType == 'In'){\n                        fnMutationAssistanceInAdd({ variables: { data: varQL } }).then((response) => {\n                            instance.setState({\n                                dataID: response['data']['createAssistanceIn']['id']\n                            })\n                        });\n                    }\n                    else{\n                        fnMutationAssistanceOutAdd({ variables: { data: varQL } }).then((response) => {\n                            instance.setState({\n                                dataID: response['data']['createAssistanceOut']['id']\n                            })\n                        });\n                    }\n                    \n                }\n                else{\n                    if(this.state.assistanceType == 'In'){\n                        fnMutationAssistanceInUpdate({ variables: { id: this.state.dataID, data: varQL } })\n                    }\n                    else{\n                        fnMutationAssistanceOutUpdate({ variables: { id: this.state.dataID, data: varQL } })\n                    }\n                    \n                }\n            }\n        }\n\n        this.setState({\n            formData: formData\n        });\n    }\n\n    getSubFormData(subFormID){\n        let formData = this.state.formData;\n\n        for(var findex = 0; findex < formData.length; findex++){\n            if(formData[findex]['id'] == subFormID){\n                return formData[findex]['data'];\n            }\n        }\n\n        return {};\n    }\n\n    goSubForm(subFormID){\n\n        this.setState({\n            formVisible: false,\n        })\n\n        let nextSubForm = QuestionAssistanceInOutSubForm;\n        let subFormData = this.getSubFormData(subFormID);\n\n        switch(subFormID){\n            case 'QuestionAssistanceInOutSubForm':\n                nextSubForm = QuestionAssistanceInOutSubForm;\n                break;\n            case 'QuestionCurrentFutureSubForm': \n                nextSubForm = QuestionCurrentFutureSubForm;\n                break;\n            case 'CurrentAssistanceSubForm': \n                nextSubForm = CurrentAssistanceSubForm;\n                break;\n            case 'FutureAssistanceSubForm': \n                nextSubForm = FutureAssistanceSubForm;\n                break;\n            case 'AssistanceOutSubForm':\n                nextSubForm = AssistanceOutSubForm;\n                break;\n            case 'EndSubForm':\n                nextSubForm = EndSubForm;\n                break;\n        }\n\n        setTimeout(() => {\n            this.setState({ \n                formVisible: true,\n                curSubForm: nextSubForm,\n                subFormData: subFormData\n            });\n        }, 100);\n\n    }\n\n    toggleRightSide = (e) => {\n        e.preventDefault();\n        this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n    }\n\n    render() {\n\n        const navlinks = [\n            {\n                href: '/',\n                title: 'Home'\n            },\n            {\n                href: '/modules',\n                title: 'Modules'\n            },\n            {\n                href: '/assistance',\n                title: 'Assistance'\n            }\n        ]\n\n        let SubForm = this.state.curSubForm;\n\n        let formpageClassName = 'form-page-container-wrap';\n        if(this.state.isRightSideOpen){\n            formpageClassName = 'form-page-container-wrap right-side--opend';\n        }\n        else {\n            formpageClassName = 'form-page-container-wrap right-side--collapsed';\n        }\n\n        return (\n            <div className={formpageClassName}>\n                <div className=\"form-page--main-side\">\n                    <HiddenHook />\n                    <div className=\"page-nav-history\">\n                        {/* { \n                            navlinks.map((navlink, index) => {\n                                return (\n                                    <span key={index}>\n                                        <Link key={index} to={navlink.href} className=\"page-nav-link\">\n                                            {navlink.title}\n                                        </Link>\n                                        {index != (navlinks.length - 1) ? \"/\" : null}\n                                    </span>\n                                    \n                                )                            \n                            }) \n                        } */}\n                    </div>\n                    <div className=\"form-step-container\">\n                        {\n                            this.state.formSteps.map((formStep, index) => {\n                                return (\n                                    <div key={index} className=\"form-step-wrap\" onClick={() => this.goSubForm(formStep.id)}>\n                                        <img className=\"\" src={require('../../../assets/images/page_icons/' + formStep.icon)}></img>\n                                        <div className=\"\">{formStep.title}</div>\n                                    </div>            \n                                )\n                            })\n                        }\n                    </div>\n                    <div className=\"form-page-container\">\n                        <div className=\"form-page--left-side\">\n                            <FormPagePose className=\"info-form-block\" pose={this.state.formVisible ? 'visible' : 'hidden'}>\n                                <SubForm \n                                    subFormData={this.state.subFormData}\n                                    cbGoSubForm={this.goSubForm}\n                                    cbUpdateSubForm={this.updateSubForm}\n                                    formData={this.state.formData}\n                                    cbGetSubFormField={this.getSubFormField}\n                                />\n                            </FormPagePose>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-page--right-side\">\n                    <span className=\"right-side-collapse-icon\" onClick={this.toggleRightSide}>\n                        <i className=\"fe-menu\"></i>\n                    </span>\n                    <div className=\"form-page--right-side-wrap\">\n                        {\n                            this.state.formData.map((subForm, sindex) => {\n                                if(subForm.visible == false){\n                                    return (<div key={sindex}></div>)\n                                }\n                                \n                                let subFormData = subForm.data;\n                                return(\n                                <div className=\"form-brief-block\" key={sindex}>\n                                    <div className=\"form-brief-top\">\n                                        <h4 className=\"form-brief-title\">{subFormData.title}</h4>\n                                        <span className=\"form-brief-edit-btn\" onClick={() => this.goSubForm(subForm.id)}><Icon type=\"edit\"></Icon></span>\n                                    </div>\n                                    <div className=\"form-brief-content\">\n                                    {\n                                        subFormData.fields.map((field, ffindex) => {\n                                            return(\n                                                <div className=\"form-brief-item\" key={ffindex}>\n                                                    <p className=\"form-brief-item-title\">{field.title != '' ? field.title + \":\" : null} </p>\n                                                    <p className=\"form-brief-item-value\">{field.value}</p>\n                                                </div>\n                                            )\n                                        })\n                                    }\n                                    </div>\n                                </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(AssistanceNew);"],"mappings":"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"},"metadata":{},"sourceType":"module"}