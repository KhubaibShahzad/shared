{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/modules/insurance/subforms/ProductInformationSubForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { Table, Button, Card, Row, Col } from 'reactstrap';\n\nimport { Form, Icon, Button, Row, Col, Input, InputNumber, DatePicker, Select, Radio, Collapse } from 'antd';\nimport { INSURANCE_TYPES_PROPERTY_CASUALTY } from 'constants/types';\nimport SubFormTable from \"../../../../components/SubFormTable\";\nimport moment from 'moment';\nvar dateFormat = 'MM/DD/YYYY';\nvar Option = Select.Option;\nvar Panel = Collapse.Panel;\nvar formChanged = false;\nvar formDataa = [];\nvar owners = ['Frank Jones', 'Tracy Jones', 'Joint'];\nvar insures = ['Frank Jones', 'Tracy Jones', 'Joint'];\nvar carriers = ['AIG', 'Allstate', 'Americal Family', 'American Financial', 'Amtrust', 'Assurant', 'Auto Owners Group', 'Berkshire Hathaway', 'Chubb Inc', 'Chubb Ltd', 'Cincinnati Financial', 'CNA', 'Erie Insurance', 'Farmers', 'Hartford', 'Liberty Mutual', 'Nationwide', 'Progressive', 'QBE', 'State Farm', 'Tokio Marine', 'Travelers', 'USAA', 'W. R. Berkley', 'Zurich'];\nvar formID = \"ProductInformationSubForm\";\nvar ProductInformationSubForm = /*#__PURE__*/function (_Component) {\n  _inherits(ProductInformationSubForm, _Component);\n  _createClass(ProductInformationSubForm, null, [{\n    key: \"FnCreateFormData\",\n    value: function FnCreateFormData(data) {\n      var formData = {\n        title: 'Product Information',\n        fields: [{\n          id: 'nickname',\n          title: 'Nickname',\n          value: data['nickname']\n        }, {\n          id: 'owner',\n          title: 'Owner',\n          value: data['owner']\n        }, {\n          id: 'policyStartDate',\n          title: 'Policy Start Date',\n          value: data['policyStartDate']\n        }, {\n          id: 'policyEndDate',\n          title: 'Policy End Date',\n          value: data['policyEndDate']\n        }, {\n          id: 'insure',\n          title: 'Insured',\n          value: data['insure']\n        }, {\n          id: 'addBeneficiaries',\n          title: 'Add Beneficiaries',\n          value: data['addBeneficiaries']\n        },\n        // {\n        //     id: 'beneficiaryName',\n        //     title: 'Name of Beneficiary',\n        //     value: data['beneficiaryName']\n        // },\n        // {\n        //     id: 'percent',\n        //     title: 'Percent',\n        //     value: data['percent']\n        // },\n        {\n          id: 'carrier',\n          title: 'Carrier',\n          value: data['carrier']\n        }, {\n          id: 'policy',\n          title: 'Policy Number',\n          value: data['policy']\n        }],\n        BeneficiaryAssignment: {\n          tittle: \"Asset Beneficiary Assignment\",\n          rows: data.rows\n        }\n      };\n      return formData;\n    }\n  }]);\n  function ProductInformationSubForm(props) {\n    var _this;\n    _classCallCheck(this, ProductInformationSubForm);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductInformationSubForm).call(this, props));\n    _this.state = {\n      enableNext: false,\n      formData: {\n        nickname: '',\n        owner: '',\n        policyStartDate: '',\n        policyEndDate: '',\n        insure: '',\n        addBeneficiaries: '',\n        beneficiaryName: '',\n        percent: '',\n        policy: '',\n        carrier: '',\n        rows: []\n      }\n    };\n    _this.goNextForm = _this.goNextForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goPreviousForm = _this.goPreviousForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateFormData = _this.updateFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formChange = _this.formChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormInputChange = _this.handleFormInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDatePickerChange = _this.handleDatePickerChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(ProductInformationSubForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateFormData(this.props.subFormData);\n    }\n  }, {\n    key: \"updateFormData\",\n    value: function updateFormData(newFormData) {\n      var formData = this.state.formData;\n      if (newFormData.BeneficiaryAssignment && newFormData.BeneficiaryAssignment.rows) this.setState({\n        rows: newFormData.BeneficiaryAssignment.rows\n      });\n      if (newFormData.hasOwnProperty('fields')) {\n        for (var findex = 0; findex < newFormData.fields.length; findex++) {\n          if (newFormData.fields[findex]['id'] == 'nickname') {\n            formData['nickname'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'owner') {\n            formData['owner'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'policyStartDate') {\n            formData['policyStartDate'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'policyEndDate') {\n            formData['policyEndDate'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'insure') {\n            formData['insure'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'addBeneficiaries') {\n            formData['addBeneficiaries'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'beneficiaryName') {\n            formData['beneficiaryName'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'percent') {\n            formData['percent'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'policy') {\n            formData['policy'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'carrier') {\n            formData['carrier'] = newFormData.fields[findex]['value'];\n          }\n        }\n        var enableNext = false;\n        if (formData['insuranceProduct'] != '') {\n          enableNext = true;\n        }\n        this.setState({\n          formData: formData,\n          enableNext: enableNext\n        });\n      }\n    }\n  }, {\n    key: \"handleFormInputChange\",\n    value: function handleFormInputChange(name, value) {\n      var formData = this.state.formData;\n      formData[name] = value;\n      var newState = {\n        formData: formData\n      };\n      if (formData['insuranceProduct'] != '') {\n        newState['enableNext'] = true;\n      } else {\n        newState['enableNext'] = false;\n      }\n      this.setState(newState);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      event.preventDefault();\n      var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n      this.handleFormInputChange(name, value);\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(name, value) {\n      this.handleFormInputChange(name, value);\n    }\n  }, {\n    key: \"handleDatePickerChange\",\n    value: function handleDatePickerChange(name, date, dateString) {\n      this.handleFormInputChange(name, dateString);\n    }\n  }, {\n    key: \"goNextForm\",\n    value: function goNextForm() {\n      var bEnd = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this.state.enableNext) {\n        return;\n      }\n      var newFormDataa = [];\n      var depindex = 0;\n      var rows = [];\n      formDataa = [];\n      var total = 0;\n      rows = this.state.rows;\n      var formData = ProductInformationSubForm.FnCreateFormData({\n        nickname: this.state.formData['nickname'],\n        owner: this.state.formData['owner'],\n        policyStartDate: this.state.formData['policyStartDate'],\n        policyEndDate: this.state.formData['policyEndDate'],\n        insure: this.state.formData['insure'],\n        addBeneficiaries: this.state.formData['addBeneficiaries'],\n        // beneficiaryName: this.state.formData['beneficiaryName'],\n        // percent: this.state.formData['percent'],\n        carrier: this.state.formData['carrier'],\n        policy: this.state.formData['policy'],\n        rows: this.state.rows\n      });\n      this.props.cbUpdateSubForm(formID, formData, true, bEnd);\n      var insurceTypeField = this.props.cbGetSubFormField('InsuranceTypeSubForm', 'insuranceType');\n      if (insurceTypeField != null) {\n        switch (insurceTypeField.value) {\n          case 'Long Term Disability':\n          case 'Long Term Care':\n          case 'Long Term Care - Hybrid':\n            this.props.cbGoSubForm(\"LongTermInformationSubForm\");\n            break;\n          case 'Automobile':\n            this.props.cbGoSubForm(\"AutoInsuranceInformationSubForm\");\n            break;\n          default:\n            this.props.cbGoSubForm(\"FinancialInformationSubForm\");\n        }\n      }\n      // for (var index = 0; index < rows.length; index++) {\n      //   newFormDataa.push({\n      //     name: rows[index][\"beneficiariesName\"],\n      //     percentage:\n      //       rows[index][\"percent\"] != \"\" ? parseInt(rows[index][\"percent\"]) : 0,\n      //   });\n      //   depindex = index + 1;\n      //   formDataa.push({\n      //     title: \"New \" + depindex + \" Information\",\n      //     uuid: rows[index][\"uuid\"],\n      //     key: rows[index][\"key\"],\n      //     fields: [\n      //       {\n      //         id: \"beneficiariesName\",\n      //         title: \"Trust Name\",\n      //         value: newFormDataa[index][\"name\"],\n      //       },\n\n      //       {\n      //         id: \"percent\",\n      //         title: \"Beneficiaries Percentage\",\n      //         value: newFormDataa[index][\"percentage\"],\n      //       },\n      //     ],\n      //   });\n      //   console.log(formDataa[index]);\n      //   this.props.cbUpdateSubForm(\n      //     formID + \"\" + index,\n      //     formDataa[index],\n      //     true,\n      //     bEnd\n      //   );\n      // }\n\n      this.props.cbGoNext(formID);\n    }\n  }, {\n    key: \"goPreviousForm\",\n    value: function goPreviousForm() {\n      // this.props.cbGoSubForm(\"InsuranceTypeSubForm\");\n      this.props.cbGoPrev(formID);\n    }\n  }, {\n    key: \"formChange\",\n    value: function formChange(rows) {\n      console.log(rows);\n      formChanged = true;\n      this.setState({\n        rows: rows\n      });\n      // formData = rows;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var size = this.state.size;\n      var colsFormat = [{\n        title: \"Beneficiaries\",\n        dataIndex: \"beneficiariesName\",\n        key: \"beneficiariesName\",\n        fields: [{\n          type: \"Select\",\n          name: \"beneficiariesName\",\n          placeholder: \"-Select Name-\",\n          values: [\"Name 1\", \"Name 2\"]\n        }]\n      }, {\n        title: \"Percent\",\n        dataIndex: \"percent\",\n        key: \"percent\",\n        fields: [{\n          type: \"Percent\",\n          name: \"percent\",\n          placeholder: \"Percentage\"\n        }]\n      }];\n      var insurceTypeField = this.props.cbGetSubFormField('InsuranceTypeSubForm', 'insuranceType');\n      var bPropertyCasualty = false;\n      if (insurceTypeField != null) {\n        for (var index = 0; index < INSURANCE_TYPES_PROPERTY_CASUALTY.length; index++) {\n          if (INSURANCE_TYPES_PROPERTY_CASUALTY[index]['name'] == insurceTypeField.value) {\n            bPropertyCasualty = true;\n            break;\n          }\n        }\n      }\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info-form-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 29\n        }\n      }, \"Product Information\"))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Nickname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: this.state.formData.nickname,\n        name: \"nickname\",\n        size: 'large',\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Owner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        showSearch: true,\n        placeholder: \"-Select-\",\n        value: this.state.formData.owner,\n        size: 'large',\n        onChange: function onChange(value) {\n          return _this2.handleSelectChange(\"owner\", value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 33\n        }\n      }, owners.map(function (owner, index) {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: index,\n          value: owner,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 66\n          }\n        }, owner);\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Policy Start Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        style: {\n          width: '100%'\n        },\n        format: dateFormat,\n        onChange: function onChange(date, dateString) {\n          return _this2.handleDatePickerChange('policyStartDate', date, dateString);\n        },\n        size: 'large',\n        value: this.state.formData.policyStartDate == null || this.state.formData.policyStartDate == '' ? null : moment(this.state.formData.policyStartDate, dateFormat),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Policy End Date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        style: {\n          width: '100%'\n        },\n        format: dateFormat,\n        onChange: function onChange(date, dateString) {\n          return _this2.handleDatePickerChange('policyEndDate', date, dateString);\n        },\n        size: 'large',\n        value: this.state.formData.policyEndDate == null || this.state.formData.policyEndDate == '' ? null : moment(this.state.formData.policyEndDate, dateFormat),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Insured\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        showSearch: true,\n        placeholder: \"-Frank Jones-\",\n        value: this.state.formData.insure,\n        onChange: function onChange(value) {\n          return _this2.handleSelectChange(\"insure\", value);\n        },\n        size: 'large',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 33\n        }\n      }, insures.map(function (insure, index) {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: index,\n          value: insure,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 68\n          }\n        }, insure);\n      }))))), !bPropertyCasualty && /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Add Beneficiaries\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Radio.Group, {\n        name: \"addBeneficiaries\",\n        size: 'large',\n        onChange: this.handleInputChange,\n        value: this.state.formData.addBeneficiaries,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Radio.Button, {\n        value: \"Yes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 33\n        }\n      }, \"Yes\"), /*#__PURE__*/React.createElement(Radio.Button, {\n        value: \"No\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 33\n        }\n      }, \"No\"))))), !bPropertyCasualty && this.state.formData.addBeneficiaries == 'Yes' &&\n      /*#__PURE__*/\n      // <Row gutter={16} type=\"flex\" justify=\"center\">\n      //     <Col span={16}>\n      //         <Form.Item label=\"Name of Beneficiary\">\n      //             <Input value={this.state.formData.beneficiaryName} name=\"beneficiaryName\" size={'large'} onChange={(event) => this.handleInputChange(event)}/>\n      //         </Form.Item>\n      //     </Col>\n      // </Row>\n      React.createElement(Row, {\n        gutter: 24,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(SubFormTable, {\n        title: \"Asset Beneficiary Assignment\",\n        rows: this.state.rows,\n        colsFormat: colsFormat,\n        addNewButtonben: true,\n        cbFormChange: this.formChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Collapse, {\n        accordion: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Panel, {\n        header: \"Advanced Information\",\n        key: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Carrier\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        showSearch: true,\n        placeholder: \"-Select-\",\n        value: this.state.formData.carrier,\n        onChange: function onChange(value) {\n          return _this2.handleSelectChange(\"carrier\", value);\n        },\n        size: 'large',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 49\n        }\n      }, carriers.map(function (carrier, index) {\n        return /*#__PURE__*/React.createElement(Option, {\n          key: index,\n          value: carrier,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 86\n          }\n        }, carrier);\n      }))))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Policy Number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        value: this.state.formData.policy,\n        name: \"policy\",\n        maxLength: 4,\n        size: 'large',\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 49\n        }\n      }))))))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: 'large',\n        onClick: function onClick() {\n          return _this2.goPreviousForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 29\n        }\n      }), \"Previous\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4 d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 21\n        }\n      }, this.props.dataID != null && /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: 'large',\n        style: {\n          marginRight: '10px'\n        },\n        onClick: function onClick() {\n          return _this2.goNextForm(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 29\n        }\n      }, \"Update\"), /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        disabled: !this.state.enableNext,\n        size: 'large',\n        onClick: function onClick() {\n          return _this2.goNextForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }\n      }, \"Next\", /*#__PURE__*/React.createElement(Icon, {\n        type: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 29\n        }\n      })))));\n    }\n  }]);\n  return ProductInformationSubForm;\n}(Component);\nexport default connect()(ProductInformationSubForm);","map":{"version":3,"names":["React","Component","connect","Form","Icon","Button","Row","Col","Input","InputNumber","DatePicker","Select","Radio","Collapse","INSURANCE_TYPES_PROPERTY_CASUALTY","SubFormTable","moment","dateFormat","Option","Panel","formChanged","formDataa","owners","insures","carriers","formID","ProductInformationSubForm","data","formData","title","fields","id","value","BeneficiaryAssignment","tittle","rows","props","state","enableNext","nickname","owner","policyStartDate","policyEndDate","insure","addBeneficiaries","beneficiaryName","percent","policy","carrier","goNextForm","bind","goPreviousForm","updateFormData","formChange","handleFormInputChange","handleInputChange","handleDatePickerChange","handleSelectChange","subFormData","newFormData","setState","hasOwnProperty","findex","length","name","newState","event","preventDefault","target","date","dateString","bEnd","newFormDataa","depindex","total","FnCreateFormData","cbUpdateSubForm","insurceTypeField","cbGetSubFormField","cbGoSubForm","cbGoNext","cbGoPrev","console","log","size","colsFormat","dataIndex","key","type","placeholder","values","bPropertyCasualty","index","map","width","dataID","marginRight"],"sources":["/home/albatross/gitCode/shared/src/pages/modules/insurance/subforms/ProductInformationSubForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { Table, Button, Card, Row, Col } from 'reactstrap';\n\nimport { Form, Icon, Button, Row, Col, Input, InputNumber, DatePicker, Select, Radio, Collapse } from 'antd';\n\nimport { INSURANCE_TYPES_PROPERTY_CASUALTY } from 'constants/types';\nimport SubFormTable from \"../../../../components/SubFormTable\";\nimport moment from 'moment';\n\nconst dateFormat = 'MM/DD/YYYY';\n\nconst { Option } = Select;\nconst { Panel } = Collapse;\nvar formChanged = false;\nlet formDataa = [];\nconst owners = [\n    'Frank Jones', 'Tracy Jones', 'Joint'\n]\n\nconst insures = [\n    'Frank Jones', 'Tracy Jones', 'Joint'\n]\n\nconst carriers = [\n    'AIG', 'Allstate', 'Americal Family', 'American Financial','Amtrust',\n'Assurant',\n'Auto Owners Group',\n'Berkshire Hathaway',\n'Chubb Inc',\n'Chubb Ltd',\n'Cincinnati Financial',\n'CNA',\n'Erie Insurance',\n'Farmers',\n'Hartford',\n'Liberty Mutual',\n'Nationwide',\n'Progressive',\n'QBE',\n'State Farm',\n'Tokio Marine',\n'Travelers',\n'USAA',\n'W. R. Berkley',\n'Zurich',\n]\n\nconst formID = \"ProductInformationSubForm\";\nclass ProductInformationSubForm extends Component {\n\n    static FnCreateFormData(data){\n        let formData = {\n            title: 'Product Information',\n            fields: [\n                {\n                    id: 'nickname',\n                    title: 'Nickname',\n                    value: data['nickname']\n                },\n                {\n                    id: 'owner',\n                    title: 'Owner',\n                    value: data['owner']\n                },\n                {\n                    id: 'policyStartDate',\n                    title: 'Policy Start Date',\n                    value: data['policyStartDate']\n                },\n                {\n                    id: 'policyEndDate',\n                    title: 'Policy End Date',\n                    value: data['policyEndDate']\n                },\n                {\n                    id: 'insure',\n                    title: 'Insured',\n                    value: data['insure']\n                },                \n                {\n                    id: 'addBeneficiaries',\n                    title: 'Add Beneficiaries',\n                    value: data['addBeneficiaries']\n                },\n                // {\n                //     id: 'beneficiaryName',\n                //     title: 'Name of Beneficiary',\n                //     value: data['beneficiaryName']\n                // },\n                // {\n                //     id: 'percent',\n                //     title: 'Percent',\n                //     value: data['percent']\n                // },\n                {\n                    id: 'carrier',\n                    title: 'Carrier',\n                    value: data['carrier']\n                },\n                {\n                    id: 'policy',\n                    title: 'Policy Number',\n                    value: data['policy']\n                },\n                \n            ],\n              BeneficiaryAssignment: {\n        tittle: \"Asset Beneficiary Assignment\",\n        rows: data.rows,\n      },\n        }\n\n        return formData\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            enableNext: false,\n            formData: {\n                nickname: '',\n                owner: '',\n                policyStartDate: '',\n                policyEndDate: '',\n                insure: '',                \n                addBeneficiaries: '',\n                beneficiaryName: '',\n                percent: '',\n                policy: '',\n                carrier: '',\n                rows: [],\n            }\n        }\n\n        this.goNextForm = this.goNextForm.bind(this);\n        this.goPreviousForm = this.goPreviousForm.bind(this);\n        this.updateFormData = this.updateFormData.bind(this);\n        this.formChange = this.formChange.bind(this);\n        this.handleFormInputChange = this.handleFormInputChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.updateFormData(this.props.subFormData);\n    }\n\n    updateFormData(newFormData){\n        let formData = this.state.formData;\n         if (\n      newFormData.BeneficiaryAssignment &&\n      newFormData.BeneficiaryAssignment.rows\n    )\n      this.setState({ rows: newFormData.BeneficiaryAssignment.rows });\n        if(newFormData.hasOwnProperty('fields')){\n            for(var findex = 0; findex < newFormData.fields.length; findex++){\n                if(newFormData.fields[findex]['id'] == 'nickname'){\n                    formData['nickname'] = newFormData.fields[findex]['value'];\n                }   \n                if(newFormData.fields[findex]['id'] == 'owner'){\n                    formData['owner'] = newFormData.fields[findex]['value'];\n                }  \n                if(newFormData.fields[findex]['id'] == 'policyStartDate'){\n                    formData['policyStartDate'] = newFormData.fields[findex]['value'];\n                }  \n                if(newFormData.fields[findex]['id'] == 'policyEndDate'){\n                    formData['policyEndDate'] = newFormData.fields[findex]['value'];\n                }  \n                if(newFormData.fields[findex]['id'] == 'insure'){\n                    formData['insure'] = newFormData.fields[findex]['value'];\n                }                  \n                if(newFormData.fields[findex]['id'] == 'addBeneficiaries'){\n                    formData['addBeneficiaries'] = newFormData.fields[findex]['value'];\n                }  \n                if(newFormData.fields[findex]['id'] == 'beneficiaryName'){\n                    formData['beneficiaryName'] = newFormData.fields[findex]['value'];\n                }  \n                if(newFormData.fields[findex]['id'] == 'percent'){\n                    formData['percent'] = newFormData.fields[findex]['value'];\n                }  \n                if(newFormData.fields[findex]['id'] == 'policy'){\n                    formData['policy'] = newFormData.fields[findex]['value'];\n                }    \n                if(newFormData.fields[findex]['id'] == 'carrier'){\n                    formData['carrier'] = newFormData.fields[findex]['value'];\n                }             \n            }\n    \n            let enableNext = false;\n            if(formData['insuranceProduct'] != ''){\n                enableNext = true;\n            }\n\n            this.setState({\n                formData: formData,\n                enableNext: enableNext\n            });\n        }\n        \n    }\n\n    handleFormInputChange(name, value){\n        \n        let formData = this.state.formData;\n        formData[name] = value;\n\n        let newState = {\n            formData: formData\n        };\n\n        if(formData['insuranceProduct'] != ''){\n            newState['enableNext'] = true;\n        }\n        else{\n            newState['enableNext'] = false;\n        }\n\n        this.setState(newState);\n    }\n\n    handleInputChange(event){\n        event.preventDefault();\n        const {name, value} = event.target;\n        this.handleFormInputChange(name, value);\n    }\n\n    handleSelectChange(name, value){\n        this.handleFormInputChange(name, value);\n    }\n\n    handleDatePickerChange(name, date, dateString){\n        this.handleFormInputChange(name, dateString);\n    }\n\n\n    goNextForm(bEnd = false){\n        if(!this.state.enableNext){\n            return;\n        }\n let newFormDataa = [];\n    let depindex = 0;\n    let rows = [];\n    formDataa = [];\n    let total = 0;\n    rows = this.state.rows;\n        let formData = ProductInformationSubForm.FnCreateFormData({\n            nickname: this.state.formData['nickname'],\n            owner: this.state.formData['owner'],\n            policyStartDate: this.state.formData['policyStartDate'],\n            policyEndDate: this.state.formData['policyEndDate'],\n            insure: this.state.formData['insure'],\n            addBeneficiaries: this.state.formData['addBeneficiaries'],\n            // beneficiaryName: this.state.formData['beneficiaryName'],\n            // percent: this.state.formData['percent'],\n            carrier: this.state.formData['carrier'],\n            policy: this.state.formData['policy'],\n            rows: this.state.rows,\n        })\n\n        this.props.cbUpdateSubForm(formID, formData, true, bEnd);\n        \n        var insurceTypeField = this.props.cbGetSubFormField('InsuranceTypeSubForm', 'insuranceType');\n\n        if(insurceTypeField != null){\n            switch(insurceTypeField.value){\n                case 'Long Term Disability':\n                case 'Long Term Care':\n                case 'Long Term Care - Hybrid':\n                    this.props.cbGoSubForm(\"LongTermInformationSubForm\");\n                    break;\n                case 'Automobile':\n                    this.props.cbGoSubForm(\"AutoInsuranceInformationSubForm\");\n                    break;\n                default: \n                    this.props.cbGoSubForm(\"FinancialInformationSubForm\");\n    \n            }\n        }\n    // for (var index = 0; index < rows.length; index++) {\n    //   newFormDataa.push({\n    //     name: rows[index][\"beneficiariesName\"],\n    //     percentage:\n    //       rows[index][\"percent\"] != \"\" ? parseInt(rows[index][\"percent\"]) : 0,\n    //   });\n    //   depindex = index + 1;\n    //   formDataa.push({\n    //     title: \"New \" + depindex + \" Information\",\n    //     uuid: rows[index][\"uuid\"],\n    //     key: rows[index][\"key\"],\n    //     fields: [\n    //       {\n    //         id: \"beneficiariesName\",\n    //         title: \"Trust Name\",\n    //         value: newFormDataa[index][\"name\"],\n    //       },\n\n    //       {\n    //         id: \"percent\",\n    //         title: \"Beneficiaries Percentage\",\n    //         value: newFormDataa[index][\"percentage\"],\n    //       },\n    //     ],\n    //   });\n    //   console.log(formDataa[index]);\n    //   this.props.cbUpdateSubForm(\n    //     formID + \"\" + index,\n    //     formDataa[index],\n    //     true,\n    //     bEnd\n    //   );\n    // }\n\n        this.props.cbGoNext(formID);\n\n    }\n\n    goPreviousForm(){\n        // this.props.cbGoSubForm(\"InsuranceTypeSubForm\");\n        this.props.cbGoPrev(formID);\n    }\n formChange(rows) { \n     console.log(rows);\n    formChanged = true;\n    this.setState({ rows: rows });\n    // formData = rows;\n  }\n\n    render() {\n\n           const { size } = this.state;\n    const colsFormat = [\n      {\n        title: \"Beneficiaries\",\n        dataIndex: \"beneficiariesName\",\n        key: \"beneficiariesName\",\n        fields: [\n          {\n            type: \"Select\",\n            name: \"beneficiariesName\",\n            placeholder: \"-Select Name-\",\n            values: [\"Name 1\", \"Name 2\"],\n          },\n        ],\n      },\n      {\n        title: \"Percent\",\n        dataIndex: \"percent\",\n        key: \"percent\",\n        fields: [\n          {\n            type: \"Percent\",\n            name: \"percent\",\n            placeholder: \"Percentage\",\n          },\n        ],\n      },\n    ];\n\n        var insurceTypeField = this.props.cbGetSubFormField('InsuranceTypeSubForm', 'insuranceType');\n        let bPropertyCasualty = false;\n        if(insurceTypeField != null){\n            for(var index = 0; index < INSURANCE_TYPES_PROPERTY_CASUALTY.length; index++){\n                if(INSURANCE_TYPES_PROPERTY_CASUALTY[index]['name'] == insurceTypeField.value){\n                    bPropertyCasualty = true;\n                    break;\n                }\n            }\n        }\n        \n        return (\n            <React.Fragment>\n                <div className=\"info-form-block\">\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <h2 className=\"text-center font-weight-bold mb-4\">Product Information</h2>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} type=\"flex\" justify=\"center\">\n                        <Col span={16}>\n                            <Form.Item label=\"Nickname\">\n                                <Input value={this.state.formData.nickname} name=\"nickname\" size={'large'} onChange={(event) => this.handleInputChange(event)}/>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} type=\"flex\" justify=\"center\">\n                        <Col span={16}>\n                            <Form.Item label=\"Owner\">\n                                <Select\n                                    showSearch\n                                    placeholder=\"-Select-\"\n                                    value={this.state.formData.owner}\n                                    size={'large'}\n                                    onChange={(value) => this.handleSelectChange(\"owner\", value)}\n                                >\n                                {\n                                    owners.map((owner, index) => <Option key={index} value={owner}>{owner}</Option>)\n                                }\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} type=\"flex\" justify=\"center\">\n                        <Col span={16}>\n                            <Form.Item label=\"Policy Start Date\">\n                                <DatePicker \n                                    style={{ width: '100%' }} \n                                    format={dateFormat} \n                                    onChange={(date, dateString) => this.handleDatePickerChange('policyStartDate', date, dateString)}\n                                    size={'large'}\n                                    value={this.state.formData.policyStartDate == null || this.state.formData.policyStartDate == '' ? null : moment(this.state.formData.policyStartDate, dateFormat)}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} type=\"flex\" justify=\"center\">\n                        <Col span={16}>\n                            <Form.Item label=\"Policy End Date\">\n                                <DatePicker \n                                    style={{ width: '100%' }} \n                                    format={dateFormat} \n                                    onChange={(date, dateString) => this.handleDatePickerChange('policyEndDate', date, dateString)}\n                                    size={'large'}\n                                    value={this.state.formData.policyEndDate == null || this.state.formData.policyEndDate == '' ? null : moment(this.state.formData.policyEndDate, dateFormat)}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row gutter={16} type=\"flex\" justify=\"center\">\n                        <Col span={16}>\n                            <Form.Item label=\"Insured\">\n                                <Select\n                                    showSearch\n                                    placeholder=\"-Frank Jones-\"\n                                    value={this.state.formData.insure}\n                                    onChange={(value) => this.handleSelectChange(\"insure\", value)}\n                                    size={'large'}\n                                >\n                                {\n                                    insures.map((insure, index) => <Option key={index} value={insure}>{insure}</Option>)\n                                }\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    {\n                        !bPropertyCasualty &&\n                        <Row gutter={16} type='flex' justify='center'>\n                            <Col span={16}>\n                            <Form.Item label=\"Add Beneficiaries\">\n                                <Radio.Group\n                                name={`addBeneficiaries`}\n                                size={'large'}\n                                onChange={this.handleInputChange} \n                                value={this.state.formData.addBeneficiaries}\n                                >\n                                <Radio.Button value='Yes'>Yes</Radio.Button>\n                                <Radio.Button value='No'>No</Radio.Button>\n                                </Radio.Group>\n                            </Form.Item>\n                            </Col>\n                        </Row>\n                    }\n                    \n                    {\n                        !bPropertyCasualty && this.state.formData.addBeneficiaries == 'Yes' &&\n                        // <Row gutter={16} type=\"flex\" justify=\"center\">\n                        //     <Col span={16}>\n                        //         <Form.Item label=\"Name of Beneficiary\">\n                        //             <Input value={this.state.formData.beneficiaryName} name=\"beneficiaryName\" size={'large'} onChange={(event) => this.handleInputChange(event)}/>\n                        //         </Form.Item>\n                        //     </Col>\n                        // </Row>\n                         <Row gutter={24} type=\"flex\" justify=\"center\">\n            <SubFormTable\n              title=\"Asset Beneficiary Assignment\"\n              rows={this.state.rows}\n              colsFormat={colsFormat}\n              addNewButtonben={true}\n              cbFormChange={this.formChange}\n            ></SubFormTable>\n          </Row>\n                    }\n                    {/* {\n                        !bPropertyCasualty && this.state.formData.addBeneficiaries == 'Yes' &&\n                        <Row gutter={16} type=\"flex\" justify=\"center\">\n                            <Col span={16}>\n                                <Form.Item label=\"Percent\">\n                                    <InputNumber\n                                        value={this.state.formData.percent}\n                                        size={'large'}\n                                        style={{ width: '100%' }}\n                                        name=\"percent\"\n                                        min={0}\n                                        max={100}\n                                        formatter={value => `${value}%`}\n                                        parser={value => value.replace('%', '')}\n                                        onChange={(value) => this.handleFormInputChange(\"percent\", value)}\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    } */}\n                    <Row gutter={16} type=\"flex\" justify=\"center\">\n                        <Col span={16}>\n                            <Collapse accordion>\n                                <Panel header=\"Advanced Information\" key=\"1\">\n                                    <Row gutter={16}>\n                                        <Col>\n                                            <Form.Item label=\"Carrier\">\n                                                <Select\n                                                    showSearch\n                                                    placeholder=\"-Select-\"\n                                                    value={this.state.formData.carrier}\n                                                    onChange={(value) => this.handleSelectChange(\"carrier\", value)}\n                                                    size={'large'}\n                                                >\n                                                {\n                                                    carriers.map((carrier, index) => <Option key={index} value={carrier}>{carrier}</Option>)\n                                                }\n                                                </Select>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>           \n                                    <Row gutter={16}>\n                                        <Col>\n                                            <Form.Item label=\"Policy Number\">\n                                                <Input value={this.state.formData.policy} name=\"policy\" maxLength={4} size={'large'} onChange={(event) => this.handleInputChange(event)}/>\n                                            </Form.Item>\n                                        </Col>\n                                    </Row>\n                                                             \n                                </Panel>                        \n                            </Collapse>\n                        </Col>\n                    </Row>                    \n                </div>\n                <div className=\"row justify-content-between\">\n                    <div className=\"col-8\">\n                        <Button type=\"primary\" size={'large'} onClick={() => this.goPreviousForm()}>\n                            <Icon type=\"left\" />\n                            Previous\n                        </Button>\n                    </div>\n                    <div className=\"col-4 d-flex justify-content-end\">\n                        {\n                            this.props.dataID != null && \n                            <Button type=\"primary\" size={'large'} style={{marginRight: '10px'}} onClick={() => this.goNextForm(true)}>\n                                Update\n                            </Button>\n                        }\n                        <Button type=\"primary\" disabled={ !this.state.enableNext } size={'large'} onClick={() => this.goNextForm()}>\n                            Next\n                            <Icon type=\"right\" />\n                        </Button>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default connect()(ProductInformationSubForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}