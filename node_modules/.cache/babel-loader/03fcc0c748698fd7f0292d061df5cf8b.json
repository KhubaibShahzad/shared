{"ast":null,"code":"import _defineProperty from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/goals/subforms/BreastFeedingFormulaSubForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button, Checkbox, Icon, Col, Row, Slider } from 'antd';\nvar checklistData = [{\n  id: 'breastfeeding',\n  title: 'Breastfeeding',\n  total: 0,\n  fields: [{\n    id: 'electric_breast_pump',\n    field_title: 'Electric breast pump',\n    values: [30, 325]\n  }, {\n    id: 'manual_breast_pump',\n    field_title: 'Manual breast pump',\n    values: [12, 39]\n  }, {\n    id: 'nursing_pillows',\n    field_title: 'Nursing pillows',\n    values: [10, 40]\n  }, {\n    id: 'total_breastfeeding',\n    field_title: 'Total Breastfeeding'\n  }]\n}, {\n  id: 'feeding',\n  title: 'Feeding',\n  total: 0,\n  fields: [{\n    id: 'bottles_nipples',\n    field_title: 'Bottles and nipples',\n    values: [6, 60]\n  }, {\n    id: 'high_chair',\n    field_title: 'Highchair',\n    values: [60, 250]\n  }, {\n    id: 'sterilizer',\n    field_title: 'Sterilizer',\n    values: [38, 250]\n  }, {\n    id: 'other_misc',\n    field_title: 'Plates, spoons, and bowls and other misc.',\n    values: [10]\n  }, {\n    id: 'total_feeding',\n    field_title: 'Total Feeding'\n  }]\n}, {\n  id: 'formula',\n  title: 'Formula',\n  total: 0,\n  fields: [{\n    id: 'plan_breastfeed',\n    field_title: 'I plan to breastfeed',\n    values: [0, 0, 0]\n  }, {\n    id: 'formula_feeding',\n    field_title: 'Formula feeding',\n    values: [1800]\n  }, {\n    id: 'custom',\n    field_title: 'Custom',\n    values: [4884, 10681]\n  }, {\n    id: 'total_formula',\n    field_title: 'Total Formula'\n  }]\n}];\nvar _formatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\nvar formID = \"BreastFeedingFormulaSubForm\";\nvar BreastFeedingFormulaSubForm = /*#__PURE__*/function (_Component) {\n  _inherits(BreastFeedingFormulaSubForm, _Component);\n  function BreastFeedingFormulaSubForm(props) {\n    var _this;\n    _classCallCheck(this, BreastFeedingFormulaSubForm);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BreastFeedingFormulaSubForm).call(this, props));\n    _this.handleOnChange = function (value, id, index) {\n      var formData = _this.state.formData;\n      if (_this.state[\"\".concat(id, \"_cbx\")]) {\n        if (_this.state.formData[\"\".concat(id, \"_input\")]) {\n          checklistData[index].total = checklistData[index].total -= _this.state.formData[\"\".concat(id, \"_input\")];\n        }\n        checklistData[index].total = checklistData[index].total += value;\n        _this.handleFormInputChange(\"\".concat(id, \"_input\"), value);\n        _this.handleFormInputChange(index, \"\".concat(_formatter.format(checklistData[index].total)));\n      } else {\n        _this.handleFormInputChange(\"\".concat(id, \"_input\"), value);\n      }\n    };\n    _this.createTable = function () {\n      var table = [];\n      checklistData.map(function (data, index) {\n        var children = [];\n        data.fields.map(function (field) {\n          var field_element = '';\n          if (field.values) {\n            if (field.values.length == 2) {\n              var _ref;\n              field_element = /*#__PURE__*/React.createElement(Row, {\n                key: field.id,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 41\n                }\n              }, /*#__PURE__*/React.createElement(Col, {\n                span: 16,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 45\n                }\n              }, /*#__PURE__*/React.createElement(Checkbox, {\n                name: field.id,\n                onChange: function onChange(event) {\n                  return _this.handleCheckboxOnCheck(event, field.values, index);\n                },\n                disabled: !_this.state.formData[\"\".concat(field.id, \"_input\")],\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 49\n                }\n              }, \"\".concat(field.field_title, \":\"))), /*#__PURE__*/React.createElement(Col, {\n                span: 8,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 45\n                }\n              }, /*#__PURE__*/React.createElement(\"p\", {\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 49\n                }\n              }, _this.state[\"\".concat(field.id, \"_cbx\")]), /*#__PURE__*/React.createElement(Slider, {\n                min: field.values[0],\n                max: field.values[1],\n                tipFormatter: _this.formatter,\n                tooltipVisible: _this.state.formData[\"\".concat(field.id, \"_input\")] ? 1 : 0,\n                marks: (_ref = {}, _defineProperty(_ref, field.values[0], \"\".concat(_formatter.format(field.values[0]))), _defineProperty(_ref, field.values[1], \"\".concat(_formatter.format(field.values[1]))), _ref),\n                onChange: function onChange(value) {\n                  return _this.handleOnChange(value, field.id, index);\n                },\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 49\n                }\n              })));\n            } else if (field.values.length == 1) {\n              field_element = /*#__PURE__*/React.createElement(Row, {\n                key: field.id,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 41\n                }\n              }, /*#__PURE__*/React.createElement(Col, {\n                span: 16,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 45\n                }\n              }, /*#__PURE__*/React.createElement(Checkbox, {\n                name: field.id,\n                onChange: function onChange(event) {\n                  return _this.handleCheckboxOnCheck(event, field.values, index);\n                },\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 49\n                }\n              }, \"\".concat(field.field_title, \":\"))), /*#__PURE__*/React.createElement(Col, {\n                span: 8,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 45\n                }\n              }, \" \".concat(_formatter.format(field.values[0]))));\n            } else if (field.values.length == 3) {\n              field_element = /*#__PURE__*/React.createElement(Row, {\n                key: field.id,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 41\n                }\n              }, /*#__PURE__*/React.createElement(Col, {\n                span: 16,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 45\n                }\n              }, /*#__PURE__*/React.createElement(Checkbox, {\n                name: field.id,\n                onChange: function onChange(event) {\n                  return _this.handleCheckboxOnCheck(event, field.values, index);\n                },\n                disabled: !_this.state.formData[\"\".concat(field.id, \"_input\")],\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 45\n                }\n              }, \"\".concat(field.field_title, \":\"))), /*#__PURE__*/React.createElement(Col, {\n                span: 3,\n                className: \"mr-2\",\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 45\n                }\n              }, /*#__PURE__*/React.createElement(Slider, {\n                onChange: _this.onChange,\n                tipFormatter: _this.formatter,\n                min: 0,\n                max: _this.state.formData[\"\".concat(field.id, \"_input\")],\n                value: _this.state.formData[\"\".concat(field.id, \"_input\")],\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 49\n                }\n              })), /*#__PURE__*/React.createElement(Col, {\n                span: 4,\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 45\n                }\n              }, /*#__PURE__*/React.createElement(Input, {\n                addonBefore: \"$\",\n                type: \"number\",\n                value: _this.state.formData[\"\".concat(field.id, \"_input\")],\n                name: \"\".concat(field.id, \"_input\"),\n                size: \"large\",\n                onChange: function onChange(event) {\n                  return _this.handleInputChange(event, field.id, index);\n                },\n                __self: _assertThisInitialized(_assertThisInitialized(_this)),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 49\n                }\n              })));\n            }\n          } else {\n            field_element = /*#__PURE__*/React.createElement(Row, {\n              key: field.id,\n              className: \"mt-3\",\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(Col, {\n              span: 16,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"label\", {\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 45\n              }\n            }, \"\".concat(field.field_title, \" : \"))), /*#__PURE__*/React.createElement(Col, {\n              span: 8,\n              __self: _assertThisInitialized(_assertThisInitialized(_this)),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 41\n              }\n            }, _this.state.formData[index]));\n          }\n          children.push(field_element);\n        });\n\n        //Create the parent and add the children\n        table.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"mb-3\",\n          key: index,\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          __self: _assertThisInitialized(_assertThisInitialized(_this)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }\n        }, data.title), children));\n      });\n      return table;\n    };\n    _this.state = {\n      enableNext: false,\n      indeterminate: false,\n      checkAll: false,\n      formData: {}\n    };\n    _this.goNextForm = _this.goNextForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateFormData = _this.updateFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormInputChange = _this.handleFormInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOnChange = _this.handleOnChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(BreastFeedingFormulaSubForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateFormData(this.props.subFormData);\n    }\n  }, {\n    key: \"updateFormData\",\n    value: function updateFormData(newFormData) {\n      var formData = this.state.formData;\n      if (newFormData.hasOwnProperty('fields')) {\n        for (var findex = 0; findex < newFormData.fields.length; findex++) {}\n        var enableNext = false;\n        this.setState({\n          formData: formData,\n          enableNext: enableNext\n        });\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event, id, index) {\n      var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n      var inputValue = parseInt(value);\n      if (isNaN(inputValue)) {\n        inputValue = 0;\n      }\n      if (this.state[\"\".concat(id, \"_cbx\")]) {\n        if (this.state.formData[\"\".concat(id, \"_input\")]) {\n          checklistData[index].total = checklistData[index].total -= this.state.formData[\"\".concat(id, \"_input\")];\n        }\n        checklistData[index].total = checklistData[index].total += inputValue;\n        this.handleFormInputChange(name, inputValue);\n        this.handleFormInputChange(index, \"\".concat(_formatter.format(checklistData[index].total)));\n      } else {\n        this.handleFormInputChange(name, inputValue);\n      }\n    }\n  }, {\n    key: \"handleCheckboxOnCheck\",\n    value: function handleCheckboxOnCheck(event, values, index) {\n      if (event.target.checked) {\n        this.setState(_defineProperty({}, \"\".concat(event.target.name, \"_cbx\"), true));\n        if (values.length == 2) {\n          var inputValue = parseInt(this.state.formData[\"\".concat(event.target.name, \"_input\")]);\n          checklistData[index].total = checklistData[index].total += inputValue;\n        } else if (values.length == 1) {\n          checklistData[index].total = checklistData[index].total += values[0];\n        } else if (values.length == 3) {\n          var _inputValue = parseInt(this.state.formData[\"\".concat(event.target.name, \"_input\")]);\n          checklistData[index].total = checklistData[index].total += _inputValue;\n        }\n      } else {\n        this.setState(_defineProperty({}, \"\".concat(event.target.name, \"_cbx\"), false));\n        if (values.length == 2) {\n          var _inputValue2 = parseInt(this.state.formData[\"\".concat(event.target.name, \"_input\")]);\n          checklistData[index].total = checklistData[index].total -= _inputValue2;\n        } else if (values.length == 1) {\n          checklistData[index].total = checklistData[index].total -= values[0];\n        } else if (values.length == 3) {\n          var _inputValue3 = this.state.formData[\"\".concat(event.target.name, \"_input\")];\n          checklistData[index].total = checklistData[index].total -= _inputValue3;\n        }\n      }\n      this.handleFormInputChange(index, \"\".concat(_formatter.format(checklistData[index].total)));\n    }\n  }, {\n    key: \"handleFormInputChange\",\n    value: function handleFormInputChange(name, value) {\n      var formData = this.state.formData;\n      formData[name] = value;\n      var newState = {\n        formData: formData\n      };\n      this.setState(newState);\n    }\n  }, {\n    key: \"getFormValue\",\n    value: function getFormValue(name) {\n      if (this.state.formData.length) {\n        return this.state.formData[name];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"goNextForm\",\n    value: function goNextForm() {\n      this.props.cbGoSubForm(\"GroomingSubForm\");\n    }\n  }, {\n    key: \"formatter\",\n    value: function formatter(value) {\n      return \"\".concat(_formatter.format(value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info-form-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }\n      }, \"Breast Feeding \\\\ Formula\"), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }\n      }, this.createTable()))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: 'large',\n        onClick: function onClick() {\n          return _this2.goNextForm();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }\n      }, \"Next\", /*#__PURE__*/React.createElement(Icon, {\n        type: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n  return BreastFeedingFormulaSubForm;\n}(Component);\nexport default connect()(BreastFeedingFormulaSubForm);","map":{"version":3,"names":["React","Component","connect","Input","Button","Checkbox","Icon","Col","Row","Slider","checklistData","id","title","total","fields","field_title","values","formatter","Intl","NumberFormat","style","currency","formID","BreastFeedingFormulaSubForm","props","handleOnChange","value","index","formData","state","handleFormInputChange","format","createTable","table","map","data","children","field","field_element","length","event","handleCheckboxOnCheck","onChange","handleInputChange","push","enableNext","indeterminate","checkAll","goNextForm","bind","updateFormData","subFormData","newFormData","hasOwnProperty","findex","setState","target","name","inputValue","parseInt","isNaN","checked","newState","cbGoSubForm"],"sources":["/home/albatross/gitCode/shared/src/pages/goals/subforms/BreastFeedingFormulaSubForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Button, Checkbox, Icon, Col, Row, Slider  } from 'antd';\n\nlet checklistData = [\n    {\n        id: 'breastfeeding',\n        title: 'Breastfeeding',\n        total: 0,\n        fields: [\n            {\n                id: 'electric_breast_pump',\n                field_title: 'Electric breast pump',\n                values: [30, 325]\n            },\n            {\n                id: 'manual_breast_pump',\n                field_title: 'Manual breast pump',\n                values: [12, 39]\n            },\n            {\n                id: 'nursing_pillows',\n                field_title: 'Nursing pillows',\n                values: [10, 40]\n            },\n            {\n                id: 'total_breastfeeding',\n                field_title: 'Total Breastfeeding'\n            }\n        ]\n    },\n    {\n        id: 'feeding',\n        title: 'Feeding',\n        total: 0,\n        fields: [\n            {\n                id: 'bottles_nipples',\n                field_title: 'Bottles and nipples',\n                values: [6, 60]\n            },\n            {\n                id: 'high_chair',\n                field_title: 'Highchair',\n                values: [60, 250]\n            },\n            {\n                id: 'sterilizer',\n                field_title: 'Sterilizer',\n                values: [38, 250]\n            },\n            {\n                id: 'other_misc',\n                field_title: 'Plates, spoons, and bowls and other misc.',\n                values: [10]\n            },\n            {\n                id: 'total_feeding',\n                field_title: 'Total Feeding'\n            }\n        ]\n    },\n    {\n        id: 'formula',\n        title: 'Formula',\n        total: 0,\n        fields: [\n            {\n                id: 'plan_breastfeed',\n                field_title: 'I plan to breastfeed',\n                values: [0, 0, 0]\n            },\n            {\n                id: 'formula_feeding',\n                field_title: 'Formula feeding',\n                values: [1800]\n            },\n            {\n                id: 'custom',\n                field_title: 'Custom',\n                values: [4884, 10681]\n            },\n            {\n                id: 'total_formula',\n                field_title: 'Total Formula'\n            }\n        ]\n    }\n]\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n});\n\n\nconst formID = \"BreastFeedingFormulaSubForm\";\n\nclass BreastFeedingFormulaSubForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            enableNext: false,\n            indeterminate: false,\n            checkAll: false,\n            formData: {\n            }\n        }\n        this.goNextForm = this.goNextForm.bind(this);\n        this.updateFormData = this.updateFormData.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleFormInputChange = this.handleFormInputChange.bind(this);\n        this.handleOnChange = this.handleOnChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateFormData(this.props.subFormData);\n    }\n\n    updateFormData(newFormData){\n        let formData = this.state.formData;\n        if(newFormData.hasOwnProperty('fields')){\n            for(var findex = 0; findex < newFormData.fields.length; findex++){\n               \n            }\n    \n            let enableNext = false;\n\n            this.setState({\n                formData: formData,\n                enableNext: enableNext\n            })\n        }\n        \n    }\n\n    handleInputChange(event, id, index){\n        const {name, value} = event.target;\n        let inputValue = parseInt(value);\n        if(isNaN(inputValue)) {\n            inputValue = 0;\n        }\n\n        if(this.state[`${id}_cbx`]){\n            if(this.state.formData[`${id}_input`]){\n                checklistData[index].total = checklistData[index].total -= this.state.formData[`${id}_input`];\n            }\n            checklistData[index].total = checklistData[index].total += inputValue;\n            this.handleFormInputChange(name, inputValue);\n            this.handleFormInputChange(index, `${formatter.format(checklistData[index].total)}`)\n        } else {\n            this.handleFormInputChange(name, inputValue);\n        }\n    }\n\n    handleOnChange = (value, id, index) => {\n        let formData = this.state.formData;\n        \n        if(this.state[`${id}_cbx`]){\n            if(this.state.formData[`${id}_input`]){\n                checklistData[index].total = checklistData[index].total -= this.state.formData[`${id}_input`];\n            }\n            checklistData[index].total = checklistData[index].total += value;\n            this.handleFormInputChange(`${id}_input`, value);\n            this.handleFormInputChange(index, `${formatter.format(checklistData[index].total)}`)\n        } else {\n            this.handleFormInputChange(`${id}_input`, value);\n        }\n    };\n\n    handleCheckboxOnCheck(event, values, index){\n        if(event.target.checked) {\n            this.setState({\n                [`${event.target.name}_cbx`]:true\n            });\n            if(values.length == 2){\n                const inputValue = parseInt(this.state.formData[`${event.target.name}_input`]);\n                checklistData[index].total = checklistData[index].total += inputValue;\n            } else if(values.length == 1) {\n                checklistData[index].total = checklistData[index].total += values[0];\n            } else if(values.length == 3) {\n                const inputValue = parseInt(this.state.formData[`${event.target.name}_input`]);\n                checklistData[index].total = checklistData[index].total += inputValue;\n            }\n        } else {\n            this.setState({\n                [`${event.target.name}_cbx`]:false\n            });\n            if(values.length == 2){\n                const inputValue = parseInt(this.state.formData[`${event.target.name}_input`]);\n                checklistData[index].total = checklistData[index].total -= inputValue;\n            } else if(values.length == 1) {\n                checklistData[index].total = checklistData[index].total -= values[0];\n            } else if(values.length == 3) {\n                const inputValue = this.state.formData[`${event.target.name}_input`];\n                checklistData[index].total = checklistData[index].total -= inputValue;\n            }\n        }\n\n        this.handleFormInputChange(index, `${formatter.format(checklistData[index].total)}`)\n    }\n\n    handleFormInputChange(name, value){\n        \n        let formData = this.state.formData;\n        formData[name] = value;\n\n        let newState = {\n            formData: formData\n        };\n        this.setState(newState);\n    }\n\n    getFormValue(name){\n        if(this.state.formData.length){\n            return this.state.formData[name];\n        }\n        else{\n            return null;\n        }\n        \n    }\n\n\n    goNextForm(){\n        this.props.cbGoSubForm(\"GroomingSubForm\");\n    }\n\n    formatter(value) {\n        return `${formatter.format(value)}`;\n    }\n\n    createTable = () => {\n        let table = [];\n\n        checklistData.map((data, index) => {\n            let children = [];\n\n            data.fields.map((field) => {\n                let field_element = '';\n                if(field.values) {\n                    if(field.values.length == 2){\n                       field_element =  <Row key={field.id}>\n                                            <Col span={16}>\n                                                <Checkbox\n                                                    name={field.id}\n                                                    onChange={(event) => this.handleCheckboxOnCheck(event, field.values, index)}\n                                                    disabled={!this.state.formData[`${field.id}_input`]}\n                                                >\n                                                    {`${field.field_title}:`}\n                                                </Checkbox>\n                                            </Col>\n                                            <Col span={8}>\n                                                <p>{this.state[`${field.id}_cbx`]}</p>\n                                                <Slider\n                                                    min={field.values[0]}\n                                                    max={field.values[1]}\n                                                    tipFormatter={this.formatter}\n                                                    tooltipVisible={this.state.formData[`${field.id}_input`] ? 1:0}\n                                                    marks={{[field.values[0]]:`${formatter.format(field.values[0])}`, [field.values[1]]:`${formatter.format(field.values[1])}`}}\n                                                    onChange={(value) => this.handleOnChange(value, field.id, index)}\n                                                />\n                                            </Col>\n                                        </Row>;\n                    } else if(field.values.length == 1) {\n                        field_element = <Row key={field.id}>\n                                            <Col span={16}>\n                                                <Checkbox\n                                                    name={field.id}\n                                                    onChange={(event) => this.handleCheckboxOnCheck(event, field.values, index)}\n                                                >\n                                                    {`${field.field_title}:`}\n                                                </Checkbox>\n                                            </Col>\n                                            <Col span={8}>\n                                                {` ${formatter.format(field.values[0])}`}\n                                            </Col>\n                                        </Row>;\n                    } else if(field.values.length == 3) {\n                        field_element = <Row key={field.id}>\n                                            <Col span={16}>\n                                            <Checkbox \n                                                name={field.id}\n                                                onChange={(event) => this.handleCheckboxOnCheck(event, field.values, index)}\n                                                disabled={!this.state.formData[`${field.id}_input`]}\n                                            >{`${field.field_title}:`}</Checkbox>\n                                            </Col>\n                                            <Col span={3} className=\"mr-2\">\n                                                <Slider\n                                                    onChange={this.onChange}\n                                                    tipFormatter={this.formatter}\n                                                    min={0}\n                                                    max={this.state.formData[`${field.id}_input`]}\n                                                    value={this.state.formData[`${field.id}_input`]}\n                                                />\n                                            </Col>\n                                            <Col span={4}>\n                                                <Input\n                                                    addonBefore=\"$\"\n                                                    type=\"number\"\n                                                    value={this.state.formData[`${field.id}_input`]}\n                                                    name={`${field.id}_input`}\n                                                    size=\"large\"\n                                                    onChange={(event) => this.handleInputChange(event, field.id, index)}\n                                                />\n                                            </Col>\n\n                                        </Row>;\n                    }\n                } else {\n                    field_element = <Row key={field.id} className=\"mt-3\">\n                                        <Col span={16}>\n                                            <label>{`${field.field_title} : `}</label>\n                                        </Col>\n                                        <Col span={8}>\n                                            {this.state.formData[index]}\n                                        </Col>\n                                    </Row>;\n                }\n\n                children.push(field_element)\n            })\n\n            //Create the parent and add the children\n            table.push(<div className=\"mb-3\" key={index}>\n                            <label>{data.title}</label>\n                            {children}\n                        </div>)\n        })\n        return table;\n    }\n\n\n    render() {\n        \n        return (\n            <React.Fragment>\n                <div className=\"info-form-block\">\n                    <h2 className=\"text-center font-weight-bold mb-4\">Breast Feeding \\ Formula</h2>\n                    <Row gutter={16} type=\"flex\" justify=\"center\">\n                        <Col span={16}>\n                            {this.createTable()}\n                        </Col>\n                    </Row>\n                </div>\n                <div className=\"d-flex justify-content-end\">\n                    <Button type=\"primary\" size={'large'} onClick={() => this.goNextForm()}>\n                        Next\n                        <Icon type=\"right\" />\n                    </Button>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default connect()(BreastFeedingFormulaSubForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}