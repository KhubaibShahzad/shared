{"ast":null,"code":"import _slicedToArray from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/goals/StartBusiness/FeesTaxandMonthlyForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Button, Row, Col, Select, Icon, Checkbox, Card, Radio } from 'antd';\nimport Currency from '../../../components/form/Currency';\nvar Option = Select.Option;\nvar dateFormat = 'MM/DD/YYYY';\nvar formID = 'FeesTaxandMonthlyForm';\nvar FeesTaxandMonthlyForm = /*#__PURE__*/function (_Component) {\n  _inherits(FeesTaxandMonthlyForm, _Component);\n  _createClass(FeesTaxandMonthlyForm, null, [{\n    key: \"FnCreateFormData\",\n    value: function FnCreateFormData(data) {\n      var formData = {\n        title: 'Goal Information',\n        fields: [{\n          id: 'goal_description',\n          title: 'Goal Information',\n          value: data['goal_description']\n        }, {\n          id: 'goal_date',\n          title: 'Start a Business Date',\n          value: data['goal_date']\n        }, {\n          id: 'goal_assigned_to',\n          title: 'Goal Assigned To',\n          value: data['goal_assigned_to']\n        }]\n      };\n      return formData;\n    }\n  }]);\n  function FeesTaxandMonthlyForm(props) {\n    var _this;\n    _classCallCheck(this, FeesTaxandMonthlyForm);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FeesTaxandMonthlyForm).call(this, props));\n    _this.getCheckedInput = function (label, key, checked) {\n      var disabled = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      return /*#__PURE__*/React.createElement(Form.Item, {\n        className: \"text-center\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        size: \"small\",\n        className: \"card-information\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, label), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info-wrap\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        style: {\n          marginTop: 10,\n          marginRight: 10\n        },\n        checked: _this.props.goalsObject[formID][checked],\n        onChange: function onChange(e) {\n          _this.props.handleFormInputChange(formID, checked, e.target.checked);\n          _this.calculateTotal();\n          _this.setState({\n            dummy: true\n          });\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      })), disabled && _this.props.goalsObject[formID][checked] ? /*#__PURE__*/React.createElement(Col, {\n        span: 10,\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Item, {\n        label: \"Complete details Now or Later ?\",\n        className: \"text-center\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Radio.Group, {\n        buttonStyle: \"solid\",\n        size: 'large',\n        name: \"now_later\",\n        defaultValue: _this.props.goalsObject[formID].now_later ? _this.props.goalsObject[formID].now_later : '',\n        onChange: function onChange(e) {\n          _this.setState({\n            dummy: true\n          });\n          _this.props.handleInputChange(e, formID);\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Radio.Button, {\n        value: \"yes\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 23\n        }\n      }, \"Now\"), /*#__PURE__*/React.createElement(Radio.Button, {\n        value: \"no\",\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 23\n        }\n      }, \"Later\")))) : '', !disabled ? /*#__PURE__*/React.createElement(Col, {\n        span: disabled ? 12 : 21,\n        style: {\n          marginTop: 27\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Currency, {\n        disabled: !_this.props.goalsObject[formID][checked],\n        size: 'large',\n        value: Object.keys(_this.props.goalsObject[formID]).length === 0 ? '' : _this.props.goalsObject[formID][key] ? _this.props.goalsObject[formID][key] : '',\n        name: key,\n        onChange: function onChange(e) {\n          _this.props.handleInputChange(e, formID);\n          _this.calculateTotal();\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      })) : '', disabled && _this.props.goalsObject[formID][checked] && _this.props.goalsObject[formID].now_later === 'no' ? /*#__PURE__*/React.createElement(Col, {\n        span: disabled ? 12 : 21,\n        style: {\n          marginTop: 27\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Currency, {\n        disabled: !_this.props.goalsObject[formID][checked],\n        size: 'large',\n        value: Object.keys(_this.props.goalsObject[formID]).length === 0 ? '' : _this.props.goalsObject[formID][key] ? _this.props.goalsObject[formID][key] : '',\n        name: key,\n        onChange: function onChange(e) {\n          _this.props.handleInputChange(e, formID);\n          _this.calculateTotal();\n        },\n        __self: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 19\n        }\n      })) : ''))));\n    };\n    _this.calculateTotal = function () {\n      var total = 0;\n      for (var _i = 0, _Object$entries = Object.entries(_this.props.goalsObject[formID]); _i < _Object$entries.length; _i++) {\n        var _ref = _Object$entries[_i];\n        var _ref2 = _slicedToArray(_ref, 2);\n        var key = _ref2[0];\n        var value = _ref2[1];\n        if (key === 'taxes_checked' && _this.props.goalsObject[formID].taxes_checked) {\n          if (_this.props.goalsObject[formID].taxes) {\n            total += parseInt(_this.props.goalsObject[formID].taxes);\n          }\n        }\n        if (key === 'utilities_checked' && _this.props.goalsObject[formID].utilities_checked) {\n          if (_this.props.goalsObject[formID].utilities) {\n            total += parseInt(_this.props.goalsObject[formID].utilities);\n          }\n        }\n        if (key === 'payroll_checked' && _this.props.goalsObject[formID].payroll_checked) {\n          if (_this.props.goalsObject[formID].payroll) {\n            total += parseInt(_this.props.goalsObject[formID].payroll);\n          }\n        }\n        if (key === 'insurance_checked' && _this.props.goalsObject[formID].insurance_checked) {\n          if (_this.props.goalsObject[formID].insurance) {\n            total += parseInt(_this.props.goalsObject[formID].insurance);\n          }\n        }\n        if (key === 'depriciation_scheduled_checked' && _this.props.goalsObject[formID].depriciation_scheduled_checked) {\n          if (_this.props.goalsObject[formID].depriciation_scheduled) {\n            total += parseInt(_this.props.goalsObject[formID].depriciation_scheduled);\n          }\n        }\n      }\n      _this.props.handleFormInputChange(formID, 'total', total);\n    };\n    _this.state = {\n      dummy: false,\n      enableNext: false,\n      formData: {\n        goal_description: '',\n        goal_date: '',\n        goal_assigned_to: ''\n      },\n      size: 'large'\n    };\n    _this.goNextForm = _this.goNextForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateFormData = _this.updateFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormInputChange = _this.handleFormInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDatePickerChange = _this.handleDatePickerChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(FeesTaxandMonthlyForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateFormData(this.props.subFormData);\n    }\n  }, {\n    key: \"updateFormData\",\n    value: function updateFormData(newFormData) {\n      var formData = this.state.formData;\n      if (newFormData.hasOwnProperty('fields')) {\n        for (var findex = 0; findex < newFormData.fields.length; findex++) {\n          if (newFormData.fields[findex]['id'] == 'goal_description') {\n            formData['goal_description'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'goal_date') {\n            formData['goal_date'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] == 'goal_assigned_to') {\n            formData['goal_assigned_to'] = newFormData.fields[findex]['value'];\n          }\n        }\n        var enableNext = false;\n        if (formData['goal_description'] != '') {\n          enableNext = true;\n        }\n        this.setState({\n          formData: formData,\n          enableNext: enableNext\n        });\n      }\n    }\n  }, {\n    key: \"handleFormInputChange\",\n    value: function handleFormInputChange(name, value) {\n      var formData = this.state.formData;\n      formData[name] = value;\n      var newState = {\n        formData: formData\n      };\n      if (formData['goal_description'] != '') {\n        newState['enableNext'] = true;\n      } else {\n        newState['enableNext'] = false;\n      }\n      this.setState(newState);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      event.preventDefault();\n      var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n      this.handleFormInputChange(name, value);\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(name, value) {\n      this.handleFormInputChange(name, value);\n    }\n  }, {\n    key: \"handleDatePickerChange\",\n    value: function handleDatePickerChange(name, date, dateString) {\n      this.handleFormInputChange(name, dateString);\n    }\n  }, {\n    key: \"getFormValue\",\n    value: function getFormValue(name) {\n      if (this.state.formData.length) {\n        return this.state.formData[name];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"goNextForm\",\n    value: function goNextForm() {\n      var formData = FeesTaxandMonthlyForm.FnCreateFormData({\n        goal_description: this.state.formData['goal_description'],\n        goal_date: this.state.formData['goal_date'],\n        goal_assigned_to: this.state.formData['goal_assigned_to']\n      });\n      this.props.cbUpdateSubForm(formID, formData);\n      if (this.props.selectedGoal === 'Retirement') {\n        this.props.cbGoSubForm('RetirementSubForm');\n      } else if (this.props.selectedGoal === 'Rental / Investment Property') {\n        this.props.cbGoSubForm('RentalPropertySubForm');\n      } else if (this.props.selectedGoal === 'Private Education') {\n        this.props.cbGoSubForm('PrivateEducationSubForm');\n      } else {\n        this.props.cbGoSubForm('GoalFinancingInformationSubForm');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info-form-block pl-5 pr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }\n      }, \"Fees, Taxes and Monthly\"), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        type: \"flex\",\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }\n      }, this.getCheckedInput('Taxes (Variable. 21% corporate tax rate for 2020)', 'taxes', 'taxes_checked')), /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }\n      }, this.getCheckedInput('Utilities ($2/square foot of office space)', 'utilities', 'utilities_checked')), /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, this.getCheckedInput('Payroll (35% - 50% of total budget)', 'payroll', 'payroll_checked')), /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }\n      }, this.getCheckedInput('Insurance ($100 - 125/month)', 'insurance', 'insurance_checked')), /*#__PURE__*/React.createElement(Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }\n      }, this.getCheckedInput('Depreciation Schedule for Real Estate (only if property owned)', 'depriciation_scheduled', 'depriciation_scheduled_checked', true)))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: 'large',\n        onClick: function onClick() {\n          console.log('FORM ', _this2.props.goalsObject);\n          // this.props.goToSelectionPage();\n          _this2.props.dynamicFormsMovePrevious('FeesTaxandMonthlyForm');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }\n      }), \"Previous\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4 d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: 'large',\n        onClick: function onClick() {\n          console.log('Object Data ', _this2.props.goalsObject);\n          _this2.props.dynamicFormsMoveNext('FeesTaxandMonthlyForm');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }\n      }, \"Next\", /*#__PURE__*/React.createElement(Icon, {\n        type: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n  return FeesTaxandMonthlyForm;\n}(Component);\nexport default connect()(FeesTaxandMonthlyForm);","map":{"version":3,"names":["React","Component","connect","Form","Button","Row","Col","Select","Icon","Checkbox","Card","Radio","Currency","Option","dateFormat","formID","FeesTaxandMonthlyForm","data","formData","title","fields","id","value","props","getCheckedInput","label","key","checked","disabled","marginTop","marginRight","goalsObject","e","handleFormInputChange","target","calculateTotal","setState","dummy","now_later","handleInputChange","Object","keys","length","total","entries","taxes_checked","taxes","parseInt","utilities_checked","utilities","payroll_checked","payroll","insurance_checked","insurance","depriciation_scheduled_checked","depriciation_scheduled","state","enableNext","goal_description","goal_date","goal_assigned_to","size","goNextForm","bind","updateFormData","handleDatePickerChange","handleSelectChange","subFormData","newFormData","hasOwnProperty","findex","name","newState","event","preventDefault","date","dateString","FnCreateFormData","cbUpdateSubForm","selectedGoal","cbGoSubForm","console","log","dynamicFormsMovePrevious","dynamicFormsMoveNext"],"sources":["/home/albatross/gitCode/shared/src/pages/goals/StartBusiness/FeesTaxandMonthlyForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Button,\n  Row,\n  Col,\n  Select,\n  Icon,\n  Checkbox,\n  Card,\n  Radio,\n} from 'antd';\nimport Currency from '../../../components/form/Currency';\n\nconst { Option } = Select;\nconst dateFormat = 'MM/DD/YYYY';\n\nconst formID = 'FeesTaxandMonthlyForm';\nclass FeesTaxandMonthlyForm extends Component {\n  static FnCreateFormData(data) {\n    let formData = {\n      title: 'Goal Information',\n      fields: [\n        {\n          id: 'goal_description',\n          title: 'Goal Information',\n          value: data['goal_description'],\n        },\n        {\n          id: 'goal_date',\n          title: 'Start a Business Date',\n          value: data['goal_date'],\n        },\n        {\n          id: 'goal_assigned_to',\n          title: 'Goal Assigned To',\n          value: data['goal_assigned_to'],\n        },\n      ],\n    };\n\n    return formData;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dummy: false,\n      enableNext: false,\n      formData: {\n        goal_description: '',\n        goal_date: '',\n        goal_assigned_to: '',\n      },\n      size: 'large',\n    };\n    this.goNextForm = this.goNextForm.bind(this);\n    this.updateFormData = this.updateFormData.bind(this);\n    this.handleFormInputChange = this.handleFormInputChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateFormData(this.props.subFormData);\n  }\n\n  updateFormData(newFormData) {\n    let formData = this.state.formData;\n    if (newFormData.hasOwnProperty('fields')) {\n      for (var findex = 0; findex < newFormData.fields.length; findex++) {\n        if (newFormData.fields[findex]['id'] == 'goal_description') {\n          formData['goal_description'] = newFormData.fields[findex]['value'];\n        }\n        if (newFormData.fields[findex]['id'] == 'goal_date') {\n          formData['goal_date'] = newFormData.fields[findex]['value'];\n        }\n        if (newFormData.fields[findex]['id'] == 'goal_assigned_to') {\n          formData['goal_assigned_to'] = newFormData.fields[findex]['value'];\n        }\n      }\n\n      let enableNext = false;\n      if (formData['goal_description'] != '') {\n        enableNext = true;\n      }\n\n      this.setState({\n        formData: formData,\n        enableNext: enableNext,\n      });\n    }\n  }\n\n  handleFormInputChange(name, value) {\n    let formData = this.state.formData;\n    formData[name] = value;\n\n    let newState = {\n      formData: formData,\n    };\n\n    if (formData['goal_description'] != '') {\n      newState['enableNext'] = true;\n    } else {\n      newState['enableNext'] = false;\n    }\n\n    this.setState(newState);\n  }\n\n  handleInputChange(event) {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.handleFormInputChange(name, value);\n  }\n\n  handleSelectChange(name, value) {\n    this.handleFormInputChange(name, value);\n  }\n\n  handleDatePickerChange(name, date, dateString) {\n    this.handleFormInputChange(name, dateString);\n  }\n\n  getFormValue(name) {\n    if (this.state.formData.length) {\n      return this.state.formData[name];\n    } else {\n      return null;\n    }\n  }\n\n  goNextForm() {\n    let formData = FeesTaxandMonthlyForm.FnCreateFormData({\n      goal_description: this.state.formData['goal_description'],\n      goal_date: this.state.formData['goal_date'],\n      goal_assigned_to: this.state.formData['goal_assigned_to'],\n    });\n\n    this.props.cbUpdateSubForm(formID, formData);\n\n    if (this.props.selectedGoal === 'Retirement') {\n      this.props.cbGoSubForm('RetirementSubForm');\n    } else if (this.props.selectedGoal === 'Rental / Investment Property') {\n      this.props.cbGoSubForm('RentalPropertySubForm');\n    } else if (this.props.selectedGoal === 'Private Education') {\n      this.props.cbGoSubForm('PrivateEducationSubForm');\n    } else {\n      this.props.cbGoSubForm('GoalFinancingInformationSubForm');\n    }\n  }\n\n  getCheckedInput = (label, key, checked, disabled = false) => {\n    return (\n      <Form.Item className='text-center'>\n        <Row gutter={16}>\n          <Card size='small' className='card-information'>\n            <h5>{label}</h5>\n            <div className='info-wrap'>\n              <Col>\n                <Checkbox\n                  style={{\n                    marginTop: 10,\n                    marginRight: 10,\n                  }}\n                  checked={this.props.goalsObject[formID][checked]}\n                  onChange={(e) => {\n                    this.props.handleFormInputChange(\n                      formID,\n                      checked,\n                      e.target.checked\n                    );\n                    this.calculateTotal();\n                    this.setState({ dummy: true });\n                  }}\n                ></Checkbox>\n              </Col>\n              {disabled && this.props.goalsObject[formID][checked] ? (\n                <Col span={10}>\n                  <Form.Item\n                    label='Complete details Now or Later ?'\n                    className='text-center'\n                  >\n                    <Radio.Group\n                      buttonStyle='solid'\n                      size={'large'}\n                      name={`now_later`}\n                      defaultValue={\n                        this.props.goalsObject[formID].now_later\n                          ? this.props.goalsObject[formID].now_later\n                          : ''\n                      }\n                      onChange={(e) => {\n                        this.setState({ dummy: true });\n                        this.props.handleInputChange(e, formID);\n                      }}\n                    >\n                      <Radio.Button value='yes'>Now</Radio.Button>\n                      <Radio.Button value='no'>Later</Radio.Button>\n                    </Radio.Group>\n                  </Form.Item>\n                </Col>\n              ) : (\n                ''\n              )}\n              {!disabled ? (\n                <Col span={disabled ? 12 : 21} style={{ marginTop: 27 }}>\n                  <Currency\n                    disabled={!this.props.goalsObject[formID][checked]}\n                    size={'large'}\n                    value={\n                      Object.keys(this.props.goalsObject[formID]).length === 0\n                        ? ''\n                        : this.props.goalsObject[formID][key]\n                        ? this.props.goalsObject[formID][key]\n                        : ''\n                    }\n                    name={key}\n                    onChange={(e) => {\n                      this.props.handleInputChange(e, formID);\n                      this.calculateTotal();\n                    }}\n                  />\n                </Col>\n              ) : (\n                ''\n              )}\n\n              {disabled &&\n              this.props.goalsObject[formID][checked] &&\n              this.props.goalsObject[formID].now_later === 'no' ? (\n                <Col span={disabled ? 12 : 21} style={{ marginTop: 27 }}>\n                  <Currency\n                    disabled={!this.props.goalsObject[formID][checked]}\n                    size={'large'}\n                    value={\n                      Object.keys(this.props.goalsObject[formID]).length === 0\n                        ? ''\n                        : this.props.goalsObject[formID][key]\n                        ? this.props.goalsObject[formID][key]\n                        : ''\n                    }\n                    name={key}\n                    onChange={(e) => {\n                      this.props.handleInputChange(e, formID);\n                      this.calculateTotal();\n                    }}\n                  />\n                </Col>\n              ) : (\n                ''\n              )}\n            </div>\n          </Card>\n        </Row>\n      </Form.Item>\n    );\n  };\n\n  calculateTotal = () => {\n    let total = 0;\n    for (const [key, value] of Object.entries(this.props.goalsObject[formID])) {\n      if (\n        key === 'taxes_checked' &&\n        this.props.goalsObject[formID].taxes_checked\n      ) {\n        if (this.props.goalsObject[formID].taxes) {\n          total += parseInt(this.props.goalsObject[formID].taxes);\n        }\n      }\n\n      if (\n        key === 'utilities_checked' &&\n        this.props.goalsObject[formID].utilities_checked\n      ) {\n        if (this.props.goalsObject[formID].utilities) {\n          total += parseInt(this.props.goalsObject[formID].utilities);\n        }\n      }\n\n      if (\n        key === 'payroll_checked' &&\n        this.props.goalsObject[formID].payroll_checked\n      ) {\n        if (this.props.goalsObject[formID].payroll) {\n          total += parseInt(this.props.goalsObject[formID].payroll);\n        }\n      }\n\n      if (\n        key === 'insurance_checked' &&\n        this.props.goalsObject[formID].insurance_checked\n      ) {\n        if (this.props.goalsObject[formID].insurance) {\n          total += parseInt(this.props.goalsObject[formID].insurance);\n        }\n      }\n\n      if (\n        key === 'depriciation_scheduled_checked' &&\n        this.props.goalsObject[formID].depriciation_scheduled_checked\n      ) {\n        if (this.props.goalsObject[formID].depriciation_scheduled) {\n          total += parseInt(\n            this.props.goalsObject[formID].depriciation_scheduled\n          );\n        }\n      }\n    }\n    this.props.handleFormInputChange(formID, 'total', total);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className='info-form-block pl-5 pr-5'>\n          <h2 className='text-center font-weight-bold mb-4'>\n            Fees, Taxes and Monthly\n          </h2>\n\n          <Row gutter={16} type='flex' justify='center'>\n            <Col span={16}>\n              {this.getCheckedInput(\n                'Taxes (Variable. 21% corporate tax rate for 2020)',\n                'taxes',\n                'taxes_checked'\n              )}\n            </Col>\n\n            <Col span={16}>\n              {this.getCheckedInput(\n                'Utilities ($2/square foot of office space)',\n                'utilities',\n                'utilities_checked'\n              )}\n            </Col>\n\n            <Col span={16}>\n              {this.getCheckedInput(\n                'Payroll (35% - 50% of total budget)',\n                'payroll',\n                'payroll_checked'\n              )}\n            </Col>\n\n            <Col span={16}>\n              {this.getCheckedInput(\n                'Insurance ($100 - 125/month)',\n                'insurance',\n                'insurance_checked'\n              )}\n            </Col>\n\n            <Col span={16}>\n              {this.getCheckedInput(\n                'Depreciation Schedule for Real Estate (only if property owned)',\n                'depriciation_scheduled',\n                'depriciation_scheduled_checked',\n                true\n              )}\n            </Col>\n          </Row>\n        </div>\n\n        <div className='row justify-content-between'>\n          <div className='col-8'>\n            <Button\n              type='primary'\n              size={'large'}\n              onClick={() => {\n                console.log('FORM ', this.props.goalsObject);\n                // this.props.goToSelectionPage();\n                this.props.dynamicFormsMovePrevious('FeesTaxandMonthlyForm');\n              }}\n            >\n              <Icon type='left' />\n              Previous\n            </Button>\n          </div>\n          <div className='col-4 d-flex justify-content-end'>\n            <Button\n              type='primary'\n              size={'large'}\n              onClick={() => {\n                console.log('Object Data ', this.props.goalsObject);\n                this.props.dynamicFormsMoveNext('FeesTaxandMonthlyForm');\n              }}\n            >\n              Next\n              <Icon type='right' />\n            </Button>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect()(FeesTaxandMonthlyForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}