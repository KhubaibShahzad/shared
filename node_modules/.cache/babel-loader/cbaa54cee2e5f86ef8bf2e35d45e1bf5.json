{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/modules/insurance/InsuranceNew.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport ImageIcon from \"assets/images/asset.png\";\nimport AssetPlanet from \"assets/images/asset-planet-logo.jpg\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { QL_INSURANCE_PRODUCT_ADD, QL_INSURANCE_PRODUCT_UPDATE, QL_INSURANCE_PRODUCT_GET } from \"../../../constants/queries\";\nimport { FormPagePose } from \"../../../components/Animations\";\nimport InsuranceTypeSubForm from \"./subforms/InsuranceTypeSubForm\";\nimport ProductInformationSubForm from \"./subforms/ProductInformationSubForm\";\nimport LongTermInformationSubForm from \"./subforms/LongTermInformationSubForm\";\nimport AutoInsuranceInformationSubForm from \"./subforms/AutoInsuranceInformationSubForm\";\nimport FinancialInformationSubForm from \"./subforms/FinancialInformationSubForm\";\nimport IncomeInformationSubForm from \"./subforms/IncomeInformationSubForm\";\nimport EndSubForm from \"./subforms/EndSubForm\";\nimport { float2Currency } from \"helpers/Utils\";\nvar fnMutationInsuranceProductAdd = null;\nvar dataMutationInsuranceProductAdd = null;\nvar fnMutationInsuranceProductUpdate = null;\nvar dataMutationInsuranceProductUpdate = null;\nvar prevPos = 0;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_INSURANCE_PRODUCT_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationInsuranceProductAdd = _useMutation2[0];\n  dataMutationInsuranceProductAdd = _useMutation2[1].dataMutationInsuranceProductAdd;\n  var _useMutation3 = useMutation(QL_INSURANCE_PRODUCT_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationInsuranceProductUpdate = _useMutation4[0];\n  dataMutationInsuranceProductUpdate = _useMutation4[1].dataMutationInsuranceProductUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  });\n}\nfunction initialFormData(data) {\n  var formData = [];\n  if (data.hasOwnProperty(\"insuranceProduct\")) {\n    formData.push({\n      id: \"InsuranceTypeSubForm\",\n      data: InsuranceTypeSubForm.FnCreateFormData({\n        value: data[\"insuranceProduct\"][\"productInformation\"][\"insuranceType\"]\n      }),\n      visible: true,\n      stepId: \"StepInsuranceTypeSubForm\"\n    });\n    formData.push({\n      id: \"ProductInformationSubForm\",\n      data: ProductInformationSubForm.FnCreateFormData({\n        nickname: data[\"insuranceProduct\"][\"productInformation\"][\"nicknameOfInsuranceProduct\"],\n        owner: data[\"insuranceProduct\"][\"productInformation\"][\"owner\"],\n        policyStartDate: data[\"insuranceProduct\"][\"productInformation\"][\"policyStartDate\"] == null ? \"\" : data[\"insuranceProduct\"][\"productInformation\"][\"policyStartDate\"],\n        policyEndDate: data[\"insuranceProduct\"][\"productInformation\"][\"policyEndDate\"] == null ? \"\" : data[\"insuranceProduct\"][\"productInformation\"][\"policyEndDate\"],\n        insure: data[\"insuranceProduct\"][\"productInformation\"][\"insured\"],\n        addBeneficiaries: data[\"insuranceProduct\"][\"productInformation\"][\"addBeneficiaries\"] ? \"Yes\" : \"No\",\n        beneficiaryName: data[\"insuranceProduct\"][\"productInformation\"][\"nameOfBeneficiary\"],\n        percent: data[\"insuranceProduct\"][\"productInformation\"][\"percent\"],\n        carrier: data[\"insuranceProduct\"][\"productInformation\"][\"carrier\"],\n        policy: data[\"insuranceProduct\"][\"productInformation\"][\"lastFourOfPolicyNumber\"]\n      }),\n      visible: true,\n      stepId: \"StepProductInformationSubForm\"\n    });\n    formData.push({\n      id: \"LongTermInformationSubForm\",\n      data: LongTermInformationSubForm.FnCreateFormData({\n        dailyBenefit: data[\"insuranceProduct\"][\"longTermCare\"][\"dailyBenefit\"],\n        monthlyBenefit: data[\"insuranceProduct\"][\"longTermCare\"][\"monthlyBenefit\"],\n        lifetimeBenefit: data[\"insuranceProduct\"][\"longTermCare\"][\"lifetimeBenefit\"],\n        inflationRider: data[\"insuranceProduct\"][\"longTermCare\"][\"inflationRider\"],\n        eliminationPeriod: data[\"insuranceProduct\"][\"longTermCare\"][\"eliminationPeriod\"]\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"AutoInsuranceInformationSubForm\",\n      data: AutoInsuranceInformationSubForm.FnCreateFormData({\n        bodilyInjuryPerIncident: data[\"insuranceProduct\"][\"autoInsuranceInformation\"][\"bodilyInjuryPerIncident\"],\n        bodilyInjuryAggregate: data[\"insuranceProduct\"][\"autoInsuranceInformation\"][\"bodilyInjuryAggregate\"],\n        propertyDamagePerIncident: data[\"insuranceProduct\"][\"autoInsuranceInformation\"][\"propertyDamagePerIncident\"]\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"FinancialInformationSubForm\",\n      data: FinancialInformationSubForm.FnCreateFormData({\n        annualPremium: data[\"insuranceProduct\"][\"financialInformation\"][\"annualPremium\"],\n        monthlyPremium: data[\"insuranceProduct\"][\"financialInformation\"][\"monthlyPremium\"],\n        deductible: data[\"insuranceProduct\"][\"financialInformation\"][\"deductible\"],\n        cashValue: data[\"insuranceProduct\"][\"financialInformation\"][\"cashValue\"],\n        cashValueDate: data[\"insuranceProduct\"][\"financialInformation\"][\"cashValueDate\"] == null ? \"\" : data[\"insuranceProduct\"][\"financialInformation\"][\"cashValueDate\"],\n        faceValue: data[\"insuranceProduct\"][\"financialInformation\"][\"faceValue\"]\n      }),\n      visible: true,\n      stepId: \"StepFinancialInformation\"\n    });\n    formData.push({\n      id: \"IncomeInformationSubForm\",\n      data: IncomeInformationSubForm.FnCreateFormData({\n        frequencyCurrentIncome: data[\"insuranceProduct\"][\"incomeInformation\"][\"frequencyOfCurrentIncome\"],\n        currentMonthlyIncome: data[\"insuranceProduct\"][\"incomeInformation\"][\"currentMonthlyIncome\"],\n        currentAnnualIncome: data[\"insuranceProduct\"][\"incomeInformation\"][\"currentAnnualIncome\"],\n        lumpsumPaymentDate: data[\"insuranceProduct\"][\"incomeInformation\"][\"lumpSumPaymentDate\"] == null ? \"\" : data[\"insuranceProduct\"][\"incomeInformation\"][\"lumpSumPaymentDate\"],\n        futureLumpsumPayment: data[\"insuranceProduct\"][\"incomeInformation\"][\"futureLumpSumPayment\"],\n        futureAnnualIncome: data[\"insuranceProduct\"][\"incomeInformation\"][\"futureAnnualIncome\"],\n        dateFutureIncomeEnds: data[\"insuranceProduct\"][\"incomeInformation\"][\"dateFutureIncomeEnds\"] == null ? \"\" : data[\"insuranceProduct\"][\"incomeInformation\"][\"dateFutureIncomeEnds\"],\n        futureIncomeDate: data[\"insuranceProduct\"][\"incomeInformation\"][\"futureIncomeDate\"] == null ? \"\" : data[\"insuranceProduct\"][\"incomeInformation\"][\"futureIncomeDate\"],\n        incomeEndsDeath: data[\"insuranceProduct\"][\"incomeInformation\"][\"incomeEndsAtDeath\"],\n        incomeStartsRetirement: data[\"insuranceProduct\"][\"incomeInformation\"][\"incomeStartsAtRetirement\"],\n        taxable: data[\"insuranceProduct\"][\"incomeInformation\"][\"taxable\"] ? \"Yes\" : \"No\"\n      }),\n      visible: true,\n      stepId: \"StepIncomeInformation\"\n    });\n  } else {\n    formData.push({\n      id: \"InsuranceTypeSubForm\",\n      data: InsuranceTypeSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepInsuranceTypeSubForm\"\n    });\n    formData.push({\n      id: \"ProductInformationSubForm\",\n      data: ProductInformationSubForm.FnCreateFormData({\n        nickname: \"\",\n        owner: \"\",\n        policyStartDate: \"\",\n        policyEndDate: \"\",\n        insure: \"\",\n        addBeneficiaries: \"\",\n        beneficiaryName: \"\",\n        percent: \"\",\n        carrier: \"\",\n        policy: \"\"\n      }),\n      visible: true,\n      stepId: \"StepProductInformationSubForm\"\n    });\n    formData.push({\n      id: \"LongTermInformationSubForm\",\n      data: LongTermInformationSubForm.FnCreateFormData({\n        dailyBenefit: \"\",\n        monthlyBenefit: \"\",\n        lifetimeBenefit: \"\",\n        inflationRider: \"\",\n        eliminationPeriod: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"AutoInsuranceInformationSubForm\",\n      data: AutoInsuranceInformationSubForm.FnCreateFormData({\n        bodilyInjuryPerIncident: \"\",\n        bodilyInjuryAggregate: \"\",\n        propertyDamagePerIncident: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\"\n    });\n    formData.push({\n      id: \"FinancialInformationSubForm\",\n      data: FinancialInformationSubForm.FnCreateFormData({\n        annualPremium: \"\",\n        monthlyPremium: \"\",\n        deductible: \"\",\n        cashValue: \"\",\n        cashValueDate: \"\",\n        faceValue: \"\"\n      }),\n      visible: true,\n      stepId: \"StepFinancialInformation\"\n    });\n    formData.push({\n      id: \"IncomeInformationSubForm\",\n      data: IncomeInformationSubForm.FnCreateFormData({\n        frequencyCurrentIncome: \"\",\n        currentMonthlyIncome: \"\",\n        currentAnnualIncome: \"\",\n        lumpsumPaymentDate: \"\",\n        futureLumpsumPayment: \"\",\n        futureAnnualIncome: \"\",\n        dateFutureIncomeEnds: \"\",\n        futureIncomeDate: \"\",\n        incomeEndsDeath: \"\",\n        incomeStartsRetirement: \"\",\n        taxable: \"\"\n      }),\n      visible: true,\n      stepId: \"StepIncomeInformation\"\n    });\n  }\n  return formData;\n}\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != \"\") {\n    var _useQuery = useQuery(QL_INSURANCE_PRODUCT_GET, {\n        variables: {\n          id: props.dbID\n        }\n      }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n    if (data) {\n      console.log(\"call..\");\n      props.cbLoadDBData(initialFormData(data));\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 10\n    }\n  });\n}\nvar InsuranceNew = /*#__PURE__*/function (_Component) {\n  _inherits(InsuranceNew, _Component);\n  function InsuranceNew(props) {\n    var _this;\n    _classCallCheck(this, InsuranceNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InsuranceNew).call(this, props));\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    var dbID = null;\n    var dbLoaded = true;\n    var insuranceID = _this.props.match.params.insuranceID;\n    if (insuranceID) {\n      dbID = insuranceID;\n      dbLoaded = false;\n    }\n    var formData = initialFormData({});\n    _this.state = {\n      dataID: dbID,\n      curSubFormID: \"InsuranceTypeSubForm\",\n      curSubForm: InsuranceTypeSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: formData,\n      isRightSideOpen: true,\n      formSteps: [{\n        id: \"StepInsuranceTypeSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Insurance Type\"\n      }, {\n        id: \"StepProductInformationSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Product Information\"\n      }, {\n        id: \"StepAdditionalInformation\",\n        icon: \"icon_ex.png\",\n        title: \"Additional Information\"\n      }, {\n        id: \"StepFinancialInformation\",\n        icon: \"icon_ex.png\",\n        title: \"Financial Information\"\n      }, {\n        id: \"StepIncomeInformation\",\n        icon: \"icon_ex.png\",\n        title: \"Income Information\"\n      }],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      formStep2FormMap: {\n        StepInsuranceTypeSubForm: [\"InsuranceTypeSubForm\"],\n        StepProductInformationSubForm: [\"ProductInformationSubForm\"],\n        StepAdditionalInformation: [\"LongTermInformationSubForm\", \"AutoInsuranceInformationSubForm\"],\n        StepFinancialInformation: [\"FinancialInformationSubForm\"],\n        StepIncomeInformation: [\"IncomeInformationSubForm\"]\n      },\n      isEndForm: false\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRightSideFormData = _this.getRightSideFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTopNav = _this.getTopNav.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goNext = _this.goNext.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goPrev = _this.goPrev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(InsuranceNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.goSubForm(\"InsuranceTypeSubForm\");\n      this.goSubForm(this.state.formSteps[0][\"id\"]);\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index][\"id\"] == formID) {\n          var data = formData[index][\"data\"];\n          var fields = data[\"fields\"];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex][\"id\"] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return \"\";\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var varQL = null;\n      switch (subFormID) {\n        case \"InsuranceTypeSubForm\":\n          varQL = {\n            productInformation: {\n              insuranceType: this.getSubFormFieldValue(subFormID, \"insuranceType\")\n            }\n          };\n          break;\n        case \"ProductInformationSubForm\":\n          varQL = {\n            productInformation: {\n              nicknameOfInsuranceProduct: this.getSubFormFieldValue(subFormID, \"nickname\"),\n              owner: this.getSubFormFieldValue(subFormID, \"owner\"),\n              policyStartDate: this.getSubFormFieldValue(subFormID, \"policyStartDate\"),\n              policyEndDate: this.getSubFormFieldValue(subFormID, \"policyEndDate\"),\n              insured: this.getSubFormFieldValue(subFormID, \"insure\"),\n              addBeneficiaries: this.getSubFormFieldValue(subFormID, \"addBeneficiaries\") == \"Yes\" ? true : false,\n              nameOfBeneficiary: this.getSubFormFieldValue(subFormID, \"beneficiaryName\"),\n              percent: parseFloat(this.getSubFormFieldValue(subFormID, \"percent\")),\n              carrier: this.getSubFormFieldValue(subFormID, \"carrier\"),\n              lastFourOfPolicyNumber: this.getSubFormFieldValue(subFormID, \"policy\")\n            }\n          };\n          break;\n        case \"LongTermInformationSubForm\":\n          varQL = {\n            longTermCare: {\n              dailyBenefit: parseInt(this.getSubFormFieldValue(subFormID, \"dailyBenefit\")),\n              monthlyBenefit: parseInt(this.getSubFormFieldValue(subFormID, \"monthlyBenefit\")),\n              lifetimeBenefit: parseInt(this.getSubFormFieldValue(subFormID, \"lifetimeBenefit\")),\n              inflationRider: parseInt(this.getSubFormFieldValue(subFormID, \"inflationRider\")),\n              eliminationPeriod: this.getSubFormFieldValue(subFormID, \"eliminationPeriod\")\n            }\n          };\n          break;\n        case \"AutoInsuranceInformationSubForm\":\n          varQL = {\n            autoInsuranceInformation: {\n              bodilyInjuryPerIncident: parseInt(this.getSubFormFieldValue(subFormID, \"bodilyInjuryPerIncident\")),\n              bodilyInjuryAggregate: parseInt(this.getSubFormFieldValue(subFormID, \"bodilyInjuryAggregate\")),\n              propertyDamagePerIncident: parseInt(this.getSubFormFieldValue(subFormID, \"propertyDamagePerIncident\"))\n            }\n          };\n          break;\n        case \"FinancialInformationSubForm\":\n          varQL = {\n            financialInformation: {\n              annualPremium: parseInt(this.getSubFormFieldValue(subFormID, \"annualPremium\")),\n              monthlyPremium: parseInt(this.getSubFormFieldValue(subFormID, \"monthlyPremium\")),\n              deductible: parseInt(this.getSubFormFieldValue(subFormID, \"deductible\")),\n              cashValue: parseInt(this.getSubFormFieldValue(subFormID, \"cashValue\")),\n              cashValueDate: this.getSubFormFieldValue(subFormID, \"cashValueDate\"),\n              faceValue: parseInt(this.getSubFormFieldValue(subFormID, \"faceValue\"))\n            }\n          };\n          break;\n        case \"IncomeInformationSubForm\":\n          varQL = {\n            incomeInformation: {\n              frequencyOfCurrentIncome: this.getSubFormFieldValue(subFormID, \"frequencyCurrentIncome\"),\n              currentMonthlyIncome: parseInt(this.getSubFormFieldValue(subFormID, \"currentMonthlyIncome\")),\n              currentAnnualIncome: parseInt(this.getSubFormFieldValue(subFormID, \"currentAnnualIncome\")),\n              lumpSumPaymentDate: this.getSubFormFieldValue(subFormID, \"lumpsumPaymentDate\"),\n              futureLumpSumPayment: parseInt(this.getSubFormFieldValue(subFormID, \"futureLumpsumPayment\")),\n              futureAnnualIncome: parseInt(this.getSubFormFieldValue(subFormID, \"futureAnnualIncome\")),\n              dateFutureIncomeEnds: this.getSubFormFieldValue(subFormID, \"dateFutureIncomeEnds\"),\n              futureIncomeDate: this.getSubFormFieldValue(subFormID, \"futureIncomeDate\"),\n              incomeEndsAtDeath: this.getSubFormFieldValue(subFormID, \"incomeEndsDeath\"),\n              incomeStartsAtRetirement: this.getSubFormFieldValue(subFormID, \"incomeStartsRetirement\"),\n              taxable: this.getSubFormFieldValue(subFormID, \"taxable\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"EndSubForm\":\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex][\"id\"] == subFormID) {\n          formData[findex][\"data\"] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      var varQL = this.createQLVariable(subFormID, subFormData);\n      console.log(\"varQL:\", varQL, \", dataID:\", this.state.dataID);\n      varQL = null;\n      var instance = this;\n      if (varQL != null) {\n        if (this.state.dataID == null) {\n          fnMutationInsuranceProductAdd({\n            variables: {\n              data: varQL\n            }\n          }).then(function (response) {\n            instance.setState({\n              dataID: response[\"data\"][\"createInsuranceProduct\"][\"id\"]\n            });\n          });\n        } else {\n          fnMutationInsuranceProductUpdate({\n            variables: {\n              id: this.state.dataID,\n              data: varQL\n            }\n          });\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var fromState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pformData = arguments.length > 2 ? arguments[2] : undefined;\n      var formData;\n      if (fromState) {\n        formData = this.state.formData;\n      } else {\n        formData = pformData;\n      }\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex][\"id\"] == subFormID) {\n          return formData[findex][\"data\"];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      this.setState({\n        formVisible: false\n      });\n      if (subFormID === 'InsuranceTypeSubForm') {\n        var fd = initialFormData({});\n        this.setState({\n          formData: fd,\n          isEndForm: false\n        });\n      }\n      var nextSubForm = InsuranceTypeSubForm;\n      var insuranceType = this.getSubFormFieldValue(\"InsuranceTypeSubForm\", \"insuranceType\");\n      switch (subFormID) {\n        case \"InsuranceTypeSubForm\":\n          nextSubForm = InsuranceTypeSubForm;\n          this.setState({\n            isEndForm: false\n          });\n          break;\n        case \"ProductInformationSubForm\":\n          nextSubForm = ProductInformationSubForm;\n          break;\n        case \"LongTermInformationSubForm\":\n          nextSubForm = LongTermInformationSubForm;\n          break;\n        case \"AutoInsuranceInformationSubForm\":\n          nextSubForm = AutoInsuranceInformationSubForm;\n          break;\n        case \"FinancialInformationSubForm\":\n          nextSubForm = FinancialInformationSubForm;\n          break;\n        case \"IncomeInformationSubForm\":\n          nextSubForm = IncomeInformationSubForm;\n          break;\n        case \"EndSubForm\":\n          nextSubForm = EndSubForm;\n          this.setState({\n            isEndForm: true\n          });\n          break;\n        case \"StepProductInformationSubForm\":\n          nextSubForm = ProductInformationSubForm;\n          break;\n        case \"StepAdditionalInformation\":\n          switch (insuranceType) {\n            case \"Long Term Disability\":\n            case \"Long Term Care\":\n            case \"Long Term Care - Hybrid\":\n            case \"Other\":\n              nextSubForm = LongTermInformationSubForm;\n              break;\n            case \"Automobile\":\n              nextSubForm = AutoInsuranceInformationSubForm;\n              break;\n            default:\n              nextSubForm = FinancialInformationSubForm;\n          }\n          break;\n        case \"StepFinancialInformation\":\n          nextSubForm = FinancialInformationSubForm;\n          break;\n        case \"StepIncomeInformation\":\n          switch (insuranceType) {\n            case \"Automobile\":\n            case \"Fire\":\n            case \"Earthquake\":\n            case \"Umbrella\":\n            case \"Homeowners\":\n            case \"Flood\":\n              nextSubForm = EndSubForm;\n              break;\n            default:\n              nextSubForm = IncomeInformationSubForm;\n          }\n          break;\n      }\n      var subFormData = this.getSubFormData(subFormID);\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubFormID: subFormID,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(formData) {\n      console.log(\"formData:\", formData);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          formVisible: true,\n          dbLoaded: true,\n          formData: formData,\n          subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n        });\n      }, 100);\n    }\n  }, {\n    key: \"getTopNav\",\n    value: function getTopNav(formStep) {\n      var disabled = false;\n      var active = false;\n      var InsuranceType = this.getSubFormFieldValue(\"InsuranceTypeSubForm\", \"insuranceType\");\n      //getting stepid from subform\n      var curSubFormStepIndex = -1;\n      for (var sindex = 0; sindex < this.state.formSteps.length; sindex++) {\n        if (this.state.curSubFormID == \"EndSubForm\") {\n          if (this.state.formSteps[sindex].id == formStep.id) {\n            curSubFormStepIndex = sindex;\n            break;\n          }\n        }\n        for (var findex = 0; findex < this.state.formStep2FormMap[this.state.formSteps[sindex].id].length; findex++) {\n          if (this.state.formStep2FormMap[this.state.formSteps[sindex].id][findex] == this.state.curSubFormID) {\n            curSubFormStepIndex = sindex;\n            break;\n          }\n        }\n      }\n      if (this.state.isEndForm && formStep.id !== 'StepInsuranceTypeSubForm') {\n        return {\n          disabled: true,\n          active: false\n        };\n      }\n      if (InsuranceType != null && InsuranceType != \"\") {\n        switch (formStep.id) {\n          case \"StepInsuranceTypeSubForm\":\n            if (curSubFormStepIndex === 0) {\n              if (this.state.isEndForm) {\n                disabled = false;\n                active = true;\n              } else {\n                disabled = true;\n                active = false;\n                InsuranceType = '';\n              }\n            }\n            if (curSubFormStepIndex >= 0) {\n              active = true;\n            }\n            break;\n          case \"StepProductInformationSubForm\":\n            if (curSubFormStepIndex >= 1) {\n              active = true;\n            }\n            break;\n          case \"StepAdditionalInformation\":\n            if (curSubFormStepIndex >= 2) {\n              active = true;\n            }\n            switch (InsuranceType) {\n              case \"Fire\":\n              case \"Earthquake\":\n              case \"Umbrella\":\n              case \"Homeowners\":\n              case \"Speciality and Misc\":\n              case \"Dental\":\n              case \"Renters\":\n              case \"Property and Casualty\":\n              case \"Term - 15 Year\":\n              case \"Term - 25 Year\":\n              case \"Variable Universal Life\":\n              case \"Universal Life\":\n              case \"Term - 20 year\":\n              case \"Whole Life\":\n              case \"Variable Survivorship\":\n              case \"Variable Life\":\n              case \"Term - 30 Year\":\n              case \"Term - 10 Year\":\n              case \"No Medical Exam\":\n              case \"Term - 5 Year\":\n              case \"Guaranteed Issue\":\n              case \"Final Expense\":\n              case \"Life and Health\":\n              case \"Annuity - Immediate\":\n              case \"Annuity - Deferred\":\n              case \"Annuity - Fixed Indexed\":\n              case \"Annuity - Variable\":\n              case \"Annuity - Fixed\":\n                disabled = true;\n            }\n            break;\n          case \"StepFinancialInformation\":\n            if (curSubFormStepIndex >= 3) {\n              active = true;\n            }\n            switch (InsuranceType) {\n              case \"Credit - HELOC\":\n              case \"Credit Card - Business\":\n              case \"Credit Card - Personal\":\n                disabled = true;\n            }\n            break;\n          case \"StepIncomeInformation\":\n            if (curSubFormStepIndex >= 4) {\n              active = true;\n            }\n            switch (InsuranceType) {\n              case \"Fire\":\n              case \"Earthquake\":\n              case \"Umbrella\":\n              case \"Homeowners\":\n              case \"Speciality and Misc\":\n                disabled = true;\n            }\n            break;\n        }\n      } else {\n        if (formStep.id != \"StepInsuranceTypeSubForm\") {\n          disabled = true;\n        }\n      }\n      return {\n        disabled: disabled,\n        active: active\n      };\n    }\n  }, {\n    key: \"getRightSideFormData\",\n    value: function getRightSideFormData(formStep) {\n      /*juni code */\n      var formData = [];\n      var insuranceType = this.getSubFormFieldValue(\"InsuranceTypeSubForm\", \"insuranceType\");\n      if (insuranceType == null || insuranceType == \"\") {\n        return formData;\n      }\n      for (var index = 0; index < this.state.formData.length; index++) {\n        if (formStep.id == this.state.formData[index][\"stepId\"]) {\n          switch (formStep.id) {\n            case \"StepInsuranceTypeSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepProductInformationSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepAdditionalInformation\":\n              if (insuranceType == \"Long Term Care\" && this.state.formData[index][\"id\"] == \"LongTermInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (insuranceType == \"Long Term Disability\" && this.state.formData[index][\"id\"] == \"LongTermInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (insuranceType == \"Long Term Care - Hybrid\" && this.state.formData[index][\"id\"] == \"LongTermInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (insuranceType == \"Other\" && this.state.formData[index][\"id\"] == \"LongTermInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (insuranceType == \"Automobile\" && this.state.formData[index][\"id\"] == \"AutoInsuranceInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (insuranceType == \"Flood\" && this.state.formData[index][\"id\"] == \"AutoInsuranceInformationSubForm\") {\n                formData.push(this.state.formData[index]);\n              }\n              break;\n            case \"StepFinancialInformation\":\n              // switch (insuranceType) {\n              //   case \"Credit - HELOC\":\n              //   case \"Credit Card - Business\":\n              //   case \"Credit Card - Personal\":\n              //     break;\n              //   default:\n              formData.push(this.state.formData[index]);\n              break;\n            // }\n            // break;\n            case \"StepIncomeInformation\":\n              // switch (insuranceType) {\n              //   case \"Credit Card - Business\":\n              //   case \"Credit Card - Personal\":\n              //     break;\n              //   default:\n              formData.push(this.state.formData[index]);\n              break;\n            // }\n            // break;\n          }\n        }\n      }\n\n      console.log(\"getRightSideFormData\", formStep.id, insuranceType, formData);\n      return formData;\n    }\n  }, {\n    key: \"goNext\",\n    value: function goNext(fromSubFormID) {\n      var nextSubFormID = \"\";\n      var insuranceType = this.getSubFormFieldValue(\"InsuranceTypeSubForm\", \"insuranceType\");\n      switch (fromSubFormID) {\n        // StepInsuranceTypeSubForm\n        case \"InsuranceTypeSubForm\":\n          nextSubFormID = \"ProductInformationSubForm\";\n          break;\n\n        // StepProductInformationSubForm\n        case \"ProductInformationSubForm\":\n          switch (insuranceType) {\n            case \"Long Term Disability\":\n            case \"Long Term Care\":\n            case \"Long Term Care - Hybrid\":\n            case \"Other\":\n              nextSubFormID = \"LongTermInformationSubForm\";\n              break;\n            case \"Automobile\":\n            case \"Flood\":\n              nextSubFormID = \"AutoInsuranceInformationSubForm\";\n              break;\n            /*juni code */\n            default:\n              nextSubFormID = \"FinancialInformationSubForm\";\n              break;\n          }\n          break;\n\n        // StepAdditionalInformation\n        case \"LongTermInformationSubForm\":\n          nextSubFormID = \"FinancialInformationSubForm\";\n          break;\n        case \"AutoInsuranceInformationSubForm\":\n          nextSubFormID = \"FinancialInformationSubForm\";\n          break;\n\n        // StepFinancialInformation\n        case \"FinancialInformationSubForm\":\n          switch (insuranceType) {\n            // case \"Fire\":\n            // case \"Earthquake\":\n            // case \"Umbrella\":\n            // case \"Homeowners\":\n            // case \"Speciality and Misc\":\n            case \"Fire\":\n            case \"Earthquake\":\n            case \"Umbrella\":\n            case \"Homeowners\":\n            case \"Speciality and Misc\":\n              nextSubFormID = \"EndSubForm\";\n              break;\n            default:\n              nextSubFormID = \"IncomeInformationSubForm\";\n              break;\n          }\n          break;\n\n        // StepIncomeInformation\n        case \"IncomeInformationSubForm\":\n          nextSubFormID = \"EndSubForm\";\n          break;\n      }\n      this.goSubForm(nextSubFormID);\n    }\n  }, {\n    key: \"goPrev\",\n    value: function goPrev(fromSubFormID) {\n      var prevSubFormID = \"\";\n      var insuranceType = this.getSubFormFieldValue(\"InsuranceTypeSubForm\", \"insuranceType\");\n      switch (fromSubFormID) {\n        // StepInsuranceTypeSubForm\n        case \"InsuranceTypeSubForm\":\n          break;\n\n        // StepProductInformationSubForm\n        case \"ProductInformationSubForm\":\n          prevSubFormID = \"InsuranceTypeSubForm\";\n          break;\n\n        // StepAdditionalInformation\n        case \"LongTermInformationSubForm\":\n          prevSubFormID = \"ProductInformationSubForm\";\n          break;\n        case \"AutoInsuranceInformationSubForm\":\n          prevSubFormID = \"ProductInformationSubForm\";\n          break;\n\n        // StepFinancialInformation\n        case \"FinancialInformationSubForm\":\n          switch (insuranceType) {\n            case \"Long Term Disability\":\n            case \"Long Term Care\":\n            case \"Long Term Care - Hybrid\":\n            case \"Other\":\n              prevSubFormID = \"LongTermInformationSubForm\";\n              break;\n            case \"Automobile\":\n            case \"Flood\":\n              prevSubFormID = \"AutoInsuranceInformationSubForm\";\n              break;\n            default:\n              prevSubFormID = \"ProductInformationSubForm\";\n              break;\n          }\n          break;\n\n        // StepIncomeInformation\n        case \"IncomeInformationSubForm\":\n          prevSubFormID = \"FinancialInformationSubForm\";\n          break;\n      }\n      this.goSubForm(prevSubFormID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navlinks = [{\n        href: \"/\",\n        title: \"Home\"\n      }, {\n        href: \"/modules\",\n        title: \"Modules\"\n      }, {\n        href: \"/insurance\",\n        title: \"Insurance Products\"\n      }];\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = \"form-page-container-wrap\";\n      if (this.state.isRightSideOpen) {\n        formpageClassName = \"form-page-container-wrap right-side--opend\";\n      } else {\n        formpageClassName = \"form-page-container-wrap right-side--collapsed\";\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1138,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1139,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-container align-items-top justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-asset\",\n        src: AssetPlanet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1142,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145,\n          columnNumber: 15\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var _this3$getTopNav = _this3.getTopNav(formStep),\n          disabled = _this3$getTopNav.disabled,\n          active = _this3$getTopNav.active;\n        var className = \"btn nav-items btn-circle\";\n        if (disabled) {\n          className = \"btn nav-items btn-circle disabled\";\n        } else if (active) {\n          className = \"btn nav-items btn-circle active\";\n        }\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"process-step\",\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1155,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: className,\n          \"data-toggle\": \"tab\",\n          onClick: function onClick() {\n            return !disabled ? _this3.goSubForm(_this3.state.formStep2FormMap[formStep.id][0]) : null;\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: 30,\n            color: '#006400'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1169,\n            columnNumber: 25\n          }\n        }, index + 1)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"step-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 23\n          }\n        }, formStep.title));\n      })))), /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 11\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbID: this.state.dbID,\n        cbLoadDBData: this.loadDBData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1188,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-nav-history\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 13\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 38\n        }\n      }, \"Loading...\"), this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormPagePose, {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? \"visible\" : \"hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        cbGoNext: this.goNext,\n        cbGoPrev: this.goPrev,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235,\n          columnNumber: 11\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var formData = _this3.getRightSideFormData(formStep);\n        console.log(formData);\n        return formData.map(function (subForm, sindex) {\n          if (subForm.visible == false) {\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              key: sindex,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1241,\n                columnNumber: 26\n              }\n            });\n          }\n          var count = 0;\n          var go = false;\n          var fieldss = null;\n          var subFormData = subForm.data;\n          if (subFormData[\"rows\"]) {\n            fieldss = subFormData[\"rows\"];\n          } else if (subFormData[\"fields\"]) {\n            fieldss = subFormData[\"fields\"];\n          }\n          count = fieldss.length;\n          for (var i = 0; i < parseInt(count); i++) {\n            if (fieldss[i][\"value\"] != \"\") {\n              go = true;\n            }\n          }\n\n          // let subFormData = subForm.data;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-block\",\n            key: sindex,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1263,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-top\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1264,\n              columnNumber: 21\n            }\n          }, go ? /*#__PURE__*/React.createElement(\"h4\", {\n            className: \"form-brief-title\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1266,\n              columnNumber: 25\n            }\n          }, subFormData.title) : null, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"form-brief-edit-btn\",\n            onClick: function onClick() {\n              return _this3.goSubForm(subForm.stepId);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1271,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            type: \"edit\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1275,\n              columnNumber: 25\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-content\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1278,\n              columnNumber: 21\n            }\n          }, subFormData.fields && subFormData.fields.map(function (field, ffindex) {\n            if (field.value == \"\" || field.value == null) {\n              return /*#__PURE__*/React.createElement(React.Fragment, {\n                key: ffindex,\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1283,\n                  columnNumber: 31\n                }\n              });\n            }\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-item\",\n              key: ffindex,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1287,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"form-brief-item-title\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1288,\n                columnNumber: 31\n              }\n            }, field.title != \"\" ? field.title + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n              className: \"form-brief-item-value\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1291,\n                columnNumber: 31\n              }\n            }, field.hasOwnProperty(\"type\") && field[\"type\"] == \"currency\" && float2Currency(field.value), field.hasOwnProperty(\"type\") && field[\"type\"] == \"percent\" && field.value + \" %\", !field.hasOwnProperty(\"type\") && field.value));\n          }), subFormData.rows && subFormData.rows.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1304,\n              columnNumber: 25\n            }\n          }, subForm.id == \"AdditionalPaymentInformationSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1307,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1308,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1309,\n              columnNumber: 33\n            }\n          }, \"Extra Principal Payment Description\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 33\n            }\n          }, \"How Much\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1315,\n              columnNumber: 33\n            }\n          }, \"How Often\")), subFormData.rows.map(function (additionalPayment, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1322,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1326,\n                columnNumber: 39\n              }\n            }, additionalPayment[\"extra_payment_description\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1333,\n                columnNumber: 39\n              }\n            }, float2Currency(additionalPayment[\"howMuch\"])), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1338,\n                columnNumber: 39\n              }\n            }, additionalPayment[\"howOften\"]));\n          })), subForm.id == \"AdjustableLoanDetailsSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1348,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1349,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--50\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1350,\n              columnNumber: 33\n            }\n          }, \"Date of Rate Change\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--50\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1353,\n              columnNumber: 33\n            }\n          }, \"newPercent\")), subFormData.rows.map(function (adjustableLoan, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1360,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--50\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1364,\n                columnNumber: 39\n              }\n            }, adjustableLoan[\"dateRateChange\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--50\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1367,\n                columnNumber: 39\n              }\n            }, adjustableLoan[\"newPercent\"] + \" %\"));\n          })))));\n        });\n      }))));\n    }\n  }]);\n  return InsuranceNew;\n}(Component);\nexport default connect()(InsuranceNew);","map":{"version":3,"names":["React","Component","connect","Link","Icon","ImageIcon","AssetPlanet","useMutation","useQuery","QL_INSURANCE_PRODUCT_ADD","QL_INSURANCE_PRODUCT_UPDATE","QL_INSURANCE_PRODUCT_GET","FormPagePose","InsuranceTypeSubForm","ProductInformationSubForm","LongTermInformationSubForm","AutoInsuranceInformationSubForm","FinancialInformationSubForm","IncomeInformationSubForm","EndSubForm","float2Currency","fnMutationInsuranceProductAdd","dataMutationInsuranceProductAdd","fnMutationInsuranceProductUpdate","dataMutationInsuranceProductUpdate","prevPos","HiddenHook","initialFormData","data","formData","hasOwnProperty","push","id","FnCreateFormData","value","visible","stepId","nickname","owner","policyStartDate","policyEndDate","insure","addBeneficiaries","beneficiaryName","percent","carrier","policy","dailyBenefit","monthlyBenefit","lifetimeBenefit","inflationRider","eliminationPeriod","bodilyInjuryPerIncident","bodilyInjuryAggregate","propertyDamagePerIncident","annualPremium","monthlyPremium","deductible","cashValue","cashValueDate","faceValue","frequencyCurrentIncome","currentMonthlyIncome","currentAnnualIncome","lumpsumPaymentDate","futureLumpsumPayment","futureAnnualIncome","dateFutureIncomeEnds","futureIncomeDate","incomeEndsDeath","incomeStartsRetirement","taxable","LoadDBDataHook","props","dbID","variables","loading","error","console","log","cbLoadDBData","InsuranceNew","toggleRightSide","e","preventDefault","setState","isRightSideOpen","state","dbLoaded","insuranceID","match","params","dataID","curSubFormID","curSubForm","formVisible","subFormData","formSteps","icon","title","formStep2FormMap","StepInsuranceTypeSubForm","StepProductInformationSubForm","StepAdditionalInformation","StepFinancialInformation","StepIncomeInformation","isEndForm","goSubForm","bind","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","loadDBData","getRightSideFormData","getTopNav","goNext","goPrev","formID","fieldID","index","length","fields","findex","field","subFormID","varQL","productInformation","insuranceType","nicknameOfInsuranceProduct","insured","nameOfBeneficiary","parseFloat","lastFourOfPolicyNumber","longTermCare","parseInt","autoInsuranceInformation","financialInformation","incomeInformation","frequencyOfCurrentIncome","lumpSumPaymentDate","futureLumpSumPayment","incomeEndsAtDeath","incomeStartsAtRetirement","bFound","instance","then","response","fromState","pformData","fd","nextSubForm","setTimeout","formStep","disabled","active","InsuranceType","curSubFormStepIndex","sindex","fromSubFormID","nextSubFormID","prevSubFormID","navlinks","href","SubForm","formpageClassName","map","className","fontSize","color","subForm","count","go","fieldss","i","ffindex","rows","additionalPayment","cindex","adjustableLoan"],"sources":["/home/albatross/gitCode/shared/src/pages/modules/insurance/InsuranceNew.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport ImageIcon from \"assets/images/asset.png\";\nimport AssetPlanet from \"assets/images/asset-planet-logo.jpg\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport {\n  QL_INSURANCE_PRODUCT_ADD,\n  QL_INSURANCE_PRODUCT_UPDATE,\n  QL_INSURANCE_PRODUCT_GET,\n} from \"../../../constants/queries\";\n\nimport { FormPagePose } from \"../../../components/Animations\";\nimport InsuranceTypeSubForm from \"./subforms/InsuranceTypeSubForm\";\nimport ProductInformationSubForm from \"./subforms/ProductInformationSubForm\";\nimport LongTermInformationSubForm from \"./subforms/LongTermInformationSubForm\";\nimport AutoInsuranceInformationSubForm from \"./subforms/AutoInsuranceInformationSubForm\";\nimport FinancialInformationSubForm from \"./subforms/FinancialInformationSubForm\";\nimport IncomeInformationSubForm from \"./subforms/IncomeInformationSubForm\";\nimport EndSubForm from \"./subforms/EndSubForm\";\nimport { float2Currency } from \"helpers/Utils\";\n\nvar fnMutationInsuranceProductAdd = null;\nvar dataMutationInsuranceProductAdd = null;\n\nvar fnMutationInsuranceProductUpdate = null;\nvar dataMutationInsuranceProductUpdate = null;\nlet prevPos = 0;\n\nfunction HiddenHook() {\n  [\n    fnMutationInsuranceProductAdd,\n    { dataMutationInsuranceProductAdd },\n  ] = useMutation(QL_INSURANCE_PRODUCT_ADD);\n  [\n    fnMutationInsuranceProductUpdate,\n    { dataMutationInsuranceProductUpdate },\n  ] = useMutation(QL_INSURANCE_PRODUCT_UPDATE);\n\n  return <React.Fragment></React.Fragment>;\n}\n\nfunction initialFormData(data) {\n  let formData = [];\n\n  if (data.hasOwnProperty(\"insuranceProduct\")) {\n    formData.push({\n      id: \"InsuranceTypeSubForm\",\n      data: InsuranceTypeSubForm.FnCreateFormData({\n        value: data[\"insuranceProduct\"][\"productInformation\"][\"insuranceType\"],\n      }),\n      visible: true,\n      stepId: \"StepInsuranceTypeSubForm\",\n    });\n\n    formData.push({\n      id: \"ProductInformationSubForm\",\n      data: ProductInformationSubForm.FnCreateFormData({\n        nickname:\n          data[\"insuranceProduct\"][\"productInformation\"][\n            \"nicknameOfInsuranceProduct\"\n          ],\n        owner: data[\"insuranceProduct\"][\"productInformation\"][\"owner\"],\n        policyStartDate:\n          data[\"insuranceProduct\"][\"productInformation\"][\"policyStartDate\"] ==\n          null\n            ? \"\"\n            : data[\"insuranceProduct\"][\"productInformation\"][\"policyStartDate\"],\n        policyEndDate:\n          data[\"insuranceProduct\"][\"productInformation\"][\"policyEndDate\"] ==\n          null\n            ? \"\"\n            : data[\"insuranceProduct\"][\"productInformation\"][\"policyEndDate\"],\n        insure: data[\"insuranceProduct\"][\"productInformation\"][\"insured\"],\n        addBeneficiaries: data[\"insuranceProduct\"][\"productInformation\"][\n          \"addBeneficiaries\"\n        ]\n          ? \"Yes\"\n          : \"No\",\n        beneficiaryName:\n          data[\"insuranceProduct\"][\"productInformation\"][\"nameOfBeneficiary\"],\n        percent: data[\"insuranceProduct\"][\"productInformation\"][\"percent\"],\n        carrier: data[\"insuranceProduct\"][\"productInformation\"][\"carrier\"],\n        policy:\n          data[\"insuranceProduct\"][\"productInformation\"][\n            \"lastFourOfPolicyNumber\"\n          ],\n      }),\n      visible: true,\n      stepId: \"StepProductInformationSubForm\",\n    });\n\n    formData.push({\n      id: \"LongTermInformationSubForm\",\n      data: LongTermInformationSubForm.FnCreateFormData({\n        dailyBenefit: data[\"insuranceProduct\"][\"longTermCare\"][\"dailyBenefit\"],\n        monthlyBenefit:\n          data[\"insuranceProduct\"][\"longTermCare\"][\"monthlyBenefit\"],\n        lifetimeBenefit:\n          data[\"insuranceProduct\"][\"longTermCare\"][\"lifetimeBenefit\"],\n        inflationRider:\n          data[\"insuranceProduct\"][\"longTermCare\"][\"inflationRider\"],\n        eliminationPeriod:\n          data[\"insuranceProduct\"][\"longTermCare\"][\"eliminationPeriod\"],\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"AutoInsuranceInformationSubForm\",\n      data: AutoInsuranceInformationSubForm.FnCreateFormData({\n        bodilyInjuryPerIncident:\n          data[\"insuranceProduct\"][\"autoInsuranceInformation\"][\n            \"bodilyInjuryPerIncident\"\n          ],\n        bodilyInjuryAggregate:\n          data[\"insuranceProduct\"][\"autoInsuranceInformation\"][\n            \"bodilyInjuryAggregate\"\n          ],\n        propertyDamagePerIncident:\n          data[\"insuranceProduct\"][\"autoInsuranceInformation\"][\n            \"propertyDamagePerIncident\"\n          ],\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"FinancialInformationSubForm\",\n      data: FinancialInformationSubForm.FnCreateFormData({\n        annualPremium:\n          data[\"insuranceProduct\"][\"financialInformation\"][\"annualPremium\"],\n        monthlyPremium:\n          data[\"insuranceProduct\"][\"financialInformation\"][\"monthlyPremium\"],\n        deductible:\n          data[\"insuranceProduct\"][\"financialInformation\"][\"deductible\"],\n        cashValue:\n          data[\"insuranceProduct\"][\"financialInformation\"][\"cashValue\"],\n        cashValueDate:\n          data[\"insuranceProduct\"][\"financialInformation\"][\"cashValueDate\"] ==\n          null\n            ? \"\"\n            : data[\"insuranceProduct\"][\"financialInformation\"][\"cashValueDate\"],\n        faceValue:\n          data[\"insuranceProduct\"][\"financialInformation\"][\"faceValue\"],\n      }),\n      visible: true,\n      stepId: \"StepFinancialInformation\",\n    });\n\n    formData.push({\n      id: \"IncomeInformationSubForm\",\n      data: IncomeInformationSubForm.FnCreateFormData({\n        frequencyCurrentIncome:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\n            \"frequencyOfCurrentIncome\"\n          ],\n        currentMonthlyIncome:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\"currentMonthlyIncome\"],\n        currentAnnualIncome:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\"currentAnnualIncome\"],\n        lumpsumPaymentDate:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\"lumpSumPaymentDate\"] ==\n          null\n            ? \"\"\n            : data[\"insuranceProduct\"][\"incomeInformation\"][\n                \"lumpSumPaymentDate\"\n              ],\n        futureLumpsumPayment:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\"futureLumpSumPayment\"],\n        futureAnnualIncome:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\"futureAnnualIncome\"],\n        dateFutureIncomeEnds:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\n            \"dateFutureIncomeEnds\"\n          ] == null\n            ? \"\"\n            : data[\"insuranceProduct\"][\"incomeInformation\"][\n                \"dateFutureIncomeEnds\"\n              ],\n        futureIncomeDate:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\"futureIncomeDate\"] ==\n          null\n            ? \"\"\n            : data[\"insuranceProduct\"][\"incomeInformation\"][\"futureIncomeDate\"],\n        incomeEndsDeath:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\"incomeEndsAtDeath\"],\n        incomeStartsRetirement:\n          data[\"insuranceProduct\"][\"incomeInformation\"][\n            \"incomeStartsAtRetirement\"\n          ],\n        taxable: data[\"insuranceProduct\"][\"incomeInformation\"][\"taxable\"]\n          ? \"Yes\"\n          : \"No\",\n      }),\n      visible: true,\n      stepId: \"StepIncomeInformation\",\n    });\n  } else {\n    formData.push({\n      id: \"InsuranceTypeSubForm\",\n      data: InsuranceTypeSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepInsuranceTypeSubForm\",\n    });\n\n    formData.push({\n      id: \"ProductInformationSubForm\",\n      data: ProductInformationSubForm.FnCreateFormData({\n        nickname: \"\",\n        owner: \"\",\n        policyStartDate: \"\",\n        policyEndDate: \"\",\n        insure: \"\",\n        addBeneficiaries: \"\",\n        beneficiaryName: \"\",\n        percent: \"\",\n        carrier: \"\",\n        policy: \"\",\n      }),\n      visible: true,\n      stepId: \"StepProductInformationSubForm\",\n    });\n\n    formData.push({\n      id: \"LongTermInformationSubForm\",\n      data: LongTermInformationSubForm.FnCreateFormData({\n        dailyBenefit: \"\",\n        monthlyBenefit: \"\",\n        lifetimeBenefit: \"\",\n        inflationRider: \"\",\n        eliminationPeriod: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"AutoInsuranceInformationSubForm\",\n      data: AutoInsuranceInformationSubForm.FnCreateFormData({\n        bodilyInjuryPerIncident: \"\",\n        bodilyInjuryAggregate: \"\",\n        propertyDamagePerIncident: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAdditionalInformation\",\n    });\n\n    formData.push({\n      id: \"FinancialInformationSubForm\",\n      data: FinancialInformationSubForm.FnCreateFormData({\n        annualPremium: \"\",\n        monthlyPremium: \"\",\n        deductible: \"\",\n        cashValue: \"\",\n        cashValueDate: \"\",\n        faceValue: \"\",\n      }),\n      visible: true,\n      stepId: \"StepFinancialInformation\",\n    });\n\n    formData.push({\n      id: \"IncomeInformationSubForm\",\n      data: IncomeInformationSubForm.FnCreateFormData({\n        frequencyCurrentIncome: \"\",\n        currentMonthlyIncome: \"\",\n        currentAnnualIncome: \"\",\n        lumpsumPaymentDate: \"\",\n        futureLumpsumPayment: \"\",\n        futureAnnualIncome: \"\",\n        dateFutureIncomeEnds: \"\",\n        futureIncomeDate: \"\",\n        incomeEndsDeath: \"\",\n        incomeStartsRetirement: \"\",\n        taxable: \"\",\n      }),\n      visible: true,\n      stepId: \"StepIncomeInformation\",\n    });\n  }\n\n  return formData;\n}\n\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != \"\") {\n    const { data, loading, error } = useQuery(QL_INSURANCE_PRODUCT_GET, {\n      variables: { id: props.dbID },\n    });\n    if (data) {\n      console.log(\"call..\");\n      props.cbLoadDBData(initialFormData(data));\n    }\n  }\n\n  return <React.Fragment></React.Fragment>;\n}\n\nclass InsuranceNew extends Component {\n  constructor(props) {\n    super(props);\n\n    let dbID = null;\n    let dbLoaded = true;\n\n    const { insuranceID } = this.props.match.params;\n\n    if (insuranceID) {\n      dbID = insuranceID;\n      dbLoaded = false;\n    }\n\n    let formData = initialFormData({});\n\n    this.state = {\n      dataID: dbID,\n      curSubFormID: \"InsuranceTypeSubForm\",\n      curSubForm: InsuranceTypeSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData: formData,\n      isRightSideOpen: true,\n      formSteps: [\n        {\n          id: \"StepInsuranceTypeSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Insurance Type\",\n        },\n        {\n          id: \"StepProductInformationSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Product Information\",\n        },\n        {\n          id: \"StepAdditionalInformation\",\n          icon: \"icon_ex.png\",\n          title: \"Additional Information\",\n        },\n        {\n          id: \"StepFinancialInformation\",\n          icon: \"icon_ex.png\",\n          title: \"Financial Information\",\n        },\n        {\n          id: \"StepIncomeInformation\",\n          icon: \"icon_ex.png\",\n          title: \"Income Information\",\n        },\n      ],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      formStep2FormMap: {\n        StepInsuranceTypeSubForm: [\"InsuranceTypeSubForm\"],\n        StepProductInformationSubForm: [\"ProductInformationSubForm\"],\n        StepAdditionalInformation: [\n          \"LongTermInformationSubForm\",\n          \"AutoInsuranceInformationSubForm\",\n        ],\n        StepFinancialInformation: [\"FinancialInformationSubForm\"],\n        StepIncomeInformation: [\"IncomeInformationSubForm\"],\n      },\n      isEndForm: false\n    };\n\n    this.goSubForm = this.goSubForm.bind(this);\n    this.updateSubForm = this.updateSubForm.bind(this);\n    this.getSubFormData = this.getSubFormData.bind(this);\n    this.getSubFormField = this.getSubFormField.bind(this);\n\n    this.createQLVariable = this.createQLVariable.bind(this);\n    this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n    this.toggleRightSide = this.toggleRightSide.bind(this);\n\n    this.loadDBData = this.loadDBData.bind(this);\n\n    this.getRightSideFormData = this.getRightSideFormData.bind(this);\n    this.getTopNav = this.getTopNav.bind(this);\n\n    this.goNext = this.goNext.bind(this);\n    this.goPrev = this.goPrev.bind(this);\n  }\n\n  componentDidMount() {\n    // this.goSubForm(\"InsuranceTypeSubForm\");\n    this.goSubForm(this.state.formSteps[0][\"id\"]);\n  }\n\n  getSubFormField(formID, fieldID) {\n    let formData = this.state.formData;\n\n    for (var index = 0; index < formData.length; index++) {\n      if (formData[index][\"id\"] == formID) {\n        let data = formData[index][\"data\"];\n        let fields = data[\"fields\"];\n        for (var findex = 0; findex < fields.length; findex++) {\n          if (fields[findex][\"id\"] == fieldID) {\n            return fields[findex];\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getSubFormFieldValue(formID, fieldID) {\n    let field = this.getSubFormField(formID, fieldID);\n\n    if (field == null) {\n      return \"\";\n    } else {\n      return field.value;\n    }\n  }\n\n  createQLVariable(subFormID, subFormData) {\n    let varQL = null;\n\n    switch (subFormID) {\n      case \"InsuranceTypeSubForm\":\n        varQL = {\n          productInformation: {\n            insuranceType: this.getSubFormFieldValue(\n              subFormID,\n              \"insuranceType\"\n            ),\n          },\n        };\n        break;\n      case \"ProductInformationSubForm\":\n        varQL = {\n          productInformation: {\n            nicknameOfInsuranceProduct: this.getSubFormFieldValue(\n              subFormID,\n              \"nickname\"\n            ),\n            owner: this.getSubFormFieldValue(subFormID, \"owner\"),\n            policyStartDate: this.getSubFormFieldValue(\n              subFormID,\n              \"policyStartDate\"\n            ),\n            policyEndDate: this.getSubFormFieldValue(\n              subFormID,\n              \"policyEndDate\"\n            ),\n            insured: this.getSubFormFieldValue(subFormID, \"insure\"),\n            addBeneficiaries:\n              this.getSubFormFieldValue(subFormID, \"addBeneficiaries\") == \"Yes\"\n                ? true\n                : false,\n            nameOfBeneficiary: this.getSubFormFieldValue(\n              subFormID,\n              \"beneficiaryName\"\n            ),\n            percent: parseFloat(\n              this.getSubFormFieldValue(subFormID, \"percent\")\n            ),\n            carrier: this.getSubFormFieldValue(subFormID, \"carrier\"),\n            lastFourOfPolicyNumber: this.getSubFormFieldValue(\n              subFormID,\n              \"policy\"\n            ),\n          },\n        };\n        break;\n      case \"LongTermInformationSubForm\":\n        varQL = {\n          longTermCare: {\n            dailyBenefit: parseInt(\n              this.getSubFormFieldValue(subFormID, \"dailyBenefit\")\n            ),\n            monthlyBenefit: parseInt(\n              this.getSubFormFieldValue(subFormID, \"monthlyBenefit\")\n            ),\n            lifetimeBenefit: parseInt(\n              this.getSubFormFieldValue(subFormID, \"lifetimeBenefit\")\n            ),\n            inflationRider: parseInt(\n              this.getSubFormFieldValue(subFormID, \"inflationRider\")\n            ),\n            eliminationPeriod: this.getSubFormFieldValue(\n              subFormID,\n              \"eliminationPeriod\"\n            ),\n          },\n        };\n        break;\n      case \"AutoInsuranceInformationSubForm\":\n        varQL = {\n          autoInsuranceInformation: {\n            bodilyInjuryPerIncident: parseInt(\n              this.getSubFormFieldValue(subFormID, \"bodilyInjuryPerIncident\")\n            ),\n            bodilyInjuryAggregate: parseInt(\n              this.getSubFormFieldValue(subFormID, \"bodilyInjuryAggregate\")\n            ),\n            propertyDamagePerIncident: parseInt(\n              this.getSubFormFieldValue(subFormID, \"propertyDamagePerIncident\")\n            ),\n          },\n        };\n        break;\n      case \"FinancialInformationSubForm\":\n        varQL = {\n          financialInformation: {\n            annualPremium: parseInt(\n              this.getSubFormFieldValue(subFormID, \"annualPremium\")\n            ),\n            monthlyPremium: parseInt(\n              this.getSubFormFieldValue(subFormID, \"monthlyPremium\")\n            ),\n            deductible: parseInt(\n              this.getSubFormFieldValue(subFormID, \"deductible\")\n            ),\n            cashValue: parseInt(\n              this.getSubFormFieldValue(subFormID, \"cashValue\")\n            ),\n            cashValueDate: this.getSubFormFieldValue(\n              subFormID,\n              \"cashValueDate\"\n            ),\n            faceValue: parseInt(\n              this.getSubFormFieldValue(subFormID, \"faceValue\")\n            ),\n          },\n        };\n        break;\n      case \"IncomeInformationSubForm\":\n        varQL = {\n          incomeInformation: {\n            frequencyOfCurrentIncome: this.getSubFormFieldValue(\n              subFormID,\n              \"frequencyCurrentIncome\"\n            ),\n            currentMonthlyIncome: parseInt(\n              this.getSubFormFieldValue(subFormID, \"currentMonthlyIncome\")\n            ),\n            currentAnnualIncome: parseInt(\n              this.getSubFormFieldValue(subFormID, \"currentAnnualIncome\")\n            ),\n            lumpSumPaymentDate: this.getSubFormFieldValue(\n              subFormID,\n              \"lumpsumPaymentDate\"\n            ),\n            futureLumpSumPayment: parseInt(\n              this.getSubFormFieldValue(subFormID, \"futureLumpsumPayment\")\n            ),\n            futureAnnualIncome: parseInt(\n              this.getSubFormFieldValue(subFormID, \"futureAnnualIncome\")\n            ),\n            dateFutureIncomeEnds: this.getSubFormFieldValue(\n              subFormID,\n              \"dateFutureIncomeEnds\"\n            ),\n            futureIncomeDate: this.getSubFormFieldValue(\n              subFormID,\n              \"futureIncomeDate\"\n            ),\n            incomeEndsAtDeath: this.getSubFormFieldValue(\n              subFormID,\n              \"incomeEndsDeath\"\n            ),\n            incomeStartsAtRetirement: this.getSubFormFieldValue(\n              subFormID,\n              \"incomeStartsRetirement\"\n            ),\n            taxable:\n              this.getSubFormFieldValue(subFormID, \"taxable\") == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"EndSubForm\":\n    }\n\n    return varQL;\n  }\n\n  updateSubForm(subFormID, subFormData, visible = true) {\n    let formData = this.state.formData;\n\n    var bFound = false;\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex][\"id\"] == subFormID) {\n        formData[findex][\"data\"] = subFormData;\n        bFound = true;\n      }\n    }\n\n    if (!bFound) {\n      formData.push({\n        id: subFormID,\n        data: subFormData,\n        visible: visible,\n      });\n    }\n\n    let varQL = this.createQLVariable(subFormID, subFormData);\n\n    console.log(\"varQL:\", varQL, \", dataID:\", this.state.dataID);\n    varQL = null;\n    var instance = this;\n    if (varQL != null) {\n      if (this.state.dataID == null) {\n        fnMutationInsuranceProductAdd({ variables: { data: varQL } }).then(\n          (response) => {\n            instance.setState({\n              dataID: response[\"data\"][\"createInsuranceProduct\"][\"id\"],\n            });\n          }\n        );\n      } else {\n        fnMutationInsuranceProductUpdate({\n          variables: { id: this.state.dataID, data: varQL },\n        });\n      }\n    }\n\n    this.setState({\n      formData: formData,\n    });\n  }\n\n  getSubFormData(subFormID, fromState = true, pformData) {\n    let formData;\n    if (fromState) {\n      formData = this.state.formData;\n    } else {\n      formData = pformData;\n    }\n\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex][\"id\"] == subFormID) {\n        return formData[findex][\"data\"];\n      }\n    }\n\n    return {};\n  }\n\n  goSubForm(subFormID) {\n    this.setState({\n      formVisible: false,\n    });\n\n    if(subFormID === 'InsuranceTypeSubForm')  {\n      let fd = initialFormData({});\n      this.setState({formData: fd, isEndForm: false})\n    }\n\n    let nextSubForm = InsuranceTypeSubForm;\n\n    let insuranceType = this.getSubFormFieldValue(\n      \"InsuranceTypeSubForm\",\n      \"insuranceType\"\n    );\n\n    switch (subFormID) {\n      case \"InsuranceTypeSubForm\":\n        nextSubForm = InsuranceTypeSubForm;\n        this.setState({isEndForm: false})\n        break;\n      case \"ProductInformationSubForm\":\n        nextSubForm = ProductInformationSubForm;\n        break;\n      case \"LongTermInformationSubForm\":\n        nextSubForm = LongTermInformationSubForm;\n        break;\n      case \"AutoInsuranceInformationSubForm\":\n        nextSubForm = AutoInsuranceInformationSubForm;\n        break;\n      case \"FinancialInformationSubForm\":\n        nextSubForm = FinancialInformationSubForm;\n        break;\n      case \"IncomeInformationSubForm\":\n        nextSubForm = IncomeInformationSubForm;\n        break;\n      case \"EndSubForm\":\n        nextSubForm = EndSubForm;\n        this.setState({isEndForm: true})\n        break;\n      case \"StepProductInformationSubForm\":\n        nextSubForm = ProductInformationSubForm;\n       \n        break;\n      case \"StepAdditionalInformation\":\n        switch (insuranceType) {\n          case \"Long Term Disability\":\n          case \"Long Term Care\":\n          case \"Long Term Care - Hybrid\":\n          case \"Other\":\n            nextSubForm = LongTermInformationSubForm;\n            break;\n          case \"Automobile\":\n            nextSubForm = AutoInsuranceInformationSubForm;\n            break;\n          default:\n            nextSubForm = FinancialInformationSubForm;\n        }\n        break;\n      case \"StepFinancialInformation\":\n        nextSubForm = FinancialInformationSubForm;\n        break;\n      case \"StepIncomeInformation\":\n        switch (insuranceType) {\n          case \"Automobile\":\n          case \"Fire\":\n          case \"Earthquake\":\n          case \"Umbrella\":\n          case \"Homeowners\":\n          case \"Flood\":\n            nextSubForm = EndSubForm;\n            break;\n          default:\n            nextSubForm = IncomeInformationSubForm;\n        }\n        break;\n    }\n\n    let subFormData = this.getSubFormData(subFormID);\n    setTimeout(() => {\n      this.setState({\n        formVisible: true,\n        curSubFormID: subFormID,\n        curSubForm: nextSubForm,\n        subFormData: subFormData,\n      });\n    }, 100);\n  }\n\n  toggleRightSide = (e) => {\n    e.preventDefault();\n    this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n  };\n\n  loadDBData(formData) {\n    console.log(\"formData:\", formData);\n\n    var instance = this;\n    setTimeout(function () {\n      instance.setState({\n        formVisible: true,\n        dbLoaded: true,\n        formData: formData,\n        subFormData: instance.getSubFormData(\n          instance.state.curSubFormID,\n          false,\n          formData\n        ),\n      });\n    }, 100);\n  }\n\n  getTopNav(formStep) {\n    let disabled = false;\n    let active = false;\n\n    let InsuranceType = this.getSubFormFieldValue(\n      \"InsuranceTypeSubForm\",\n      \"insuranceType\"\n    );\n    //getting stepid from subform\n    let curSubFormStepIndex = -1;\n    for (var sindex = 0; sindex < this.state.formSteps.length; sindex++) {\n      if (this.state.curSubFormID == \"EndSubForm\") {\n        if (this.state.formSteps[sindex].id == formStep.id) {\n          curSubFormStepIndex = sindex;\n          break;\n        }\n      }\n      for (\n        var findex = 0;\n        findex <\n        this.state.formStep2FormMap[this.state.formSteps[sindex].id].length;\n        findex++\n      ) {\n        if (\n          this.state.formStep2FormMap[this.state.formSteps[sindex].id][\n            findex\n          ] == this.state.curSubFormID\n        ) {\n          curSubFormStepIndex = sindex;\n          break;\n        }\n      }\n    }\n\n    if(this.state.isEndForm && formStep.id !== 'StepInsuranceTypeSubForm'){\n      return {\n        disabled: true,\n        active: false,\n      };\n    }\n\n    if (InsuranceType != null && InsuranceType != \"\") {\n      switch (formStep.id) {\n        case \"StepInsuranceTypeSubForm\":\n          if(curSubFormStepIndex === 0) {\n            if(this.state.isEndForm) {\n              disabled = false;\n              active = true;\n            } else {\n              disabled = true;\n              active = false;\n              InsuranceType = '';\n            }\n          }\n          if (curSubFormStepIndex >= 0) {\n            active = true;\n          }\n          break;\n        case \"StepProductInformationSubForm\":\n          if (curSubFormStepIndex >= 1) {\n            active = true;\n          }\n          break;\n        case \"StepAdditionalInformation\":\n          if (curSubFormStepIndex >= 2) {\n            active = true;\n          }\n          switch (InsuranceType) {\n            case \"Fire\":\n            case \"Earthquake\":\n            case \"Umbrella\":\n            case \"Homeowners\":\n            case \"Speciality and Misc\":\n            case \"Dental\":\n            case \"Renters\":\n            case \"Property and Casualty\":\n            case \"Term - 15 Year\":\n            case \"Term - 25 Year\":\n            case \"Variable Universal Life\":\n            case \"Universal Life\":\n            case \"Term - 20 year\":\n            case \"Whole Life\":\n            case \"Variable Survivorship\":\n            case \"Variable Life\":\n            case \"Term - 30 Year\":\n            case \"Term - 10 Year\":\n            case \"No Medical Exam\":\n            case \"Term - 5 Year\":\n            case \"Guaranteed Issue\":\n            case \"Final Expense\":\n            case \"Life and Health\":\n            case \"Annuity - Immediate\":\n            case \"Annuity - Deferred\":\n            case \"Annuity - Fixed Indexed\":\n            case \"Annuity - Variable\":\n            case \"Annuity - Fixed\":\n              disabled = true;\n          }\n          break;\n        case \"StepFinancialInformation\":\n          if (curSubFormStepIndex >= 3) {\n            active = true;\n          }\n          switch (InsuranceType) {\n            case \"Credit - HELOC\":\n            case \"Credit Card - Business\":\n            case \"Credit Card - Personal\":\n              disabled = true;\n          }\n\n          break;\n        case \"StepIncomeInformation\":\n          if (curSubFormStepIndex >= 4) {\n            active = true;\n          }\n          switch (InsuranceType) {\n            case \"Fire\":\n            case \"Earthquake\":\n            case \"Umbrella\":\n            case \"Homeowners\":\n            case \"Speciality and Misc\":\n              disabled = true;\n          }\n          break;\n      }\n    } else {\n      if (formStep.id != \"StepInsuranceTypeSubForm\") {\n        disabled = true;\n      }\n    }\n\n    return {\n      disabled: disabled,\n      active: active,\n    };\n  }\n\n  getRightSideFormData(formStep) {\n    /*juni code */\n    let formData = [];\n    let insuranceType = this.getSubFormFieldValue(\n      \"InsuranceTypeSubForm\",\n      \"insuranceType\"\n    );\n\n    if (insuranceType == null || insuranceType == \"\") {\n      return formData;\n    }\n\n    for (var index = 0; index < this.state.formData.length; index++) {\n      if (formStep.id == this.state.formData[index][\"stepId\"]) {\n        switch (formStep.id) {\n          case \"StepInsuranceTypeSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepProductInformationSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepAdditionalInformation\":\n            if (\n              insuranceType == \"Long Term Care\" &&\n              this.state.formData[index][\"id\"] == \"LongTermInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              insuranceType == \"Long Term Disability\" &&\n              this.state.formData[index][\"id\"] == \"LongTermInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              insuranceType == \"Long Term Care - Hybrid\" &&\n              this.state.formData[index][\"id\"] == \"LongTermInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              insuranceType == \"Other\" &&\n              this.state.formData[index][\"id\"] == \"LongTermInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              insuranceType == \"Automobile\" &&\n              this.state.formData[index][\"id\"] ==\n                \"AutoInsuranceInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              insuranceType == \"Flood\" &&\n              this.state.formData[index][\"id\"] ==\n                \"AutoInsuranceInformationSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            }\n            break;\n          case \"StepFinancialInformation\":\n            // switch (insuranceType) {\n            //   case \"Credit - HELOC\":\n            //   case \"Credit Card - Business\":\n            //   case \"Credit Card - Personal\":\n            //     break;\n            //   default:\n            formData.push(this.state.formData[index]);\n            break;\n          // }\n          // break;\n          case \"StepIncomeInformation\":\n            // switch (insuranceType) {\n            //   case \"Credit Card - Business\":\n            //   case \"Credit Card - Personal\":\n            //     break;\n            //   default:\n            formData.push(this.state.formData[index]);\n            break;\n          // }\n          // break;\n        }\n      }\n    }\n\n    console.log(\"getRightSideFormData\", formStep.id, insuranceType, formData);\n\n    return formData;\n  }\n\n  goNext(fromSubFormID) {\n    let nextSubFormID = \"\";\n\n    let insuranceType = this.getSubFormFieldValue(\n      \"InsuranceTypeSubForm\",\n      \"insuranceType\"\n    );\n    switch (fromSubFormID) {\n      // StepInsuranceTypeSubForm\n      case \"InsuranceTypeSubForm\":\n        nextSubFormID = \"ProductInformationSubForm\";\n        break;\n\n      // StepProductInformationSubForm\n      case \"ProductInformationSubForm\":\n        switch (insuranceType) {\n          case \"Long Term Disability\":\n          case \"Long Term Care\":\n          case \"Long Term Care - Hybrid\":\n          case \"Other\":\n            nextSubFormID = \"LongTermInformationSubForm\";\n            break;\n          case \"Automobile\":\n          case \"Flood\":\n            nextSubFormID = \"AutoInsuranceInformationSubForm\";\n            break;\n          /*juni code */\n          default:\n            nextSubFormID = \"FinancialInformationSubForm\";\n            break;\n        }\n\n        break;\n\n      // StepAdditionalInformation\n      case \"LongTermInformationSubForm\":\n        nextSubFormID = \"FinancialInformationSubForm\";\n        break;\n      case \"AutoInsuranceInformationSubForm\":\n        nextSubFormID = \"FinancialInformationSubForm\";\n        break;\n\n      // StepFinancialInformation\n      case \"FinancialInformationSubForm\":\n        switch (insuranceType) {\n          // case \"Fire\":\n          // case \"Earthquake\":\n          // case \"Umbrella\":\n          // case \"Homeowners\":\n          // case \"Speciality and Misc\":\n          case \"Fire\":\n          case \"Earthquake\":\n          case \"Umbrella\":\n          case \"Homeowners\":\n          case \"Speciality and Misc\":\n            nextSubFormID = \"EndSubForm\";\n            break;\n          default:\n            nextSubFormID = \"IncomeInformationSubForm\";\n            break;\n        }\n        break;\n\n      // StepIncomeInformation\n      case \"IncomeInformationSubForm\":\n        nextSubFormID = \"EndSubForm\";\n        break;\n    }\n\n    this.goSubForm(nextSubFormID);\n  }\n\n  goPrev(fromSubFormID) {\n    let prevSubFormID = \"\";\n    let insuranceType = this.getSubFormFieldValue(\n      \"InsuranceTypeSubForm\",\n      \"insuranceType\"\n    );\n    switch (fromSubFormID) {\n      // StepInsuranceTypeSubForm\n      case \"InsuranceTypeSubForm\":\n        break;\n\n      // StepProductInformationSubForm\n      case \"ProductInformationSubForm\":\n        prevSubFormID = \"InsuranceTypeSubForm\";\n        break;\n\n      // StepAdditionalInformation\n      case \"LongTermInformationSubForm\":\n        prevSubFormID = \"ProductInformationSubForm\";\n        break;\n      case \"AutoInsuranceInformationSubForm\":\n        prevSubFormID = \"ProductInformationSubForm\";\n        break;\n\n      // StepFinancialInformation\n      case \"FinancialInformationSubForm\":\n        switch (insuranceType) {\n          case \"Long Term Disability\":\n          case \"Long Term Care\":\n          case \"Long Term Care - Hybrid\":\n          case \"Other\":\n            prevSubFormID = \"LongTermInformationSubForm\";\n            break;\n\n          case \"Automobile\":\n          case \"Flood\":\n            prevSubFormID = \"AutoInsuranceInformationSubForm\";\n            break;\n\n          default:\n            prevSubFormID = \"ProductInformationSubForm\";\n            break;\n        }\n        break;\n\n      // StepIncomeInformation\n      case \"IncomeInformationSubForm\":\n        prevSubFormID = \"FinancialInformationSubForm\";\n        break;\n    }\n\n    this.goSubForm(prevSubFormID);\n  }\n\n  render() {\n    const navlinks = [\n      {\n        href: \"/\",\n        title: \"Home\",\n      },\n      {\n        href: \"/modules\",\n        title: \"Modules\",\n      },\n      {\n        href: \"/insurance\",\n        title: \"Insurance Products\",\n      },\n    ];\n\n    let SubForm = this.state.curSubForm;\n\n    let formpageClassName = \"form-page-container-wrap\";\n    if (this.state.isRightSideOpen) {\n      formpageClassName = \"form-page-container-wrap right-side--opend\";\n    } else {\n      formpageClassName = \"form-page-container-wrap right-side--collapsed\";\n    }\n\n    return (\n      <div className={formpageClassName}>\n        <div className=\"form-page--main-side\">\n          <div className=\"steps\">\n            <div className=\"logo-container align-items-top justify-content-center\">\n              <img className=\"img-asset\" src={AssetPlanet} />\n            </div>\n            <div className=\"process\">\n              <div className=\"process-row\">\n                {this.state.formSteps.map((formStep, index) => {\n                  const { disabled, active } = this.getTopNav(formStep);\n                  let className = \"btn nav-items btn-circle\";\n                  if (disabled) {\n                    className = \"btn nav-items btn-circle disabled\";\n                  } else if (active) {\n                    className = \"btn nav-items btn-circle active\";\n                  }\n                  return (\n                    <div className=\"process-step\" key={index}>\n                      <button\n                        type=\"button\"\n                        className={className}\n                        data-toggle=\"tab\"\n                        onClick={() =>\n                          !disabled\n                            ? this.goSubForm(\n                                this.state.formStep2FormMap[formStep.id][0]\n                              )\n                            : null\n                        }\n                      >\n                        {/* <img className=\"img-icon\" src={ImageIcon} /> */}\n                        <div style={{ fontSize: 30, color: '#006400' }}>\n                          {index + 1}\n                        </div>\n                      </button>\n                      <p className=\"step-title\">{formStep.title}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <HiddenHook />\n          {!this.state.dbLoaded && (\n            <LoadDBDataHook\n              dbLoaded={this.state.dbLoaded}\n              dbID={this.state.dbID}\n              cbLoadDBData={this.loadDBData}\n            />\n          )}\n          <div className=\"container\">\n            <div className=\"page-nav-history\">\n              {/* {navlinks.map((navlink, index) => {\n                return (\n                  <span key={index}>\n                    <Link\n                      key={index}\n                      to={navlink.href}\n                      className=\"page-nav-link text-uppercase\"\n                    >\n                      {navlink.title}\n                    </Link>\n                    {index != navlinks.length - 1 ? \"/\" : null}\n                  </span>\n                );\n              })} */}\n            </div>\n            {!this.state.dbLoaded && <div>Loading...</div>}\n            {this.state.dbLoaded && (\n              <div className=\"form-page-container\">\n                <div className=\"form-page--left-side\">\n                  <FormPagePose\n                    className=\"info-form-block\"\n                    pose={this.state.formVisible ? \"visible\" : \"hidden\"}\n                  >\n                    <SubForm\n                      subFormData={this.state.subFormData}\n                      cbGoSubForm={this.goSubForm}\n                      cbUpdateSubForm={this.updateSubForm}\n                      formData={this.state.formData}\n                      cbGetSubFormField={this.getSubFormField}\n                      cbGoNext={this.goNext}\n                      cbGoPrev={this.goPrev}\n                    />\n                  </FormPagePose>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"form-page--right-side\">\n          <span\n            className=\"right-side-collapse-icon\"\n            onClick={this.toggleRightSide}\n          >\n            <i className=\"fe-menu\"></i>\n          </span>\n          <div className=\"form-page--right-side-wrap\">\n            {this.state.formSteps.map((formStep, index) => {\n              let formData = this.getRightSideFormData(formStep);\n              console.log(formData);\n              return formData.map((subForm, sindex) => {\n                if (subForm.visible == false) {\n                  return <React.Fragment key={sindex}></React.Fragment>;\n                }\n                let count = 0;\n                let go = false;\n                let fieldss = null;\n                let subFormData = subForm.data;\n\n                if (subFormData[\"rows\"]) {\n                  fieldss = subFormData[\"rows\"];\n                } else if (subFormData[\"fields\"]) {\n                  fieldss = subFormData[\"fields\"];\n                }\n                count = fieldss.length;\n\n                for (let i = 0; i < parseInt(count); i++) {\n                  if (fieldss[i][\"value\"] != \"\") {\n                    go = true;\n                  }\n                }\n\n                // let subFormData = subForm.data;\n                return (\n                  <div className=\"form-brief-block\" key={sindex}>\n                    <div className=\"form-brief-top\">\n                      {go ? (\n                        <h4 className=\"form-brief-title\">\n                          {subFormData.title}\n                        </h4>\n                      ) : null}\n                      {/* <h4 className=\"form-brief-title\">{subFormData.title}</h4> */}\n                      <span\n                        className=\"form-brief-edit-btn\"\n                        onClick={() => this.goSubForm(subForm.stepId)}\n                      >\n                        <Icon type=\"edit\"></Icon>\n                      </span>\n                    </div>\n                    <div className=\"form-brief-content\">\n                      {subFormData.fields &&\n                        subFormData.fields.map((field, ffindex) => {\n                          if (field.value == \"\" || field.value == null) {\n                            return (\n                              <React.Fragment key={ffindex}></React.Fragment>\n                            );\n                          }\n                          return (\n                            <div className=\"form-brief-item\" key={ffindex}>\n                              <p className=\"form-brief-item-title\">\n                                {field.title != \"\" ? field.title + \":\" : null}{\" \"}\n                              </p>\n                              <p className=\"form-brief-item-value\">\n                                {field.hasOwnProperty(\"type\") &&\n                                  field[\"type\"] == \"currency\" &&\n                                  float2Currency(field.value)}\n                                {field.hasOwnProperty(\"type\") &&\n                                  field[\"type\"] == \"percent\" &&\n                                  field.value + \" %\"}\n                                {!field.hasOwnProperty(\"type\") && field.value}\n                              </p>\n                            </div>\n                          );\n                        })}\n                      {subFormData.rows && subFormData.rows.length > 0 && (\n                        <React.Fragment>\n                          {subForm.id ==\n                            \"AdditionalPaymentInformationSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--33\">\n                                  Extra Principal Payment Description\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  How Much\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  How Often\n                                </div>\n                              </div>\n                              {subFormData.rows.map(\n                                (additionalPayment, cindex) => {\n                                  return (\n                                    <div\n                                      className=\"form-brief-row\"\n                                      key={cindex}\n                                    >\n                                      <div className=\"form-brief-col--33\">\n                                        {\n                                          additionalPayment[\n                                            \"extra_payment_description\"\n                                          ]\n                                        }\n                                      </div>\n                                      <div className=\"form-brief-col--33\">\n                                        {float2Currency(\n                                          additionalPayment[\"howMuch\"]\n                                        )}\n                                      </div>\n                                      <div className=\"form-brief-col--33\">\n                                        {additionalPayment[\"howOften\"]}\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              )}\n                            </React.Fragment>\n                          )}\n                          {subForm.id == \"AdjustableLoanDetailsSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--50\">\n                                  Date of Rate Change\n                                </div>\n                                <div className=\"form-brief-col--50\">\n                                  newPercent\n                                </div>\n                              </div>\n                              {subFormData.rows.map(\n                                (adjustableLoan, cindex) => {\n                                  return (\n                                    <div\n                                      className=\"form-brief-row\"\n                                      key={cindex}\n                                    >\n                                      <div className=\"form-brief-col--50\">\n                                        {adjustableLoan[\"dateRateChange\"]}\n                                      </div>\n                                      <div className=\"form-brief-col--50\">\n                                        {adjustableLoan[\"newPercent\"] + \" %\"}\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              )}\n                            </React.Fragment>\n                          )}\n                        </React.Fragment>\n                      )}\n                    </div>\n                  </div>\n                );\n              });\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(InsuranceNew);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}