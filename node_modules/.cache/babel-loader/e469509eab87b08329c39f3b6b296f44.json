{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _slicedToArray from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/modules/assets/AssetsNew.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Icon, Alert } from \"antd\";\nimport ImageIcon from \"assets/images/asset.png\";\nimport AssetPlanet from \"assets/images/asset-planet-logo.jpg\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { QL_ASSETS_ADD, QL_ASSETS_UPDATE, QL_ASSETS_GET } from \"../../../constants/queries\";\nimport { float2Currency } from \"helpers/Utils\";\nimport { FormPagePose } from \"../../../components/Animations\";\nimport SellingAssetCostsSubForm from \"./subforms/SellingAssetCostsSubForm\";\nimport CollectiblesSubForm from \"./subforms/CollectiblesSubForm\";\nimport VCSubForm from \"./subforms/VCSubForm\";\nimport StockSubForm from \"./subforms/StockSubForm\";\nimport UserPortfolioSubForm from \"./subforms/UserPortfolioSubForm\";\nimport ContributionSubForm from \"./subforms/ContributionSubForm\";\nimport AssetInformationSubForm from \"./subforms/AssetInformationSubForm\";\nimport QuestionRMDAdditionalSubForm from \"./subforms/QuestionRMDAdditionalSubForm\";\nimport QuestionShowFieldsAirplane from \"./subforms/QuestionShowFieldsAirplane\";\nimport QuestionContributionDistributionSubForm from \"./subforms/QuestionContributionDistributionSubForm\";\nimport AssetAllocationSubForm from \"./subforms/AssetAllocationSubForm\";\nimport AssetPerformanceSubForm from \"./subforms/AssetPerformanceSubForm\";\nimport LiveStockSubForm from \"./subforms/LiveStockSubForm\";\nimport PrimaryResidenceSubForm from \"./subforms/PrimaryResidenceSubForm\";\nimport TaxLiquiditySubForm from \"./subforms/TaxLiquiditySubForm\";\nimport CommittmentSubForm from \"./subforms/CommittmentSubForm\";\nimport PropertySubForm from \"./subforms/PropertySubForm\";\nimport InvestmentPropertySubForm from \"./subforms/InvestmentPropertySubForm\";\nimport InvestmentPropertyExpensesSubForm from \"./subforms/InvestmentPropertyExpensesSubForm\";\nimport InheritedIRASubForm from \"./subforms/InheritedIRASubForm\";\nimport EndSubForm from \"./subforms/EndSubForm\";\nvar fnMutationAssetsAdd = null;\nvar dataMutationAssetsAdd = null;\nvar fnMutationAssetsUpdate = null;\nvar dataMutationAssetsUpdate = null;\nvar prevPos = 0;\nfunction HiddenHook() {\n  var _useMutation = useMutation(QL_ASSETS_ADD);\n  var _useMutation2 = _slicedToArray(_useMutation, 2);\n  fnMutationAssetsAdd = _useMutation2[0];\n  dataMutationAssetsAdd = _useMutation2[1].dataMutationAssetsAdd;\n  var _useMutation3 = useMutation(QL_ASSETS_UPDATE);\n  var _useMutation4 = _slicedToArray(_useMutation3, 2);\n  fnMutationAssetsUpdate = _useMutation4[0];\n  dataMutationAssetsUpdate = _useMutation4[1].dataMutationAssetsUpdate;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  });\n}\nfunction initialFormData(data) {\n  var formData = [];\n  if (data.hasOwnProperty(\"asset\")) {\n    formData.push({\n      id: \"AssetAllocationSubForm\",\n      data: AssetAllocationSubForm.FnCreateFormData({\n        value: data[\"asset\"][\"assetAllocation\"] != null ? data[\"asset\"][\"assetAllocation\"][\"assetAllocation\"] : \"\"\n      }),\n      visible: true,\n      stepId: \"StepAssetAllocationSubForm\"\n    });\n    formData.push({\n      id: \"AssetInformationSubForm\",\n      data: AssetInformationSubForm.FnCreateFormData({\n        name: data[\"asset\"][\"name\"],\n        accountType: data[\"asset\"][\"accountType\"],\n        owner: data[\"asset\"][\"owner\"],\n        heldWhere: data[\"asset\"][\"heldWhere\"],\n        accountDigits: data[\"asset\"][\"last4DigitsOfAccount\"],\n        assetStatus: data[\"asset\"][\"status\"]\n      }),\n      visible: true,\n      stepId: \"StepAssetInformationSubForm\"\n    });\n    formData.push({\n      id: \"QuestionRMDAdditionalSubForm\",\n      data: QuestionRMDAdditionalSubForm.FnCreateFormData({\n        value: data[\"asset\"][\"additionalQuestion\"] != null ? data[\"asset\"][\"additionalQuestion\"][\"isSpouseSoleBeneficiary\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"QuestionShowFieldsAirplane\",\n      data: QuestionShowFieldsAirplane.FnCreateFormData({\n        value: data[\"asset\"][\"additionalQuestion\"] != null ? data[\"asset\"][\"additionalQuestion\"][\"isShowFields\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visible: true,\n      stepId: \"StepSellingAssetCostsInformation\"\n    });\n    formData.push({\n      id: \"InheritedIRASubForm\",\n      data: InheritedIRASubForm.FnCreateFormData({\n        birthDate: data[\"asset\"][\"inheritedInformation\"] != null ? data[\"asset\"][\"inheritedInformation\"][\"deceasedIraOwnersBirthdate\"] : \"\",\n        deathDate: data[\"asset\"][\"inheritedInformation\"] != null ? data[\"asset\"][\"inheritedInformation\"][\"deceasedIraOwnersDeathDate\"] : \"\",\n        relationship: data[\"asset\"][\"inheritedInformation\"] != null ? data[\"asset\"][\"inheritedInformation\"][\"ownersRelationshipToDeceased\"] : \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"QuestionContributionDistributionSubForm\",\n      data: QuestionContributionDistributionSubForm.FnCreateFormData({\n        value: data[\"asset\"][\"inheritedInformation\"] != null ? data[\"asset\"][\"inheritedInformation\"][\"regularContributionsOrDistributions\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\"\n    });\n    formData.push({\n      id: \"ContributionSubForm\",\n      data: ContributionSubForm.FnCreateFormData(data[\"asset\"][\"contributionOrDistributions\"]),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\"\n    });\n    formData.push({\n      id: \"SellingAssetCostsSubForm\",\n      data: SellingAssetCostsSubForm.FnCreateFormData({\n        saleDate: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"dateOfSale\"] : \"\",\n        totalLiabilities: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"totalLiabilities\"] : \"\",\n        totalNetSoldValue: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"totalNetSoldValue\"] : \"\",\n        commissionSale: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"commisionOnSale\"] : \"\",\n        rateReturnValue: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"valueBasedOnRateOfReturn\"] : \"\",\n        otherTransactionCosts: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"otherTransactionCosts\"] : \"\",\n        actualValue: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"actualValueAtSaleDate\"] : \"\",\n        taxes: data[\"asset\"][\"sellingAssetCost\"] != null ? data[\"asset\"][\"sellingAssetCost\"][\"taxes\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepSellingAssetCostsInformation\"\n    });\n    formData.push({\n      id: \"CollectiblesSubForm\",\n      data: CollectiblesSubForm.FnCreateFormData({\n        year: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"year\"] : \"\",\n        description: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"describeCollectible\"] : \"\",\n        // monthlyBudget: data['asset']['collectible'] != null ? data['asset']['collectible']['dollarAppliedToMonthlyBudget'] : '',\n        collectibleType: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"typeOfCollectible\"] : \"\",\n        model: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"model\"] : \"\",\n        make: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"make\"] : \"\",\n        purchasePrice: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"purchasePrice\"] : \"\",\n        appraised: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"appraised\"] ? \"Yes\" : \"No\" : \"\",\n        insured: data[\"asset\"][\"collectible\"] != null ? data[\"asset\"][\"collectible\"][\"insured\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"LiveStockSubForm\",\n      data: LiveStockSubForm.FnCreateFormData(data[\"asset\"][\"livestocks\"]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"VCSubForm\",\n      data: VCSubForm.FnCreateFormData({\n        nickname: data[\"asset\"][\"privatePlacementAndVc\"] != null ? data[\"asset\"][\"privatePlacementAndVc\"][\"nickname\"] : \"\",\n        additionalCommittments: data[\"asset\"][\"privatePlacementAndVc\"] != null ? data[\"asset\"][\"privatePlacementAndVc\"][\"additionalFutureCommittments\"] ? \"Yes\" : \"No\" : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"CommittmentSubForm\",\n      data: CommittmentSubForm.FnCreateFormData({\n        committmentDate: data[\"asset\"][\"privatePlacementAndVc\"] != null && data[\"asset\"][\"privatePlacementAndVc\"][\"whenFutureCommittmentDate\"] != null ? data[\"asset\"][\"privatePlacementAndVc\"][\"whenFutureCommittmentDate\"] : \"\",\n        committmentAmount: data[\"asset\"][\"privatePlacementAndVc\"] != null ? data[\"asset\"][\"privatePlacementAndVc\"][\"futureCommittmentDollarAmount\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"PrimaryResidenceSubForm\",\n      data: PrimaryResidenceSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"PropertySubForm\",\n      data: PropertySubForm.FnCreateFormData({\n        value: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"typeOfProperty\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"InvestmentPropertySubForm\",\n      data: InvestmentPropertySubForm.FnCreateFormData({\n        purchasePrice: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"purchasePriceOfProperty\"] : \"\",\n        monthlyRent: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"monthlyLease\"] : \"\",\n        totalMonthlyExpenses: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"totalMonthlyExpenses\"] : \"\",\n        downPayment: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"downpayment\"] : \"\",\n        investmentPropertyAddress: data[\"asset\"][\"realState\"] != null ? data[\"asset\"][\"realState\"][\"investmentPropertyAddress\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"InvestmentPropertyExpensesSubForm\",\n      data: InvestmentPropertyExpensesSubForm.FnCreateFormData(data[\"asset\"][\"investmentPropertyExpenses\"] != null ? data[\"asset\"][\"investmentPropertyExpenses\"] : []),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"StockSubForm\",\n      data: StockSubForm.FnCreateFormData(data[\"asset\"][\"stockIndividualSubforms\"]),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"UserPortfolioSubForm\",\n      data: UserPortfolioSubForm.FnCreateFormData({\n        spPortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfSAndP500\"] : \"\",\n        realEstatePortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfRealEstate\"] : \"\",\n        bondsPortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfBonds\"] : \"\",\n        cashPortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfCash\"] : \"\",\n        goldPortfolio: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfGold\"] : \"\",\n        totalPercentage: data[\"asset\"][\"userDefinedPortfolio\"] != null ? data[\"asset\"][\"userDefinedPortfolio\"][\"totalPercentage\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"AssetPerformanceSubForm\",\n      data: AssetPerformanceSubForm.FnCreateFormData({\n        monetaryValue: data[\"asset\"][\"assetPerformance\"] != null ? data[\"asset\"][\"assetPerformance\"][\"monetaryValue\"] : \"\",\n        returnRate: data[\"asset\"][\"assetPerformance\"] != null ? data[\"asset\"][\"assetPerformance\"][\"rateOfReturn\"] : \"\",\n        dateValue: data[\"asset\"][\"assetPerformance\"] != null ? data[\"asset\"][\"assetPerformance\"][\"valueAsOfDate\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAssetPerformanceSubForm\"\n    });\n    formData.push({\n      id: \"TaxLiquiditySubForm\",\n      data: TaxLiquiditySubForm.FnCreateFormData({\n        basisCost: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"costBasis\"] : \"\",\n        costBasisDate: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"costBasisDate\"] : \"\",\n        estimatedGains: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"estimatedUnrealizedGains\"] : \"\",\n        taxability: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"taxibility\"] ? \"Taxable\" : \"Tax Deferred\" : \"\",\n        assetLiquid: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"thisAssetIsLiquid\"] ? \"Yes\" : \"No\" : \"\",\n        partialSaleAbility: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"abilityForPartialSale\"] ? \"Yes\" : \"No\" : \"\",\n        distributionTaxabilityValue: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"taxabilityOfDistribution\"] : \"\",\n        withdrawalPenalty: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"earlyWithdrawlPenalty\"] : \"\",\n        distributionTaxability: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"taxabilityOnDistribution\"] : \"\",\n        agePenalty: data[\"asset\"][\"taxAndLiquidity\"] != null ? data[\"asset\"][\"taxAndLiquidity\"][\"penaltyBasedOnAgeInClientsAndPlans\"] : \"\"\n      }),\n      visibile: true,\n      stepId: \"StepTaxLiquiditySubForm\"\n    });\n  } else {\n    formData.push({\n      id: \"AssetAllocationSubForm\",\n      data: AssetAllocationSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAssetAllocationSubForm\"\n    });\n    formData.push({\n      id: \"AssetInformationSubForm\",\n      data: AssetInformationSubForm.FnCreateFormData({\n        name: \"\",\n        accountType: \"\",\n        owner: \"\",\n        heldWhere: \"\",\n        accountDigits: \"\",\n        assetStatus: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAssetInformationSubForm\"\n    });\n    formData.push({\n      id: \"QuestionRMDAdditionalSubForm\",\n      data: QuestionRMDAdditionalSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"QuestionShowFieldsAirplane\",\n      data: QuestionShowFieldsAirplane.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"InheritedIRASubForm\",\n      data: InheritedIRASubForm.FnCreateFormData({\n        birthDate: \"\",\n        deathDate: \"\",\n        relationship: \"\"\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\"\n    });\n    formData.push({\n      id: \"QuestionContributionDistributionSubForm\",\n      data: QuestionContributionDistributionSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\"\n    });\n    formData.push({\n      id: \"ContributionSubForm\",\n      data: ContributionSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\"\n    });\n    formData.push({\n      id: \"SellingAssetCostsSubForm\",\n      data: SellingAssetCostsSubForm.FnCreateFormData({\n        saleDate: \"\",\n        totalLiabilities: \"\",\n        totalNetSoldValue: \"\",\n        commissionSale: \"\",\n        rateReturnValue: \"\",\n        otherTransactionCosts: \"\",\n        actualValue: \"\",\n        taxes: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepSellingAssetCostsInformation\"\n    });\n    formData.push({\n      id: \"CollectiblesSubForm\",\n      data: CollectiblesSubForm.FnCreateFormData({\n        year: \"\",\n        description: \"\",\n        // monthlyBudget: '',\n        collectibleType: \"\",\n        model: \"\",\n        make: \"\",\n        purchasePrice: \"\",\n        appraised: \"\",\n        insured: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"LiveStockSubForm\",\n      data: LiveStockSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"VCSubForm\",\n      data: VCSubForm.FnCreateFormData({\n        nickname: \"\",\n        additionalCommittments: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"CommittmentSubForm\",\n      data: CommittmentSubForm.FnCreateFormData({\n        committmentDate: \"\",\n        committmentAmount: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"PrimaryResidenceSubForm\",\n      data: PrimaryResidenceSubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"PropertySubForm\",\n      data: PropertySubForm.FnCreateFormData({\n        value: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"InvestmentPropertySubForm\",\n      data: InvestmentPropertySubForm.FnCreateFormData({\n        purchasePrice: \"\",\n        monthlyRent: \"\",\n        totalMonthlyExpenses: \"\",\n        downPayment: \"\",\n        investmentPropertyAddress: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"InvestmentPropertyExpensesSubForm\",\n      data: InvestmentPropertyExpensesSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"StockSubForm\",\n      data: StockSubForm.FnCreateFormData([]),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"UserPortfolioSubForm\",\n      data: UserPortfolioSubForm.FnCreateFormData({\n        spPortfolio: \"\",\n        realEstatePortfolio: \"\",\n        bondsPortfolio: \"\",\n        cashPortfolio: \"\",\n        goldPortfolio: \"\",\n        totalPercentage: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\"\n    });\n    formData.push({\n      id: \"AssetPerformanceSubForm\",\n      data: AssetPerformanceSubForm.FnCreateFormData({\n        monetaryValue: \"\",\n        returnRate: \"\",\n        dateValue: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepAssetPerformanceSubForm\"\n    });\n    formData.push({\n      id: \"TaxLiquiditySubForm\",\n      data: TaxLiquiditySubForm.FnCreateFormData({\n        basisCost: \"\",\n        costBasisDate: \"\",\n        estimatedGains: \"\",\n        taxability: \"\",\n        assetLiquid: \"\",\n        partialSaleAbility: \"\",\n        distributionTaxabilityValue: \"\",\n        withdrawalPenalty: \"\",\n        distributionTaxability: \"\",\n        agePenalty: \"\"\n      }),\n      visibile: true,\n      stepId: \"StepTaxLiquiditySubForm\"\n    });\n  }\n  return formData;\n}\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != \"\") {\n    var _useQuery = useQuery(QL_ASSETS_GET, {\n        variables: {\n          id: props.dbID\n        }\n      }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n    if (data) {\n      console.log(\"call..\");\n      props.cbLoadDBData(initialFormData(data));\n    }\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 10\n    }\n  });\n}\nvar AssetsNew = /*#__PURE__*/function (_Component) {\n  _inherits(AssetsNew, _Component);\n  function AssetsNew(props) {\n    var _this;\n    _classCallCheck(this, AssetsNew);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssetsNew).call(this, props));\n    _this.toggleRightSide = function (e) {\n      e.preventDefault();\n      _this.setState({\n        isRightSideOpen: !_this.state.isRightSideOpen\n      });\n    };\n    var dbID = null;\n    var dbLoaded = true;\n    var assetsID = _this.props.match.params.assetsID;\n    if (assetsID) {\n      dbID = assetsID;\n      dbLoaded = false;\n    }\n    var formData = initialFormData({});\n    _this.state = {\n      dataID: dbID,\n      curSubFormID: \"AssetAllocationSubForm\",\n      curSubForm: AssetAllocationSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData1: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }\n        //         ]\n        //     }\n        // }\n      ],\n      formData: formData,\n      isRightSideOpen: true,\n      formSteps: [{\n        id: \"StepAssetAllocationSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Asset Allocation\"\n      }, {\n        id: \"StepAssetInformationSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Asset Information\"\n      }, {\n        id: \"StepAccountTypeQuestions\",\n        icon: \"icon_ex.png\",\n        title: \"Qualified Account Type Questions\"\n      }, {\n        id: \"StepQuestionContributionDistributionSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Contributions or Distributions\"\n      }, {\n        id: \"StepAdditionalAssetInformation\",\n        icon: \"icon_ex.png\",\n        title: \"Additional Asset Information\"\n      }, {\n        id: \"StepSellingAssetCostsInformation\",\n        icon: \"icon_ex.png\",\n        title: \"Selling Asset Costs\"\n      }, {\n        id: \"StepAssetPerformanceSubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Asset Performance\"\n      }, {\n        id: \"StepTaxLiquiditySubForm\",\n        icon: \"icon_ex.png\",\n        title: \"Tax and Liquidity\"\n      }],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      formStep2FormMap: {\n        // \"stepid\": ['form id', 'formid', 'formid']\n        StepAssetAllocationSubForm: [\"AssetAllocationSubForm\"],\n        StepAssetInformationSubForm: [\"AssetInformationSubForm\"],\n        StepAccountTypeQuestions: [\"QuestionRMDAdditionalSubForm\", \"InheritedIRASubForm\", \"QuestionShowFieldsAirplane\"],\n        StepQuestionContributionDistributionSubForm: [\"QuestionContributionDistributionSubForm\", \"ContributionSubForm\"],\n        StepSellingAssetCostsInformation: [\"SellingAssetCostsSubForm\", \"QuestionShowFieldsAirplane\"],\n        StepAdditionalAssetInformation: [\"CollectiblesSubForm\", \"LiveStockSubForm\", \"VCSubForm\", \"CommittmentSubForm\", \"PrimaryResidenceSubForm\", \"PropertySubForm\", \"InvestmentPropertySubForm\", \"InvestmentPropertyExpensesSubForm\", \"StockSubForm\", \"UserPortfolioSubForm\"],\n        StepAssetPerformanceSubForm: [\"AssetPerformanceSubForm\"],\n        StepTaxLiquiditySubForm: [\"TaxLiquiditySubForm\"]\n      },\n      isEndForm: false\n    };\n    _this.goSubForm = _this.goSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateSubForm = _this.updateSubForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormData = _this.getSubFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormField = _this.getSubFormField.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createQLVariable = _this.createQLVariable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getSubFormFieldValue = _this.getSubFormFieldValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleRightSide = _this.toggleRightSide.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getRightSideFormData = _this.getRightSideFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTopNav = _this.getTopNav.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goNext = _this.goNext.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.goPrev = _this.goPrev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(AssetsNew, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.goSubForm(this.state.formSteps[0][\"id\"]);\n      // this.goSubForm(\"TaxLiquiditySubForm\");\n    }\n  }, {\n    key: \"getSubFormField\",\n    value: function getSubFormField(formID, fieldID) {\n      var formData = this.state.formData;\n      for (var index = 0; index < formData.length; index++) {\n        if (formData[index][\"id\"] == formID) {\n          var data = formData[index][\"data\"];\n          var fields = data[\"fields\"];\n          for (var findex = 0; findex < fields.length; findex++) {\n            if (fields[findex][\"id\"] == fieldID) {\n              return fields[findex];\n            }\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"getSubFormFieldValue\",\n    value: function getSubFormFieldValue(formID, fieldID) {\n      var field = this.getSubFormField(formID, fieldID);\n      if (field == null) {\n        return \"\";\n      } else {\n        return field.value;\n      }\n    }\n  }, {\n    key: \"createQLVariable\",\n    value: function createQLVariable(subFormID, subFormData) {\n      var varQL = null;\n      switch (subFormID) {\n        case \"AssetInformationSubForm\":\n          varQL = {\n            asset: {\n              name: this.getSubFormFieldValue(subFormID, \"name\"),\n              accountType: this.getSubFormFieldValue(subFormID, \"accountType\"),\n              owner: this.getSubFormFieldValue(subFormID, \"owner\"),\n              heldWhere: this.getSubFormFieldValue(subFormID, \"heldWhere\"),\n              last4DigitsOfAccount: this.getSubFormFieldValue(subFormID, \"accountDigits\"),\n              status: this.getSubFormFieldValue(subFormID, \"assetStatus\")\n            }\n          };\n          break;\n        case \"QuestionContributionDistributionSubForm\":\n          varQL = {\n            inheritedInformation: {\n              regularContributionsOrDistributions: parseInt(this.getSubFormFieldValue(subFormID, \"regularContribution\")) == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"QuestionRMDAdditionalSubForm\":\n          varQL = {\n            additionalQuestion: {\n              isSpouseSoleBeneficiary: this.getSubFormFieldValue(subFormID, \"isSpouseSole\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"QuestionShowFieldsAirplane\":\n          varQL = {\n            additionalQuestion: {\n              isShowFields: this.getSubFormFieldValue(subFormID, \"isShowfield\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"InheritedIRASubForm\":\n          varQL = {\n            inheritedInformation: {\n              deceasedIraOwnersBirthdate: this.getSubFormFieldValue(subFormID, \"birthDate\"),\n              deceasedIraOwnersDeathDate: this.getSubFormFieldValue(subFormID, \"deathDate\"),\n              ownersRelationshipToDeceased: this.getSubFormFieldValue(subFormID, \"relationship\")\n            }\n          };\n          break;\n        case \"ContributionSubForm\":\n          varQL = {\n            contributionOrDistributions: subFormData[\"rows\"]\n          };\n          break;\n        case \"AssetAllocationSubForm\":\n          varQL = {\n            assetAllocation: {\n              assetAllocation: this.getSubFormFieldValue(subFormID, \"assetsAllocation\")\n            }\n          };\n          break;\n        case \"SellingAssetCostsSubForm\":\n          varQL = {\n            sellingAssetCost: {\n              dateOfSale: this.getSubFormFieldValue(subFormID, \"saleDate\"),\n              totalLiabilities: this.getSubFormFieldValue(subFormID, \"totalLiabilities\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"totalLiabilities\")) : 0,\n              totalNetSoldValue: this.getSubFormFieldValue(subFormID, \"totalNetSoldValue\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"totalNetSoldValue\")) : 0,\n              commisionOnSale: this.getSubFormFieldValue(subFormID, \"commissionSale\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"commissionSale\")) : 0,\n              valueBasedOnRateOfReturn: this.getSubFormFieldValue(subFormID, \"rateReturnValue\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"rateReturnValue\")) : 0,\n              otherTransactionCosts: this.getSubFormFieldValue(subFormID, \"otherTransactionCosts\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"otherTransactionCosts\")) : 0,\n              actualValueAtSaleDate: this.getSubFormFieldValue(subFormID, \"actualValue\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"actualValue\")) : 0,\n              taxes: this.getSubFormFieldValue(subFormID, \"taxes\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"taxes\")) : 0\n            }\n          };\n          break;\n        case \"AssetPerformanceSubForm\":\n          varQL = {\n            assetPerformance: {\n              monetaryValue: parseFloat(this.getSubFormFieldValue(subFormID, \"monetaryValue\")),\n              rateOfReturn: this.getSubFormFieldValue(subFormID, \"returnRate\"),\n              valueAsOfDate: this.getSubFormFieldValue(subFormID, \"dateValue\")\n            }\n          };\n          break;\n        case \"CollectiblesSubForm\":\n          varQL = {\n            collectible: {\n              year: this.getSubFormFieldValue(subFormID, \"year\"),\n              describeCollectible: this.getSubFormFieldValue(subFormID, \"description\"),\n              // \"dollarAppliedToMonthlyBudget\": this.getSubFormFieldValue(subFormID, 'monthlyBudget') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'monthlyBudget')) : 0,\n              typeOfCollectible: this.getSubFormFieldValue(subFormID, \"collectibleType\"),\n              model: this.getSubFormFieldValue(subFormID, \"model\"),\n              make: this.getSubFormFieldValue(subFormID, \"make\"),\n              purchasePrice: this.getSubFormFieldValue(subFormID, \"purchasePrice\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"purchasePrice\")) : 0,\n              appraised: this.getSubFormFieldValue(subFormID, \"appraised\") == \"Yes\" ? true : false,\n              insured: this.getSubFormFieldValue(subFormID, \"insured\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"LiveStockSubForm\":\n          varQL = {\n            livestocks: subFormData[\"rows\"]\n          };\n          break;\n        case \"VCSubForm\":\n          varQL = {\n            privatePlacementAndVc: {\n              nickname: this.getSubFormFieldValue(subFormID, \"nickname\"),\n              additionalFutureCommittments: this.getSubFormFieldValue(subFormID, \"additionalCommittments\") == \"Yes\" ? true : false\n            }\n          };\n          break;\n        case \"CommittmentSubForm\":\n          varQL = {\n            privatePlacementAndVc: {\n              whenFutureCommittmentDate: this.getSubFormFieldValue(subFormID, \"committmentDate\"),\n              futureCommittmentDollarAmount: this.getSubFormFieldValue(subFormID, \"committmentAmount\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"committmentAmount\")) : 0\n            }\n          };\n          break;\n        case \"PrimaryResidenceSubForm\":\n          break;\n        case \"PropertySubForm\":\n          varQL = {\n            realState: {\n              typeOfProperty: this.getSubFormFieldValue(subFormID, \"propertyType\")\n            }\n          };\n          break;\n        case \"InvestmentPropertySubForm\":\n          varQL = {\n            realState: {\n              purchasePriceOfProperty: this.getSubFormFieldValue(subFormID, \"purchasePrice\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"purchasePrice\")) : 0,\n              monthlyLease: this.getSubFormFieldValue(subFormID, \"monthlyRent\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"monthlyRent\")) : 0,\n              totalMonthlyExpenses: this.getSubFormFieldValue(subFormID, \"totalMonthlyExpenses\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"totalMonthlyExpenses\")) : 0,\n              downpayment: this.getSubFormFieldValue(subFormID, \"downPayment\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"downPayment\")) : 0,\n              investmentPropertyAddress: this.getSubFormFieldValue(subFormID, \"investmentPropertyAddress\")\n            }\n          };\n          break;\n        case \"InvestmentPropertyExpensesSubForm\":\n          varQL = {\n            investmentPropertyExpenses: subFormData[\"rows\"]\n          };\n          break;\n        case \"StockSubForm\":\n          varQL = {\n            stockIndividualSubforms: subFormData[\"rows\"]\n          };\n          break;\n        case \"UserPortfolioSubForm\":\n          varQL = {\n            userDefinedPortfolio: {\n              portfolioPercentageOfSAndP500: this.getSubFormFieldValue(subFormID, \"spPortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"spPortfolio\")) : 0,\n              portfolioPercentageOfRealEstate: this.getSubFormFieldValue(subFormID, \"realEstatePortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"realEstatePortfolio\")) : 0,\n              portfolioPercentageOfBonds: this.getSubFormFieldValue(subFormID, \"bondsPortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"bondsPortfolio\")) : 0,\n              portfolioPercentageOfCash: this.getSubFormFieldValue(subFormID, \"cashPortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"cashPortfolio\")) : 0,\n              portfolioPercentageOfGold: this.getSubFormFieldValue(subFormID, \"goldPortfolio\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"goldPortfolio\")) : 0,\n              totalPercentage: this.getSubFormFieldValue(subFormID, \"totalPercentage\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"totalPercentage\")) : 0\n            }\n          };\n          break;\n        case \"TaxLiquiditySubForm\":\n          varQL = {\n            taxAndLiquidity: {\n              costBasis: this.getSubFormFieldValue(subFormID, \"basisCost\") != \"\" ? parseInt(this.getSubFormFieldValue(subFormID, \"basisCost\")) : 0,\n              costBasisDate: this.getSubFormFieldValue(subFormID, \"costBasisDate\"),\n              taxibility: this.getSubFormFieldValue(subFormID, \"taxability\") == \"Taxable\" ? true : false,\n              // \"rmdEligible\":\n              thisAssetIsLiquid: this.getSubFormFieldValue(subFormID, \"assetLiquid\") == \"Yes\" ? true : false,\n              abilityForPartialSale: this.getSubFormFieldValue(subFormID, \"partialSaleAbility\") == \"Yes\" ? true : false,\n              taxabilityOnDistribution: this.getSubFormFieldValue(subFormID, \"distributionTaxability\")\n            }\n          };\n          break;\n        case \"EndSubForm\":\n      }\n      return varQL;\n    }\n  }, {\n    key: \"updateSubForm\",\n    value: function updateSubForm(subFormID, subFormData) {\n      var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var bEnd = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      console.log(\"subFormID\", subFormID);\n      var formData = this.state.formData;\n      var bFound = false;\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex][\"id\"] == subFormID) {\n          formData[findex][\"data\"] = subFormData;\n          bFound = true;\n        }\n      }\n      if (!bFound) {\n        formData.push({\n          id: subFormID,\n          data: subFormData,\n          visible: visible\n        });\n      }\n      console.log(\"updateSubForm>>>\", formData);\n      var varQL = this.createQLVariable(subFormID, subFormData);\n      console.log(\"varQL:\", varQL, \", dataID:\", this.state.dataID);\n      // varQL = null;\n      var instance = this;\n      if (varQL != null) {\n        if (this.state.dataID == null) {\n          fnMutationAssetsAdd({\n            variables: {\n              data: varQL\n            }\n          }).then(function (response) {\n            instance.setState({\n              dataID: response[\"data\"][\"createAsset\"][\"id\"]\n            });\n          });\n        } else {\n          fnMutationAssetsUpdate({\n            variables: {\n              id: this.state.dataID,\n              data: varQL\n            }\n          }).then(function (response) {\n            if (bEnd) {\n              alert(\"Updated Successfully\");\n              instance.props.history.push(\"/assets\");\n            }\n          });\n        }\n      }\n      this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"getSubFormData\",\n    value: function getSubFormData(subFormID) {\n      var fromState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var pformData = arguments.length > 2 ? arguments[2] : undefined;\n      var formData;\n      if (fromState) {\n        formData = this.state.formData;\n      } else {\n        formData = pformData;\n      }\n      for (var findex = 0; findex < formData.length; findex++) {\n        if (formData[findex][\"id\"] == subFormID) {\n          return formData[findex][\"data\"];\n        }\n      }\n      return {};\n    }\n  }, {\n    key: \"goSubForm\",\n    value: function goSubForm(subFormID) {\n      var _this2 = this;\n      this.setState({\n        formVisible: false\n      });\n      if (subFormID === 'StepAssetAllocationSubForm') {\n        var fd = initialFormData({});\n        this.setState({\n          formData: fd,\n          isEndForm: false\n        });\n      }\n      var nextSubForm = AssetInformationSubForm;\n      switch (subFormID) {\n        case \"AssetInformationSubForm\":\n          nextSubForm = AssetInformationSubForm;\n          this.setState({\n            isEndForm: false\n          });\n          break;\n        case \"StepAssetInformationSubForm\":\n          nextSubForm = AssetInformationSubForm;\n          subFormID = \"AssetInformationSubForm\";\n          break;\n        case \"QuestionContributionDistributionSubForm\":\n          nextSubForm = QuestionContributionDistributionSubForm;\n          break;\n        case \"StepQuestionContributionDistributionSubForm\":\n          nextSubForm = QuestionContributionDistributionSubForm;\n          subFormID = \"QuestionContributionDistributionSubForm\";\n          break;\n        case \"QuestionRMDAdditionalSubForm\":\n          nextSubForm = QuestionRMDAdditionalSubForm;\n          break;\n        case \"QuestionShowFieldsAirplane\":\n          nextSubForm = QuestionShowFieldsAirplane;\n          break;\n        case \"InheritedIRASubForm\":\n          nextSubForm = InheritedIRASubForm;\n          break;\n        case \"ContributionSubForm\":\n          nextSubForm = ContributionSubForm;\n          break;\n        case \"AssetAllocationSubForm\":\n          nextSubForm = AssetAllocationSubForm;\n          break;\n        case \"StepAssetAllocationSubForm\":\n          nextSubForm = AssetAllocationSubForm;\n          subFormID = \"AssetAllocationSubForm\";\n          break;\n        case \"SellingAssetCostsSubForm\":\n          nextSubForm = SellingAssetCostsSubForm;\n          break;\n        case \"AssetPerformanceSubForm\":\n          nextSubForm = AssetPerformanceSubForm;\n          break;\n        case \"StepAssetPerformanceSubForm\":\n          nextSubForm = AssetPerformanceSubForm;\n          subFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"CollectiblesSubForm\":\n          nextSubForm = CollectiblesSubForm;\n          break;\n        case \"LiveStockSubForm\":\n          nextSubForm = LiveStockSubForm;\n          break;\n        case \"VCSubForm\":\n          nextSubForm = VCSubForm;\n          break;\n        case \"CommittmentSubForm\":\n          nextSubForm = CommittmentSubForm;\n          break;\n        case \"PrimaryResidenceSubForm\":\n          nextSubForm = PrimaryResidenceSubForm;\n          break;\n        case \"PropertySubForm\":\n          nextSubForm = PropertySubForm;\n          break;\n        case \"InvestmentPropertySubForm\":\n          nextSubForm = InvestmentPropertySubForm;\n          break;\n        case \"InvestmentPropertyExpensesSubForm\":\n          nextSubForm = InvestmentPropertyExpensesSubForm;\n          break;\n        case \"StockSubForm\":\n          nextSubForm = StockSubForm;\n          break;\n        case \"UserPortfolioSubForm\":\n          nextSubForm = UserPortfolioSubForm;\n          break;\n        case \"TaxLiquiditySubForm\":\n          nextSubForm = TaxLiquiditySubForm;\n          break;\n        case \"StepTaxLiquiditySubForm\":\n          nextSubForm = TaxLiquiditySubForm;\n          subFormID = \"TaxLiquiditySubForm\";\n          break;\n        case \"EndSubForm\":\n          nextSubForm = EndSubForm;\n          this.setState({\n            isEndForm: true\n          });\n          break;\n        case \"StepAccountTypeQuestions\":\n          switch (this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\")) {\n            case \"529\":\n            case \"Custodial\":\n            case \"Coverdell Education\":\n            case \"Individual\":\n            case \"Health Savings Account\":\n            case \"Joint - Tenants In Common\":\n            case \"Joint\":\n            case \"Roth\":\n            case \"Trust\":\n              nextSubForm = QuestionContributionDistributionSubForm;\n              subFormID = \"QuestionContributionDistributionSubForm\";\n              break;\n            default:\n              nextSubForm = QuestionRMDAdditionalSubForm;\n              subFormID = \"QuestionRMDAdditionalSubForm\";\n          }\n          break;\n        case \"StepAdditionalAssetInformation\":\n          switch (this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\")) {\n            case \"Airplane\":\n            case \"Auto - non-collectible\":\n            case \"Boat\":\n            case \"General Household\":\n            case \"Motorcycles\":\n              nextSubForm = QuestionShowFieldsAirplane;\n              subFormID = \"QuestionShowFieldsAirplane\";\n              break;\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"Bonds - Int  Long Term\":\n            case \"Business Interest\":\n            case \"Cash/CD's T-Bills\":\n            case \"Club Membership\":\n              nextSubForm = SellingAssetCostsSubForm;\n              subFormID = \"SellingAssetCostsSubForm\";\n              break;\n            case \"Collectibles\":\n              nextSubForm = CollectiblesSubForm;\n              subFormID = \"CollectiblesSubForm\";\n              break;\n            case \"Livestock\":\n              nextSubForm = LiveStockSubForm;\n              subFormID = \"LiveStockSubForm\";\n              break;\n            case \"Private Placement & VC\":\n              nextSubForm = VCSubForm;\n              subFormID = \"VCSubForm\";\n              break;\n            case \"Real Estate\":\n              nextSubForm = PrimaryResidenceSubForm;\n              subFormID = \"PrimaryResidenceSubForm\";\n              break;\n            case \"Stocks - Individual\":\n              nextSubForm = StockSubForm;\n              subFormID = \"StockSubForm\";\n              break;\n            case \"User Defined Portfolio Allocation\":\n              nextSubForm = UserPortfolioSubForm;\n              subFormID = \"UserPortfolioSubForm\";\n              break;\n            default:\n              nextSubForm = AssetAllocationSubForm;\n              subFormID = \"AssetAllocationSubForm\";\n          }\n          break;\n        case \"StepSellingAssetCostsInformation\":\n          switch (this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\")) {\n            case \"Airplane\":\n            case \"Auto - non-collectible\":\n            case \"Boat\":\n            case \"Motorcycles\":\n              nextSubForm = QuestionShowFieldsAirplane;\n              subFormID = \"QuestionShowFieldsAirplane\";\n              break;\n            // case \"Indexes, ETF's and Mutual Funds\":\n            // case \"Bonds - Int \\ Long Term\":\n            // case \"Business Interest\":\n            // case \"Cash/CD's T-Bills\":\n            // case \"Club Membership\":\n            //     nextSubForm = SellingAssetCostsSubForm;\n            //     subFormID = \"SellingAssetCostsSubForm\";\n            //     break;\n            // case \"Collectibles\":\n            //     nextSubForm = CollectiblesSubForm;\n            //     subFormID = \"CollectiblesSubForm\";\n            //     break;\n            // case \"Livestock\":\n            //     nextSubForm = LiveStockSubForm;\n            //     subFormID = \"LiveStockSubForm\";\n            //     break;\n            // case \"Private Placement & VC\":\n            //     nextSubForm = VCSubForm;\n            //     subFormID = \"VCSubForm\";\n            //     break;\n            // case \"Real Estate\":\n            //     nextSubForm = PrimaryResidenceSubForm;\n            //     subFormID = \"PrimaryResidenceSubForm\";\n            //     break;\n            // case \"Stocks - Individual\":\n            //     nextSubForm = StockSubForm;\n            //     subFormID = \"StockSubForm\";\n            //     break;\n            // case \"User Defined Portfolio Allocation\":\n            //     nextSubForm = UserPortfolioSubForm;\n            //     subFormID = \"UserPortfolioSubForm\";\n            //     break;\n            default:\n              nextSubForm = AssetAllocationSubForm;\n              subFormID = \"AssetAllocationSubForm\";\n          }\n          break;\n      }\n      var subFormData = this.getSubFormData(subFormID);\n      setTimeout(function () {\n        _this2.setState({\n          formVisible: true,\n          curSubFormID: subFormID,\n          curSubForm: nextSubForm,\n          subFormData: subFormData\n        });\n      }, 100);\n    }\n  }, {\n    key: \"loadDBData\",\n    value: function loadDBData(formData) {\n      console.log(\"loadDBData formData:\", formData);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          formVisible: true,\n          dbLoaded: true,\n          formData: formData,\n          subFormData: instance.getSubFormData(instance.state.curSubFormID, false, formData)\n        });\n      }, 100);\n    }\n  }, {\n    key: \"getTopNav\",\n    value: function getTopNav(formStep) {\n      var disabled = false;\n      var active = false;\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      var isSpouseSole = this.getSubFormFieldValue(\"QuestionRMDAdditionalSubForm\", \"isSpouseSole\");\n      var accountType = this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\");\n      var regularContribution = this.getSubFormFieldValue(\"QuestionContributionDistributionSubForm\", \"regularContribution\");\n      var isPrimaryResidence = this.getSubFormFieldValue(\"PrimaryResidenceSubForm\", \"isPrimaryResidence\");\n      // formStep2FormMap\n      // this.state.curSubFormID\n      //getting stepid from subform\n      var curSubFormStepIndex = -1;\n      for (var sindex = 0; sindex < this.state.formSteps.length; sindex++) {\n        if (this.state.curSubFormID == \"EndSubForm\") {\n          if (this.state.formSteps[sindex].id == formStep.id) {\n            curSubFormStepIndex = sindex;\n            break;\n          }\n        }\n        for (var findex = 0; findex < this.state.formStep2FormMap[this.state.formSteps[sindex].id].length; findex++) {\n          if (this.state.formStep2FormMap[this.state.formSteps[sindex].id][findex] == this.state.curSubFormID) {\n            curSubFormStepIndex = sindex;\n            break;\n          }\n        }\n      }\n      if (this.state.isEndForm && formStep.id !== 'StepAssetAllocationSubForm') {\n        return {\n          disabled: true,\n          active: false\n        };\n      }\n      if (assetsAllocation != null && assetsAllocation != \"\") {\n        switch (formStep.id) {\n          case \"StepAssetAllocationSubForm\":\n            if (curSubFormStepIndex === 0) {\n              if (this.state.isEndForm) {\n                disabled = false;\n                active = true;\n              } else {\n                disabled = true;\n                active = false;\n                assetsAllocation = '';\n              }\n            }\n            if (curSubFormStepIndex >= 0) {\n              active = true;\n            }\n            break;\n          case \"StepAssetInformationSubForm\":\n            if (curSubFormStepIndex >= 1) {\n              active = true;\n            }\n            break;\n          case \"StepSellingAssetCostsInformation\":\n            if (curSubFormStepIndex >= 5) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              // case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n              // case \"Cash/CD's T-Bills\":\n              // case \"Bonds - Int  Long Term\":\n              // case \"Indexes, ETF's and Mutual Funds\":\n              case \"Stocks - Individual\":\n              // case \"Trust Deeds\":\n              case \"User Defined Portfolio Allocation\":\n                disabled = true;\n            }\n            break;\n          case \"StepAdditionalAssetInformation\":\n            if (curSubFormStepIndex >= 4) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"Auto - non-collectible\":\n              case \"Bonds - Int  Long Term\":\n              case \"Indexes, ETF's and Mutual Funds\":\n              case \"General Household\":\n              case \"Cash/CD's T-Bills\":\n              case \"Trust Deeds\":\n                disabled = true;\n            }\n            break;\n          case \"StepAccountTypeQuestions\":\n            if (curSubFormStepIndex >= 2) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Auto - non-collectible\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n              case \"Cash/CD's T-Bills\":\n                disabled = true;\n            }\n            break;\n          case \"StepQuestionContributionDistributionSubForm\":\n            if (curSubFormStepIndex >= 3) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Auto - non-collectible\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n                disabled = true;\n            }\n            break;\n          case \"StepAdditionalAssetInformation\":\n            if (curSubFormStepIndex >= 4) {\n              active = true;\n            }\n            switch (assetsAllocation) {\n              case \"Indexes, ETF's and Mutual Funds\":\n              case \"Bonds - Int  Long Term\":\n              // case \"Club Membership\":\n              case \"Business Interest\":\n              case \"Cash/CD's T-Bills\":\n                disabled = true;\n            }\n            break;\n          case \"StepAssetPerformanceSubForm\":\n            if (curSubFormStepIndex >= 6) {\n              active = true;\n            }\n            break;\n          case \"StepTaxLiquiditySubForm\":\n            if (curSubFormStepIndex >= 7) {\n              active = true;\n            }\n            break;\n        }\n      } else {\n        if (formStep.id != \"StepAssetAllocationSubForm\") {\n          disabled = true;\n        }\n      }\n      return {\n        disabled: disabled,\n        active: active\n      };\n    }\n  }, {\n    key: \"getRightSideFormData\",\n    value: function getRightSideFormData(formStep) {\n      var formData = [];\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      var isSpouseSole = this.getSubFormFieldValue(\"QuestionRMDAdditionalSubForm\", \"isSpouseSole\");\n      var accountType = this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\");\n      var regularContribution = this.getSubFormFieldValue(\"QuestionContributionDistributionSubForm\", \"regularContribution\");\n      var isPrimaryResidence = this.getSubFormFieldValue(\"PrimaryResidenceSubForm\", \"isPrimaryResidence\");\n      if (assetsAllocation == null || assetsAllocation == \"\") {\n        return formData;\n      }\n      for (var index = 0; index < this.state.formData.length; index++) {\n        if (formStep.id == this.state.formData[index][\"stepId\"]) {\n          switch (formStep.id) {\n            case \"StepAssetAllocationSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepAssetInformationSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepAccountTypeQuestions\":\n              switch (assetsAllocation) {\n                case \"Airplane\":\n                case \"Boat\":\n                case \"Motorcycles\":\n                case \"General Household\":\n                case \"Club Membership\":\n                case \"Real Estate\":\n                case \"Auto - non-collectible\":\n                case \"Business Interest\":\n                case \"Livestock\":\n                case \"Collectibles\":\n                case \"Private Placement & VC\":\n                case \"Cash/CD's T-Bills\":\n                  break;\n                default:\n                  if (this.state.formData[index][\"id\"] == \"InheritedIRASubForm\") {\n                    if (accountType == \"IRA Inherited\") {\n                      formData.push(this.state.formData[index]);\n                    }\n                  } else {\n                    formData.push(this.state.formData[index]);\n                  }\n                  break;\n              }\n              break;\n            case \"StepQuestionContributionDistributionSubForm\":\n              switch (assetsAllocation) {\n                case \"Airplane\":\n                case \"Boat\":\n                case \"Motorcycles\":\n                case \"General Household\":\n                case \"Club Membership\":\n                case \"Real Estate\":\n                case \"Auto - non-collectible\":\n                case \"Business Interest\":\n                case \"Livestock\":\n                case \"Collectibles\":\n                case \"Private Placement & VC\":\n                  break;\n                default:\n                  if (this.state.formData[index][\"id\"] == \"ContributionSubForm\") {\n                    if (regularContribution == \"Yes\") {\n                      formData.push(this.state.formData[index]);\n                    }\n                  } else {\n                    formData.push(this.state.formData[index]);\n                  }\n                  break;\n              }\n              break;\n            case \"StepAdditionalAssetInformation\":\n              if (assetsAllocation == \"Stocks - Individual\" && this.state.formData[index][\"id\"] == \"StockSubForm\") {\n                console.log(this.state.formData[index][\"data\"][\"rows\"]);\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"User Defined Portfolio Allocation\" && this.state.formData[index][\"id\"] == \"UserPortfolioSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Airplane\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Boat\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Motorcycles\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"General Household\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Club Membership\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Real Estate\" && isPrimaryResidence == \"No\" && (this.state.formData[index][\"id\"] == \"PropertySubForm\" || this.state.formData[index][\"id\"] == \"InvestmentPropertySubForm\" || this.state.formData[index][\"id\"] == \"InvestmentPropertyExpensesSubForm\")) {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Auto - non-collectible\" && this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Livestock\" && this.state.formData[index][\"id\"] == \"LiveStockSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Collectibles\" && this.state.formData[index][\"id\"] == \"CollectiblesSubForm\") {\n                formData.push(this.state.formData[index]);\n              } else if (assetsAllocation == \"Private Placement & VC\" && (this.state.formData[index][\"id\"] == \"VCSubForm\" || this.state.formData[index][\"id\"] == \"CommittmentSubForm\")) {\n                formData.push(this.state.formData[index]);\n              }\n              break;\n            case \"StepAssetPerformanceSubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            case \"StepTaxLiquiditySubForm\":\n              formData.push(this.state.formData[index]);\n              break;\n            default:\n              formData.push(this.state.formData[index]);\n              break;\n          }\n        }\n      }\n      return formData;\n    }\n  }, {\n    key: \"goNext\",\n    value: function goNext(fromSubFormID) {\n      var nextSubFormID = \"\";\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      var isSpouseSole = this.getSubFormFieldValue(\"QuestionRMDAdditionalSubForm\", \"isSpouseSole\");\n      var accountType = this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\");\n      var isShowfield = this.getSubFormFieldValue(\"QuestionShowFieldsAirplane\", \"isShowfield\");\n      var regularContribution = this.getSubFormFieldValue(\"QuestionContributionDistributionSubForm\", \"regularContribution\");\n      var isPrimaryResidence = this.getSubFormFieldValue(\"PrimaryResidenceSubForm\", \"isPrimaryResidence\");\n      switch (fromSubFormID) {\n        // StepAssetAllocationSubForm\n        case \"AssetAllocationSubForm\":\n          nextSubFormID = \"AssetInformationSubForm\";\n          break;\n\n        // StepAssetInformationSubForm\n        case \"AssetInformationSubForm\":\n          switch (accountType) {\n            case \"529\":\n            case \"Custodial\":\n            case \"Coverdell Education\":\n            case \"Individual\":\n            case \"Health Savings Account\":\n            case \"Joint\":\n            case \"Roth\":\n            case \"Trust\":\n              nextSubFormID = \"QuestionContributionDistributionSubForm\";\n            default:\n              nextSubFormID = \"QuestionRMDAdditionalSubForm\";\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n              break;\n            case \"Club Membership\":\n              nextSubFormID = \"StepAssetPerformanceSubForm\";\n              break;\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n              break;\n            case \"Business Interest\":\n              nextSubFormID = \"StepAssetPerformanceSubForm\";\n              break;\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n              break;\n            case \"Cash/CD's T-Bills\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n          }\n          break;\n        // StepAccountTypeQuestions\n        case \"QuestionRMDAdditionalSubForm\":\n          if (accountType == \"IRA Inherited\") {\n            nextSubFormID = \"InheritedIRASubForm\";\n          } else {\n            nextSubFormID = \"QuestionContributionDistributionSubForm\";\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n          }\n          break;\n        //juniiii\n        case \"QuestionShowFieldsAirplane\":\n          if (isShowfield == \"Yes\") {\n            nextSubFormID = \"SellingAssetCostsSubForm\";\n          } else {\n            nextSubFormID = \"AssetPerformanceSubForm\";\n          }\n          break;\n        case \"InheritedIRASubForm\":\n          nextSubFormID = \"QuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              nextSubFormID = \"StepAdditionalAssetInformation\";\n          }\n          break;\n        // StepQuestionContributionDistributionSubForm\n        case \"QuestionContributionDistributionSubForm\":\n          var _regularContribution = this.getSubFormFieldValue(\"QuestionContributionDistributionSubForm\", \"regularContribution\");\n          if (_regularContribution == \"Yes\") {\n            nextSubFormID = \"ContributionSubForm\";\n          } else {\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n          }\n          break;\n        case \"ContributionSubForm\":\n          nextSubFormID = \"StepAdditionalAssetInformation\";\n          switch (assetsAllocation) {\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"Bonds - Int  Long Term\":\n            case \"Cash/CD's T-Bills\":\n              nextSubFormID = \"StepAssetPerformanceSubForm\";\n              break;\n          }\n          break;\n\n        // StepAdditionalAssetInformation\n        case \"SellingAssetCostsSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"CollectiblesSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"LiveStockSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"VCSubForm\":\n          var additionalCommittments = this.getSubFormFieldValue(\"VCSubForm\", \"additionalCommittments\");\n          if (additionalCommittments == \"Yes\") {\n            nextSubFormID = \"CommittmentSubForm\";\n          } else {\n            nextSubFormID = \"AssetPerformanceSubForm\";\n          }\n          break;\n        case \"CommittmentSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"PrimaryResidenceSubForm\":\n          var _isPrimaryResidence = this.getSubFormFieldValue(\"PrimaryResidenceSubForm\", \"isPrimaryResidence\");\n          if (_isPrimaryResidence == \"Yes\") {\n            nextSubFormID = \"AssetPerformanceSubForm\";\n          } else {\n            nextSubFormID = \"PropertySubForm\";\n          }\n          break;\n        case \"PropertySubForm\":\n          nextSubFormID = \"InvestmentPropertySubForm\";\n          break;\n        case \"InvestmentPropertySubForm\":\n          nextSubFormID = \"InvestmentPropertyExpensesSubForm\";\n          break;\n        case \"InvestmentPropertyExpensesSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"StockSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        case \"UserPortfolioSubForm\":\n          nextSubFormID = \"AssetPerformanceSubForm\";\n          break;\n        // StepAssetPerformanceSubForm\n        case \"AssetPerformanceSubForm\":\n          nextSubFormID = \"TaxLiquiditySubForm\";\n          break;\n\n        // StepTaxLiquiditySubForm\n        case \"TaxLiquiditySubForm\":\n          nextSubFormID = \"EndSubForm\";\n          break;\n      }\n      this.goSubForm(nextSubFormID);\n    }\n  }, {\n    key: \"goPrev\",\n    value: function goPrev(fromSubFormID) {\n      var prevSubFormID = \"\";\n      var assetsAllocation = this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\");\n      switch (fromSubFormID) {\n        // StepAssetAllocationSubForm\n        case \"AssetAllocationSubForm\":\n          prevSubFormID = \"\";\n          break;\n\n        // StepAssetInformationSubForm\n        case \"AssetInformationSubForm\":\n          prevSubFormID = \"AssetAllocationSubForm\";\n          break;\n\n        // StepAccountTypeQuestions\n        case \"QuestionRMDAdditionalSubForm\":\n          prevSubFormID = \"\";\n          break;\n        case \"InheritedIRASubForm\":\n          prevSubFormID = \"QuestionRMDAdditionalSubForm\";\n          break;\n\n        // StepQuestionContributionDistributionSubForm\n        case \"QuestionContributionDistributionSubForm\":\n          prevSubFormID = \"\";\n          break;\n        case \"ContributionSubForm\":\n          prevSubFormID = \"QuestionContributionDistributionSubForm\";\n          break;\n\n        // StepAdditionalAssetInformation\n        case \"SellingAssetCostsSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"CollectiblesSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"LiveStockSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"VCSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"CommittmentSubForm\":\n          prevSubFormID = \"VCSubForm\";\n          break;\n        case \"PrimaryResidenceSubForm\":\n          prevSubFormID = \"\";\n          break;\n        case \"PropertySubForm\":\n          prevSubFormID = \"\";\n          break;\n        case \"InvestmentPropertySubForm\":\n          prevSubFormID = \"PropertySubForm\";\n          break;\n        case \"InvestmentPropertyExpensesSubForm\":\n          prevSubFormID = \"InvestmentPropertySubForm\";\n          break;\n        case \"StockSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n        case \"UserPortfolioSubForm\":\n          prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n          }\n          break;\n\n        // StepAssetPerformanceSubForm\n        case \"AssetPerformanceSubForm\":\n          prevSubFormID = \"StepAdditionalAssetInformation\";\n          switch (assetsAllocation) {\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"Bonds - Int  Long Term\":\n              prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n              break;\n            case \"Club Membership\":\n            case \"Business Interest\":\n              prevSubFormID = \"StepAssetInformationSubForm\";\n              break;\n            case \"Cash/CD's T-Bills\":\n              prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n          }\n          break;\n\n        // StepTaxLiquiditySubForm\n        case \"TaxLiquiditySubForm\":\n          prevSubFormID = \"AssetPerformanceSubForm\";\n          break;\n      }\n      this.goSubForm(prevSubFormID);\n    }\n  }, {\n    key: \"getBeneficiaryAssignmentData\",\n    value: function getBeneficiaryAssignmentData(subFormData, subForm) {\n      var _this3 = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2318,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-brief-top\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2319,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"form-brief-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2320,\n          columnNumber: 11\n        }\n      }, subFormData[\"BeneficiaryAssignment\"].tittle), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"form-brief-edit-btn\",\n        onClick: function onClick() {\n          return _this3.goSubForm(subForm.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2323,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2327,\n          columnNumber: 13\n        }\n      })), subFormData[\"BeneficiaryAssignment\"].rows && subFormData[\"BeneficiaryAssignment\"].rows.map(function (data) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-brief-item\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2333,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"form-brief-item-title\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2334,\n            columnNumber: 19\n          }\n        }, data.beneficiariesName != \"\" ? data.beneficiariesName + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"form-brief-item-value\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2339,\n            columnNumber: 19\n          }\n        }, data.percent));\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var navlinks = [{\n        href: \"/\",\n        title: \"Home\"\n      }, {\n        href: \"/modules\",\n        title: \"Modules\"\n      }, {\n        href: \"/assets\",\n        title: \"Assets\"\n      }];\n      var SubForm = this.state.curSubForm;\n      var formpageClassName = \"form-page-container-wrap\";\n      if (this.state.isRightSideOpen) {\n        formpageClassName = \"form-page-container-wrap right-side--opend\";\n      } else {\n        formpageClassName = \"form-page-container-wrap right-side--collapsed\";\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: formpageClassName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2374,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--main-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2375,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"steps\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2376,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo-container align-items-top justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2377,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-asset\",\n        src: AssetPlanet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2378,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2380,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"process-row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2381,\n          columnNumber: 15\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var _this4$getTopNav = _this4.getTopNav(formStep),\n          disabled = _this4$getTopNav.disabled,\n          active = _this4$getTopNav.active;\n        var className = \"btn nav-items btn-circle\";\n        if (disabled) {\n          className = \"btn nav-items btn-circle disabled\";\n        } else if (active) {\n          className = \"btn nav-items btn-circle active\";\n        }\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"process-step\",\n          key: index,\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2392,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: className,\n          \"data-toggle\": \"tab\",\n          onClick: function onClick() {\n            return !disabled ? _this4.goSubForm(formStep.id) : null;\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2393,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            fontSize: 30,\n            color: '#006400'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2402,\n            columnNumber: 25\n          }\n        }, index + 1)), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"step-title\",\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2406,\n            columnNumber: 23\n          }\n        }, formStep.title));\n      })))), /*#__PURE__*/React.createElement(HiddenHook, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2413,\n          columnNumber: 11\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbID: this.state.dbID,\n        cbLoadDBData: this.loadDBData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2415,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2421,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-nav-history\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2422,\n          columnNumber: 13\n        }\n      }), !this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2438,\n          columnNumber: 38\n        }\n      }, \"Loading...\"), this.state.dbLoaded && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2440,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--left-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2441,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info-form-block\",\n        pose: this.state.formVisible ? \"visible\" : \"hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2443,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SubForm, {\n        subFormData: this.state.subFormData,\n        cbGoSubForm: this.goSubForm,\n        cbUpdateSubForm: this.updateSubForm,\n        formData: this.state.formData,\n        cbGetSubFormField: this.getSubFormField,\n        cbGoNext: this.goNext,\n        cbGoPrev: this.goPrev,\n        selectedTitle: this.getSubFormFieldValue(\"AssetAllocationSubForm\", \"assetsAllocation\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2447,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2468,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-side-collapse-icon\",\n        onClick: this.toggleRightSide,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2469,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fe-menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2473,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-page--right-side-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2475,\n          columnNumber: 11\n        }\n      }, this.state.formSteps.map(function (formStep, index) {\n        var formData = _this4.getRightSideFormData(formStep);\n        return formData.map(function (subForm, sindex) {\n          if (subForm.visible == false) {\n            return /*#__PURE__*/React.createElement(React.Fragment, {\n              key: sindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2480,\n                columnNumber: 26\n              }\n            });\n          }\n          var count = 0;\n          var go = false;\n          var fieldss = null;\n          var subFormData = subForm.data;\n          if (subFormData[\"rows\"]) {\n            fieldss = subFormData[\"rows\"];\n          } else if (subFormData[\"fields\"]) {\n            fieldss = subFormData[\"fields\"];\n          }\n          count = fieldss.length;\n          for (var i = 0; i < parseInt(count); i++) {\n            if (fieldss[i][\"value\"] != \"\") {\n              go = true;\n            }\n          }\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-block\",\n            key: sindex,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2501,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-top\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2502,\n              columnNumber: 21\n            }\n          }, go ? /*#__PURE__*/React.createElement(\"h4\", {\n            className: \"form-brief-title\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2504,\n              columnNumber: 25\n            }\n          }, subFormData.title) : null, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"form-brief-edit-btn\",\n            onClick: function onClick() {\n              return _this4.goSubForm(subForm.stepId);\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2509,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            type: \"edit\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2513,\n              columnNumber: 25\n            }\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-content\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2516,\n              columnNumber: 21\n            }\n          }, subFormData.fields && subFormData.fields.map(function (field, ffindex) {\n            if (field.value == \"\" || field.value == null) {\n              return /*#__PURE__*/React.createElement(React.Fragment, {\n                key: ffindex,\n                __self: _this4,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 2521,\n                  columnNumber: 31\n                }\n              });\n            }\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-item\",\n              key: ffindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2525,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(\"p\", {\n              className: \"form-brief-item-title\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2526,\n                columnNumber: 31\n              }\n            }, field.title != \"\" ? field.title + \":\" : null, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n              className: \"form-brief-item-value\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2529,\n                columnNumber: 31\n              }\n            }, field.hasOwnProperty(\"type\") && field[\"type\"] == \"currency\" && float2Currency(field.value), field.hasOwnProperty(\"type\") && field[\"type\"] == \"percent\" && field.value + \" %\", !field.hasOwnProperty(\"type\") && field.value));\n          }), subFormData.rows && subFormData.rows.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2542,\n              columnNumber: 25\n            }\n          }, subForm.id == \"ContributionSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2544,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2545,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2546,\n              columnNumber: 34\n            }\n          }, \"Cont. Or Dist.\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2547,\n              columnNumber: 33\n            }\n          }, \"Amount\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2548,\n              columnNumber: 33\n            }\n          }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2551,\n              columnNumber: 33\n            }\n          }, \"End Date\")), subFormData.rows.map(function (contribute, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2557,\n                columnNumber: 35\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2558,\n                columnNumber: 37\n              }\n            }, contribute[\"contributionOrDistribution\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2561,\n                columnNumber: 37\n              }\n            }, float2Currency(contribute[\"amount\"])), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2564,\n                columnNumber: 37\n              }\n            }, contribute[\"startDate\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2567,\n                columnNumber: 37\n              }\n            }, contribute[\"endDate\"]));\n          })), subForm.id == \"LiveStockSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2576,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2577,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--50\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2578,\n              columnNumber: 33\n            }\n          }, \"Animal Type\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--50\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2581,\n              columnNumber: 33\n            }\n          }, \"Count\")), subFormData.rows.map(function (livestock, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2585,\n                columnNumber: 35\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--50\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2586,\n                columnNumber: 37\n              }\n            }, livestock[\"animalType\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--50\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2589,\n                columnNumber: 37\n              }\n            }, livestock[\"count\"]));\n          })), subForm.id == \"StockSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2598,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2599,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2600,\n              columnNumber: 33\n            }\n          }, \"Stock Symbol\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2603,\n              columnNumber: 33\n            }\n          }, \"Quantity\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2606,\n              columnNumber: 33\n            }\n          }, \"Today's Value\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2609,\n              columnNumber: 33\n            }\n          }, \"Date\")), subFormData.rows.map(function (stock, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2613,\n                columnNumber: 35\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2614,\n                columnNumber: 37\n              }\n            }, stock[\"stockSymbol\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2617,\n                columnNumber: 37\n              }\n            }, stock[\"quantity\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2620,\n                columnNumber: 37\n              }\n            }, float2Currency(stock[\"todayValue\"])), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2623,\n                columnNumber: 37\n              }\n            }, stock[\"dateOfIndividual\"]));\n          })), subForm.id == \"InvestmentPropertyExpensesSubForm\" && /*#__PURE__*/React.createElement(React.Fragment, {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2633,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-row\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2634,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2635,\n              columnNumber: 33\n            }\n          }, \"Amount\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2636,\n              columnNumber: 33\n            }\n          }, \"Start Date\"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-brief-col--33\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 2639,\n              columnNumber: 33\n            }\n          }, \"End Date\")), subFormData.rows.map(function (propertyExpense, cindex) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-row\",\n              key: cindex,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2646,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2650,\n                columnNumber: 39\n              }\n            }, float2Currency(propertyExpense[\"amount\"])), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2655,\n                columnNumber: 39\n              }\n            }, propertyExpense[\"startDate\"]), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"form-brief-col--33\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 2658,\n                columnNumber: 39\n              }\n            }, propertyExpense[\"endDate\"]));\n          })))), subFormData[\"BeneficiaryAssignment\"] ? _this4.getBeneficiaryAssignmentData(subFormData, subForm) : null);\n        });\n      }))));\n    }\n  }]);\n  return AssetsNew;\n}(Component);\nexport default connect()(AssetsNew);","map":{"version":3,"names":["React","Component","connect","Link","Icon","Alert","ImageIcon","AssetPlanet","useMutation","useQuery","QL_ASSETS_ADD","QL_ASSETS_UPDATE","QL_ASSETS_GET","float2Currency","FormPagePose","SellingAssetCostsSubForm","CollectiblesSubForm","VCSubForm","StockSubForm","UserPortfolioSubForm","ContributionSubForm","AssetInformationSubForm","QuestionRMDAdditionalSubForm","QuestionShowFieldsAirplane","QuestionContributionDistributionSubForm","AssetAllocationSubForm","AssetPerformanceSubForm","LiveStockSubForm","PrimaryResidenceSubForm","TaxLiquiditySubForm","CommittmentSubForm","PropertySubForm","InvestmentPropertySubForm","InvestmentPropertyExpensesSubForm","InheritedIRASubForm","EndSubForm","fnMutationAssetsAdd","dataMutationAssetsAdd","fnMutationAssetsUpdate","dataMutationAssetsUpdate","prevPos","HiddenHook","initialFormData","data","formData","hasOwnProperty","push","id","FnCreateFormData","value","visible","stepId","name","accountType","owner","heldWhere","accountDigits","assetStatus","birthDate","deathDate","relationship","saleDate","totalLiabilities","totalNetSoldValue","commissionSale","rateReturnValue","otherTransactionCosts","actualValue","taxes","visibile","year","description","collectibleType","model","make","purchasePrice","appraised","insured","nickname","additionalCommittments","committmentDate","committmentAmount","monthlyRent","totalMonthlyExpenses","downPayment","investmentPropertyAddress","spPortfolio","realEstatePortfolio","bondsPortfolio","cashPortfolio","goldPortfolio","totalPercentage","monetaryValue","returnRate","dateValue","basisCost","costBasisDate","estimatedGains","taxability","assetLiquid","partialSaleAbility","distributionTaxabilityValue","withdrawalPenalty","distributionTaxability","agePenalty","LoadDBDataHook","props","dbID","variables","loading","error","console","log","cbLoadDBData","AssetsNew","toggleRightSide","e","preventDefault","setState","isRightSideOpen","state","dbLoaded","assetsID","match","params","dataID","curSubFormID","curSubForm","formVisible","subFormData","formData1","formSteps","icon","title","formStep2FormMap","StepAssetAllocationSubForm","StepAssetInformationSubForm","StepAccountTypeQuestions","StepQuestionContributionDistributionSubForm","StepSellingAssetCostsInformation","StepAdditionalAssetInformation","StepAssetPerformanceSubForm","StepTaxLiquiditySubForm","isEndForm","goSubForm","bind","updateSubForm","getSubFormData","getSubFormField","createQLVariable","getSubFormFieldValue","loadDBData","getRightSideFormData","getTopNav","goNext","goPrev","formID","fieldID","index","length","fields","findex","field","subFormID","varQL","asset","last4DigitsOfAccount","status","inheritedInformation","regularContributionsOrDistributions","parseInt","additionalQuestion","isSpouseSoleBeneficiary","isShowFields","deceasedIraOwnersBirthdate","deceasedIraOwnersDeathDate","ownersRelationshipToDeceased","contributionOrDistributions","assetAllocation","sellingAssetCost","dateOfSale","commisionOnSale","valueBasedOnRateOfReturn","actualValueAtSaleDate","assetPerformance","parseFloat","rateOfReturn","valueAsOfDate","collectible","describeCollectible","typeOfCollectible","livestocks","privatePlacementAndVc","additionalFutureCommittments","whenFutureCommittmentDate","futureCommittmentDollarAmount","realState","typeOfProperty","purchasePriceOfProperty","monthlyLease","downpayment","investmentPropertyExpenses","stockIndividualSubforms","userDefinedPortfolio","portfolioPercentageOfSAndP500","portfolioPercentageOfRealEstate","portfolioPercentageOfBonds","portfolioPercentageOfCash","portfolioPercentageOfGold","taxAndLiquidity","costBasis","taxibility","thisAssetIsLiquid","abilityForPartialSale","taxabilityOnDistribution","bEnd","bFound","instance","then","response","alert","history","fromState","pformData","fd","nextSubForm","setTimeout","formStep","disabled","active","assetsAllocation","isSpouseSole","regularContribution","isPrimaryResidence","curSubFormStepIndex","sindex","fromSubFormID","nextSubFormID","isShowfield","prevSubFormID","subForm","tittle","rows","map","beneficiariesName","percent","navlinks","href","SubForm","formpageClassName","className","fontSize","color","count","go","fieldss","i","ffindex","contribute","cindex","livestock","stock","propertyExpense","getBeneficiaryAssignmentData"],"sources":["/home/albatross/gitCode/shared/src/pages/modules/assets/AssetsNew.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Icon, Alert } from \"antd\";\nimport ImageIcon from \"assets/images/asset.png\";\nimport AssetPlanet from \"assets/images/asset-planet-logo.jpg\";\n\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport {\n  QL_ASSETS_ADD,\n  QL_ASSETS_UPDATE,\n  QL_ASSETS_GET,\n} from \"../../../constants/queries\";\nimport { float2Currency } from \"helpers/Utils\";\n\nimport { FormPagePose } from \"../../../components/Animations\";\n\nimport SellingAssetCostsSubForm from \"./subforms/SellingAssetCostsSubForm\";\nimport CollectiblesSubForm from \"./subforms/CollectiblesSubForm\";\nimport VCSubForm from \"./subforms/VCSubForm\";\nimport StockSubForm from \"./subforms/StockSubForm\";\nimport UserPortfolioSubForm from \"./subforms/UserPortfolioSubForm\";\nimport ContributionSubForm from \"./subforms/ContributionSubForm\";\nimport AssetInformationSubForm from \"./subforms/AssetInformationSubForm\";\nimport QuestionRMDAdditionalSubForm from \"./subforms/QuestionRMDAdditionalSubForm\";\nimport QuestionShowFieldsAirplane from \"./subforms/QuestionShowFieldsAirplane\";\nimport QuestionContributionDistributionSubForm from \"./subforms/QuestionContributionDistributionSubForm\";\nimport AssetAllocationSubForm from \"./subforms/AssetAllocationSubForm\";\nimport AssetPerformanceSubForm from \"./subforms/AssetPerformanceSubForm\";\nimport LiveStockSubForm from \"./subforms/LiveStockSubForm\";\nimport PrimaryResidenceSubForm from \"./subforms/PrimaryResidenceSubForm\";\nimport TaxLiquiditySubForm from \"./subforms/TaxLiquiditySubForm\";\nimport CommittmentSubForm from \"./subforms/CommittmentSubForm\";\nimport PropertySubForm from \"./subforms/PropertySubForm\";\nimport InvestmentPropertySubForm from \"./subforms/InvestmentPropertySubForm\";\nimport InvestmentPropertyExpensesSubForm from \"./subforms/InvestmentPropertyExpensesSubForm\";\nimport InheritedIRASubForm from \"./subforms/InheritedIRASubForm\";\nimport EndSubForm from \"./subforms/EndSubForm\";\n\nvar fnMutationAssetsAdd = null;\nvar dataMutationAssetsAdd = null;\n\nvar fnMutationAssetsUpdate = null;\nvar dataMutationAssetsUpdate = null;\nlet prevPos = 0;\n\nfunction HiddenHook() {\n  [fnMutationAssetsAdd, { dataMutationAssetsAdd }] = useMutation(QL_ASSETS_ADD);\n  [fnMutationAssetsUpdate, { dataMutationAssetsUpdate }] = useMutation(\n    QL_ASSETS_UPDATE\n  );\n\n  return <React.Fragment></React.Fragment>;\n}\n\nfunction initialFormData(data) {\n  let formData = [];\n\n  if (data.hasOwnProperty(\"asset\")) {\n    formData.push({\n      id: \"AssetAllocationSubForm\",\n      data: AssetAllocationSubForm.FnCreateFormData({\n        value:\n          data[\"asset\"][\"assetAllocation\"] != null\n            ? data[\"asset\"][\"assetAllocation\"][\"assetAllocation\"]\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepAssetAllocationSubForm\",\n    });\n\n    formData.push({\n      id: \"AssetInformationSubForm\",\n      data: AssetInformationSubForm.FnCreateFormData({\n        name: data[\"asset\"][\"name\"],\n        accountType: data[\"asset\"][\"accountType\"],\n        owner: data[\"asset\"][\"owner\"],\n        heldWhere: data[\"asset\"][\"heldWhere\"],\n        accountDigits: data[\"asset\"][\"last4DigitsOfAccount\"],\n        assetStatus: data[\"asset\"][\"status\"],\n      }),\n      visible: true,\n      stepId: \"StepAssetInformationSubForm\",\n    });\n\n    formData.push({\n      id: \"QuestionRMDAdditionalSubForm\",\n      data: QuestionRMDAdditionalSubForm.FnCreateFormData({\n        value:\n          data[\"asset\"][\"additionalQuestion\"] != null\n            ? data[\"asset\"][\"additionalQuestion\"][\"isSpouseSoleBeneficiary\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n\n    formData.push({\n      id: \"QuestionShowFieldsAirplane\",\n      data: QuestionShowFieldsAirplane.FnCreateFormData({\n        value:\n          data[\"asset\"][\"additionalQuestion\"] != null\n            ? data[\"asset\"][\"additionalQuestion\"][\"isShowFields\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepSellingAssetCostsInformation\",\n    });\n\n    formData.push({\n      id: \"InheritedIRASubForm\",\n      data: InheritedIRASubForm.FnCreateFormData({\n        birthDate:\n          data[\"asset\"][\"inheritedInformation\"] != null\n            ? data[\"asset\"][\"inheritedInformation\"][\n                \"deceasedIraOwnersBirthdate\"\n              ]\n            : \"\",\n        deathDate:\n          data[\"asset\"][\"inheritedInformation\"] != null\n            ? data[\"asset\"][\"inheritedInformation\"][\n                \"deceasedIraOwnersDeathDate\"\n              ]\n            : \"\",\n        relationship:\n          data[\"asset\"][\"inheritedInformation\"] != null\n            ? data[\"asset\"][\"inheritedInformation\"][\n                \"ownersRelationshipToDeceased\"\n              ]\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n\n    formData.push({\n      id: \"QuestionContributionDistributionSubForm\",\n      data: QuestionContributionDistributionSubForm.FnCreateFormData({\n        value:\n          data[\"asset\"][\"inheritedInformation\"] != null\n            ? data[\"asset\"][\"inheritedInformation\"][\n                \"regularContributionsOrDistributions\"\n              ]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\",\n    });\n\n    formData.push({\n      id: \"ContributionSubForm\",\n      data: ContributionSubForm.FnCreateFormData(\n        data[\"asset\"][\"contributionOrDistributions\"]\n      ),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\",\n    });\n\n    formData.push({\n      id: \"SellingAssetCostsSubForm\",\n      data: SellingAssetCostsSubForm.FnCreateFormData({\n        saleDate:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"dateOfSale\"]\n            : \"\",\n        totalLiabilities:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"totalLiabilities\"]\n            : \"\",\n        totalNetSoldValue:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"totalNetSoldValue\"]\n            : \"\",\n        commissionSale:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"commisionOnSale\"]\n            : \"\",\n        rateReturnValue:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"valueBasedOnRateOfReturn\"]\n            : \"\",\n        otherTransactionCosts:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"otherTransactionCosts\"]\n            : \"\",\n        actualValue:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"actualValueAtSaleDate\"]\n            : \"\",\n        taxes:\n          data[\"asset\"][\"sellingAssetCost\"] != null\n            ? data[\"asset\"][\"sellingAssetCost\"][\"taxes\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepSellingAssetCostsInformation\",\n    });\n\n    formData.push({\n      id: \"CollectiblesSubForm\",\n      data: CollectiblesSubForm.FnCreateFormData({\n        year:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"year\"]\n            : \"\",\n        description:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"describeCollectible\"]\n            : \"\",\n        // monthlyBudget: data['asset']['collectible'] != null ? data['asset']['collectible']['dollarAppliedToMonthlyBudget'] : '',\n        collectibleType:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"typeOfCollectible\"]\n            : \"\",\n        model:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"model\"]\n            : \"\",\n        make:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"make\"]\n            : \"\",\n        purchasePrice:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"purchasePrice\"]\n            : \"\",\n        appraised:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"appraised\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n        insured:\n          data[\"asset\"][\"collectible\"] != null\n            ? data[\"asset\"][\"collectible\"][\"insured\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"LiveStockSubForm\",\n      data: LiveStockSubForm.FnCreateFormData(data[\"asset\"][\"livestocks\"]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"VCSubForm\",\n      data: VCSubForm.FnCreateFormData({\n        nickname:\n          data[\"asset\"][\"privatePlacementAndVc\"] != null\n            ? data[\"asset\"][\"privatePlacementAndVc\"][\"nickname\"]\n            : \"\",\n        additionalCommittments:\n          data[\"asset\"][\"privatePlacementAndVc\"] != null\n            ? data[\"asset\"][\"privatePlacementAndVc\"][\n                \"additionalFutureCommittments\"\n              ]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"CommittmentSubForm\",\n      data: CommittmentSubForm.FnCreateFormData({\n        committmentDate:\n          data[\"asset\"][\"privatePlacementAndVc\"] != null &&\n          data[\"asset\"][\"privatePlacementAndVc\"][\"whenFutureCommittmentDate\"] !=\n            null\n            ? data[\"asset\"][\"privatePlacementAndVc\"][\n                \"whenFutureCommittmentDate\"\n              ]\n            : \"\",\n        committmentAmount:\n          data[\"asset\"][\"privatePlacementAndVc\"] != null\n            ? data[\"asset\"][\"privatePlacementAndVc\"][\n                \"futureCommittmentDollarAmount\"\n              ]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"PrimaryResidenceSubForm\",\n      data: PrimaryResidenceSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"PropertySubForm\",\n      data: PropertySubForm.FnCreateFormData({\n        value:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"typeOfProperty\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"InvestmentPropertySubForm\",\n      data: InvestmentPropertySubForm.FnCreateFormData({\n        purchasePrice:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"purchasePriceOfProperty\"]\n            : \"\",\n        monthlyRent:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"monthlyLease\"]\n            : \"\",\n        totalMonthlyExpenses:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"totalMonthlyExpenses\"]\n            : \"\",\n        downPayment:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"downpayment\"]\n            : \"\",\n        investmentPropertyAddress:\n          data[\"asset\"][\"realState\"] != null\n            ? data[\"asset\"][\"realState\"][\"investmentPropertyAddress\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"InvestmentPropertyExpensesSubForm\",\n      data: InvestmentPropertyExpensesSubForm.FnCreateFormData(\n        data[\"asset\"][\"investmentPropertyExpenses\"] != null\n          ? data[\"asset\"][\"investmentPropertyExpenses\"]\n          : []\n      ),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"StockSubForm\",\n      data: StockSubForm.FnCreateFormData(\n        data[\"asset\"][\"stockIndividualSubforms\"]\n      ),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"UserPortfolioSubForm\",\n      data: UserPortfolioSubForm.FnCreateFormData({\n        spPortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\n                \"portfolioPercentageOfSAndP500\"\n              ]\n            : \"\",\n        realEstatePortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\n                \"portfolioPercentageOfRealEstate\"\n              ]\n            : \"\",\n        bondsPortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\n                \"portfolioPercentageOfBonds\"\n              ]\n            : \"\",\n        cashPortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfCash\"]\n            : \"\",\n        goldPortfolio:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\"portfolioPercentageOfGold\"]\n            : \"\",\n        totalPercentage:\n          data[\"asset\"][\"userDefinedPortfolio\"] != null\n            ? data[\"asset\"][\"userDefinedPortfolio\"][\"totalPercentage\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"AssetPerformanceSubForm\",\n      data: AssetPerformanceSubForm.FnCreateFormData({\n        monetaryValue:\n          data[\"asset\"][\"assetPerformance\"] != null\n            ? data[\"asset\"][\"assetPerformance\"][\"monetaryValue\"]\n            : \"\",\n        returnRate:\n          data[\"asset\"][\"assetPerformance\"] != null\n            ? data[\"asset\"][\"assetPerformance\"][\"rateOfReturn\"]\n            : \"\",\n        dateValue:\n          data[\"asset\"][\"assetPerformance\"] != null\n            ? data[\"asset\"][\"assetPerformance\"][\"valueAsOfDate\"]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAssetPerformanceSubForm\",\n    });\n\n    formData.push({\n      id: \"TaxLiquiditySubForm\",\n      data: TaxLiquiditySubForm.FnCreateFormData({\n        basisCost:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"costBasis\"]\n            : \"\",\n        costBasisDate:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"costBasisDate\"]\n            : \"\",\n        estimatedGains:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"estimatedUnrealizedGains\"]\n            : \"\",\n        taxability:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"taxibility\"]\n              ? \"Taxable\"\n              : \"Tax Deferred\"\n            : \"\",\n        assetLiquid:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"thisAssetIsLiquid\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n        partialSaleAbility:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"abilityForPartialSale\"]\n              ? \"Yes\"\n              : \"No\"\n            : \"\",\n        distributionTaxabilityValue:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"taxabilityOfDistribution\"]\n            : \"\",\n        withdrawalPenalty:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"earlyWithdrawlPenalty\"]\n            : \"\",\n        distributionTaxability:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\"taxabilityOnDistribution\"]\n            : \"\",\n        agePenalty:\n          data[\"asset\"][\"taxAndLiquidity\"] != null\n            ? data[\"asset\"][\"taxAndLiquidity\"][\n                \"penaltyBasedOnAgeInClientsAndPlans\"\n              ]\n            : \"\",\n      }),\n      visibile: true,\n      stepId: \"StepTaxLiquiditySubForm\",\n    });\n  } else {\n    formData.push({\n      id: \"AssetAllocationSubForm\",\n      data: AssetAllocationSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAssetAllocationSubForm\",\n    });\n\n    formData.push({\n      id: \"AssetInformationSubForm\",\n      data: AssetInformationSubForm.FnCreateFormData({\n        name: \"\",\n        accountType: \"\",\n        owner: \"\",\n        heldWhere: \"\",\n        accountDigits: \"\",\n        assetStatus: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAssetInformationSubForm\",\n    });\n\n    formData.push({\n      id: \"QuestionRMDAdditionalSubForm\",\n      data: QuestionRMDAdditionalSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n    formData.push({\n      id: \"QuestionShowFieldsAirplane\",\n      data: QuestionShowFieldsAirplane.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n\n    formData.push({\n      id: \"InheritedIRASubForm\",\n      data: InheritedIRASubForm.FnCreateFormData({\n        birthDate: \"\",\n        deathDate: \"\",\n        relationship: \"\",\n      }),\n      visible: true,\n      stepId: \"StepAccountTypeQuestions\",\n    });\n\n    formData.push({\n      id: \"QuestionContributionDistributionSubForm\",\n      data: QuestionContributionDistributionSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\",\n    });\n\n    formData.push({\n      id: \"ContributionSubForm\",\n      data: ContributionSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepQuestionContributionDistributionSubForm\",\n    });\n\n    formData.push({\n      id: \"SellingAssetCostsSubForm\",\n      data: SellingAssetCostsSubForm.FnCreateFormData({\n        saleDate: \"\",\n        totalLiabilities: \"\",\n        totalNetSoldValue: \"\",\n        commissionSale: \"\",\n        rateReturnValue: \"\",\n        otherTransactionCosts: \"\",\n        actualValue: \"\",\n        taxes: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepSellingAssetCostsInformation\",\n    });\n\n    formData.push({\n      id: \"CollectiblesSubForm\",\n      data: CollectiblesSubForm.FnCreateFormData({\n        year: \"\",\n        description: \"\",\n        // monthlyBudget: '',\n        collectibleType: \"\",\n        model: \"\",\n        make: \"\",\n        purchasePrice: \"\",\n        appraised: \"\",\n        insured: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"LiveStockSubForm\",\n      data: LiveStockSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"VCSubForm\",\n      data: VCSubForm.FnCreateFormData({\n        nickname: \"\",\n        additionalCommittments: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"CommittmentSubForm\",\n      data: CommittmentSubForm.FnCreateFormData({\n        committmentDate: \"\",\n        committmentAmount: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"PrimaryResidenceSubForm\",\n      data: PrimaryResidenceSubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"PropertySubForm\",\n      data: PropertySubForm.FnCreateFormData({\n        value: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"InvestmentPropertySubForm\",\n      data: InvestmentPropertySubForm.FnCreateFormData({\n        purchasePrice: \"\",\n        monthlyRent: \"\",\n        totalMonthlyExpenses: \"\",\n        downPayment: \"\",\n        investmentPropertyAddress: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"InvestmentPropertyExpensesSubForm\",\n      data: InvestmentPropertyExpensesSubForm.FnCreateFormData([]),\n      visible: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"StockSubForm\",\n      data: StockSubForm.FnCreateFormData([]),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"UserPortfolioSubForm\",\n      data: UserPortfolioSubForm.FnCreateFormData({\n        spPortfolio: \"\",\n        realEstatePortfolio: \"\",\n        bondsPortfolio: \"\",\n        cashPortfolio: \"\",\n        goldPortfolio: \"\",\n        totalPercentage: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAdditionalAssetInformation\",\n    });\n\n    formData.push({\n      id: \"AssetPerformanceSubForm\",\n      data: AssetPerformanceSubForm.FnCreateFormData({\n        monetaryValue: \"\",\n        returnRate: \"\",\n        dateValue: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepAssetPerformanceSubForm\",\n    });\n\n    formData.push({\n      id: \"TaxLiquiditySubForm\",\n      data: TaxLiquiditySubForm.FnCreateFormData({\n        basisCost: \"\",\n        costBasisDate: \"\",\n        estimatedGains: \"\",\n        taxability: \"\",\n        assetLiquid: \"\",\n        partialSaleAbility: \"\",\n        distributionTaxabilityValue: \"\",\n        withdrawalPenalty: \"\",\n        distributionTaxability: \"\",\n        agePenalty: \"\",\n      }),\n      visibile: true,\n      stepId: \"StepTaxLiquiditySubForm\",\n    });\n  }\n\n  return formData;\n}\n\nfunction LoadDBDataHook(props) {\n  if (props.dbID != null && props.dbID != \"\") {\n    const { data, loading, error } = useQuery(QL_ASSETS_GET, {\n      variables: { id: props.dbID },\n    });\n    if (data) {\n      console.log(\"call..\");\n      props.cbLoadDBData(initialFormData(data));\n    }\n  }\n\n  return <React.Fragment></React.Fragment>;\n}\n\nclass AssetsNew extends Component {\n  constructor(props) {\n    super(props);\n\n    let dbID = null;\n    let dbLoaded = true;\n\n    const { assetsID } = this.props.match.params;\n\n    if (assetsID) {\n      dbID = assetsID;\n      dbLoaded = false;\n    }\n\n    let formData = initialFormData({});\n\n    this.state = {\n      dataID: dbID,\n      curSubFormID: \"AssetAllocationSubForm\",\n      curSubForm: AssetAllocationSubForm,\n      formVisible: false,\n      subFormData: {},\n      formData1: [\n        // {\n        //     id: 'assetsInformation',\n        //     data: {\n        //         title: '',\n        //         fields: [\n        //             {\n        //                 id: '' ,\n        //                 title: '',\n        //                 value: ''\n        //              }\n        //         ]\n        //     }\n        // }\n      ],\n      formData: formData,\n      isRightSideOpen: true,\n      formSteps: [\n        {\n          id: \"StepAssetAllocationSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Asset Allocation\",\n        },\n        {\n          id: \"StepAssetInformationSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Asset Information\",\n        },\n        {\n          id: \"StepAccountTypeQuestions\",\n          icon: \"icon_ex.png\",\n          title: \"Qualified Account Type Questions\",\n        },\n        {\n          id: \"StepQuestionContributionDistributionSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Contributions or Distributions\",\n        },\n        {\n          id: \"StepAdditionalAssetInformation\",\n          icon: \"icon_ex.png\",\n          title: \"Additional Asset Information\",\n        },\n        {\n          id: \"StepSellingAssetCostsInformation\",\n          icon: \"icon_ex.png\",\n          title: \"Selling Asset Costs\",\n        },\n        {\n          id: \"StepAssetPerformanceSubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Asset Performance\",\n        },\n        {\n          id: \"StepTaxLiquiditySubForm\",\n          icon: \"icon_ex.png\",\n          title: \"Tax and Liquidity\",\n        },\n      ],\n      dbLoaded: dbLoaded,\n      dbID: dbID,\n      formStep2FormMap: {\n        // \"stepid\": ['form id', 'formid', 'formid']\n        StepAssetAllocationSubForm: [\"AssetAllocationSubForm\"],\n        StepAssetInformationSubForm: [\"AssetInformationSubForm\"],\n        StepAccountTypeQuestions: [\n          \"QuestionRMDAdditionalSubForm\",\n          \"InheritedIRASubForm\",\n          \"QuestionShowFieldsAirplane\",\n        ],\n        StepQuestionContributionDistributionSubForm: [\n          \"QuestionContributionDistributionSubForm\",\n          \"ContributionSubForm\",\n        ],\n        StepSellingAssetCostsInformation: [\n          \"SellingAssetCostsSubForm\",\n          \"QuestionShowFieldsAirplane\",\n        ],\n        StepAdditionalAssetInformation: [\n          \"CollectiblesSubForm\",\n          \"LiveStockSubForm\",\n          \"VCSubForm\",\n          \"CommittmentSubForm\",\n          \"PrimaryResidenceSubForm\",\n          \"PropertySubForm\",\n          \"InvestmentPropertySubForm\",\n          \"InvestmentPropertyExpensesSubForm\",\n          \"StockSubForm\",\n          \"UserPortfolioSubForm\",\n        ],\n        StepAssetPerformanceSubForm: [\"AssetPerformanceSubForm\"],\n        StepTaxLiquiditySubForm: [\"TaxLiquiditySubForm\"],\n      },\n      isEndForm: false\n    };\n\n    this.goSubForm = this.goSubForm.bind(this);\n    this.updateSubForm = this.updateSubForm.bind(this);\n    this.getSubFormData = this.getSubFormData.bind(this);\n    this.getSubFormField = this.getSubFormField.bind(this);\n\n    this.createQLVariable = this.createQLVariable.bind(this);\n    this.getSubFormFieldValue = this.getSubFormFieldValue.bind(this);\n\n    this.toggleRightSide = this.toggleRightSide.bind(this);\n\n    this.loadDBData = this.loadDBData.bind(this);\n\n    this.getRightSideFormData = this.getRightSideFormData.bind(this);\n    this.getTopNav = this.getTopNav.bind(this);\n\n    this.goNext = this.goNext.bind(this);\n    this.goPrev = this.goPrev.bind(this);\n  }\n\n  componentDidMount() {\n    this.goSubForm(this.state.formSteps[0][\"id\"]);\n    // this.goSubForm(\"TaxLiquiditySubForm\");\n  }\n\n  getSubFormField(formID, fieldID) {\n    let formData = this.state.formData;\n\n    for (var index = 0; index < formData.length; index++) {\n      if (formData[index][\"id\"] == formID) {\n        let data = formData[index][\"data\"];\n        let fields = data[\"fields\"];\n        for (var findex = 0; findex < fields.length; findex++) {\n          if (fields[findex][\"id\"] == fieldID) {\n            return fields[findex];\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n\n  getSubFormFieldValue(formID, fieldID) {\n    let field = this.getSubFormField(formID, fieldID);\n\n    if (field == null) {\n      return \"\";\n    } else {\n      return field.value;\n    }\n  }\n\n  createQLVariable(subFormID, subFormData) {\n    let varQL = null;\n\n    switch (subFormID) {\n      case \"AssetInformationSubForm\":\n        varQL = {\n          asset: {\n            name: this.getSubFormFieldValue(subFormID, \"name\"),\n            accountType: this.getSubFormFieldValue(subFormID, \"accountType\"),\n            owner: this.getSubFormFieldValue(subFormID, \"owner\"),\n            heldWhere: this.getSubFormFieldValue(subFormID, \"heldWhere\"),\n            last4DigitsOfAccount: this.getSubFormFieldValue(\n              subFormID,\n              \"accountDigits\"\n            ),\n            status: this.getSubFormFieldValue(subFormID, \"assetStatus\"),\n          },\n        };\n        break;\n      case \"QuestionContributionDistributionSubForm\":\n        varQL = {\n          inheritedInformation: {\n            regularContributionsOrDistributions:\n              parseInt(\n                this.getSubFormFieldValue(subFormID, \"regularContribution\")\n              ) == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"QuestionRMDAdditionalSubForm\":\n        varQL = {\n          additionalQuestion: {\n            isSpouseSoleBeneficiary:\n              this.getSubFormFieldValue(subFormID, \"isSpouseSole\") == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"QuestionShowFieldsAirplane\":\n        varQL = {\n          additionalQuestion: {\n            isShowFields:\n              this.getSubFormFieldValue(subFormID, \"isShowfield\") == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n\n      case \"InheritedIRASubForm\":\n        varQL = {\n          inheritedInformation: {\n            deceasedIraOwnersBirthdate: this.getSubFormFieldValue(\n              subFormID,\n              \"birthDate\"\n            ),\n            deceasedIraOwnersDeathDate: this.getSubFormFieldValue(\n              subFormID,\n              \"deathDate\"\n            ),\n            ownersRelationshipToDeceased: this.getSubFormFieldValue(\n              subFormID,\n              \"relationship\"\n            ),\n          },\n        };\n        break;\n      case \"ContributionSubForm\":\n        varQL = {\n          contributionOrDistributions: subFormData[\"rows\"],\n        };\n        break;\n      case \"AssetAllocationSubForm\":\n        varQL = {\n          assetAllocation: {\n            assetAllocation: this.getSubFormFieldValue(\n              subFormID,\n              \"assetsAllocation\"\n            ),\n          },\n        };\n        break;\n      case \"SellingAssetCostsSubForm\":\n        varQL = {\n          sellingAssetCost: {\n            dateOfSale: this.getSubFormFieldValue(subFormID, \"saleDate\"),\n            totalLiabilities:\n              this.getSubFormFieldValue(subFormID, \"totalLiabilities\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"totalLiabilities\")\n                  )\n                : 0,\n            totalNetSoldValue:\n              this.getSubFormFieldValue(subFormID, \"totalNetSoldValue\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"totalNetSoldValue\")\n                  )\n                : 0,\n            commisionOnSale:\n              this.getSubFormFieldValue(subFormID, \"commissionSale\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"commissionSale\")\n                  )\n                : 0,\n            valueBasedOnRateOfReturn:\n              this.getSubFormFieldValue(subFormID, \"rateReturnValue\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"rateReturnValue\")\n                  )\n                : 0,\n            otherTransactionCosts:\n              this.getSubFormFieldValue(subFormID, \"otherTransactionCosts\") !=\n              \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(\n                      subFormID,\n                      \"otherTransactionCosts\"\n                    )\n                  )\n                : 0,\n            actualValueAtSaleDate:\n              this.getSubFormFieldValue(subFormID, \"actualValue\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"actualValue\"))\n                : 0,\n            taxes:\n              this.getSubFormFieldValue(subFormID, \"taxes\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"taxes\"))\n                : 0,\n          },\n        };\n        break;\n      case \"AssetPerformanceSubForm\":\n        varQL = {\n          assetPerformance: {\n            monetaryValue: parseFloat(\n              this.getSubFormFieldValue(subFormID, \"monetaryValue\")\n            ),\n            rateOfReturn: this.getSubFormFieldValue(subFormID, \"returnRate\"),\n            valueAsOfDate: this.getSubFormFieldValue(subFormID, \"dateValue\"),\n          },\n        };\n        break;\n      case \"CollectiblesSubForm\":\n        varQL = {\n          collectible: {\n            year: this.getSubFormFieldValue(subFormID, \"year\"),\n            describeCollectible: this.getSubFormFieldValue(\n              subFormID,\n              \"description\"\n            ),\n            // \"dollarAppliedToMonthlyBudget\": this.getSubFormFieldValue(subFormID, 'monthlyBudget') != '' ? parseInt(this.getSubFormFieldValue(subFormID, 'monthlyBudget')) : 0,\n            typeOfCollectible: this.getSubFormFieldValue(\n              subFormID,\n              \"collectibleType\"\n            ),\n            model: this.getSubFormFieldValue(subFormID, \"model\"),\n            make: this.getSubFormFieldValue(subFormID, \"make\"),\n            purchasePrice:\n              this.getSubFormFieldValue(subFormID, \"purchasePrice\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"purchasePrice\")\n                  )\n                : 0,\n            appraised:\n              this.getSubFormFieldValue(subFormID, \"appraised\") == \"Yes\"\n                ? true\n                : false,\n            insured:\n              this.getSubFormFieldValue(subFormID, \"insured\") == \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"LiveStockSubForm\":\n        varQL = {\n          livestocks: subFormData[\"rows\"],\n        };\n        break;\n      case \"VCSubForm\":\n        varQL = {\n          privatePlacementAndVc: {\n            nickname: this.getSubFormFieldValue(subFormID, \"nickname\"),\n            additionalFutureCommittments:\n              this.getSubFormFieldValue(subFormID, \"additionalCommittments\") ==\n              \"Yes\"\n                ? true\n                : false,\n          },\n        };\n        break;\n      case \"CommittmentSubForm\":\n        varQL = {\n          privatePlacementAndVc: {\n            whenFutureCommittmentDate: this.getSubFormFieldValue(\n              subFormID,\n              \"committmentDate\"\n            ),\n            futureCommittmentDollarAmount:\n              this.getSubFormFieldValue(subFormID, \"committmentAmount\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"committmentAmount\")\n                  )\n                : 0,\n          },\n        };\n        break;\n      case \"PrimaryResidenceSubForm\":\n        break;\n      case \"PropertySubForm\":\n        varQL = {\n          realState: {\n            typeOfProperty: this.getSubFormFieldValue(\n              subFormID,\n              \"propertyType\"\n            ),\n          },\n        };\n        break;\n      case \"InvestmentPropertySubForm\":\n        varQL = {\n          realState: {\n            purchasePriceOfProperty:\n              this.getSubFormFieldValue(subFormID, \"purchasePrice\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"purchasePrice\")\n                  )\n                : 0,\n            monthlyLease:\n              this.getSubFormFieldValue(subFormID, \"monthlyRent\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"monthlyRent\"))\n                : 0,\n            totalMonthlyExpenses:\n              this.getSubFormFieldValue(subFormID, \"totalMonthlyExpenses\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"totalMonthlyExpenses\")\n                  )\n                : 0,\n            downpayment:\n              this.getSubFormFieldValue(subFormID, \"downPayment\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"downPayment\"))\n                : 0,\n            investmentPropertyAddress: this.getSubFormFieldValue(\n              subFormID,\n              \"investmentPropertyAddress\"\n            ),\n          },\n        };\n        break;\n      case \"InvestmentPropertyExpensesSubForm\":\n        varQL = {\n          investmentPropertyExpenses: subFormData[\"rows\"],\n        };\n        break;\n      case \"StockSubForm\":\n        varQL = {\n          stockIndividualSubforms: subFormData[\"rows\"],\n        };\n        break;\n      case \"UserPortfolioSubForm\":\n        varQL = {\n          userDefinedPortfolio: {\n            portfolioPercentageOfSAndP500:\n              this.getSubFormFieldValue(subFormID, \"spPortfolio\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"spPortfolio\"))\n                : 0,\n            portfolioPercentageOfRealEstate:\n              this.getSubFormFieldValue(subFormID, \"realEstatePortfolio\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"realEstatePortfolio\")\n                  )\n                : 0,\n            portfolioPercentageOfBonds:\n              this.getSubFormFieldValue(subFormID, \"bondsPortfolio\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"bondsPortfolio\")\n                  )\n                : 0,\n            portfolioPercentageOfCash:\n              this.getSubFormFieldValue(subFormID, \"cashPortfolio\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"cashPortfolio\")\n                  )\n                : 0,\n            portfolioPercentageOfGold:\n              this.getSubFormFieldValue(subFormID, \"goldPortfolio\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"goldPortfolio\")\n                  )\n                : 0,\n            totalPercentage:\n              this.getSubFormFieldValue(subFormID, \"totalPercentage\") != \"\"\n                ? parseInt(\n                    this.getSubFormFieldValue(subFormID, \"totalPercentage\")\n                  )\n                : 0,\n          },\n        };\n        break;\n      case \"TaxLiquiditySubForm\":\n        varQL = {\n          taxAndLiquidity: {\n            costBasis:\n              this.getSubFormFieldValue(subFormID, \"basisCost\") != \"\"\n                ? parseInt(this.getSubFormFieldValue(subFormID, \"basisCost\"))\n                : 0,\n            costBasisDate: this.getSubFormFieldValue(\n              subFormID,\n              \"costBasisDate\"\n            ),\n            taxibility:\n              this.getSubFormFieldValue(subFormID, \"taxability\") == \"Taxable\"\n                ? true\n                : false,\n            // \"rmdEligible\":\n            thisAssetIsLiquid:\n              this.getSubFormFieldValue(subFormID, \"assetLiquid\") == \"Yes\"\n                ? true\n                : false,\n            abilityForPartialSale:\n              this.getSubFormFieldValue(subFormID, \"partialSaleAbility\") ==\n              \"Yes\"\n                ? true\n                : false,\n            taxabilityOnDistribution: this.getSubFormFieldValue(\n              subFormID,\n              \"distributionTaxability\"\n            ),\n          },\n        };\n        break;\n      case \"EndSubForm\":\n    }\n\n    return varQL;\n  }\n\n  updateSubForm(subFormID, subFormData, visible = true, bEnd = false) {\n    console.log(\"subFormID\", subFormID);\n    let formData = this.state.formData;\n    var bFound = false;\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex][\"id\"] == subFormID) {\n        formData[findex][\"data\"] = subFormData;\n        bFound = true;\n      }\n    }\n\n    if (!bFound) {\n      formData.push({\n        id: subFormID,\n        data: subFormData,\n        visible: visible,\n      });\n    }\n\n    console.log(\"updateSubForm>>>\", formData);\n\n    let varQL = this.createQLVariable(subFormID, subFormData);\n\n    console.log(\"varQL:\", varQL, \", dataID:\", this.state.dataID);\n    // varQL = null;\n    var instance = this;\n    if (varQL != null) {\n      if (this.state.dataID == null) {\n        fnMutationAssetsAdd({ variables: { data: varQL } }).then((response) => {\n          instance.setState({\n            dataID: response[\"data\"][\"createAsset\"][\"id\"],\n          });\n        });\n      } else {\n        fnMutationAssetsUpdate({\n          variables: { id: this.state.dataID, data: varQL },\n        }).then((response) => {\n          if (bEnd) {\n            alert(\"Updated Successfully\");\n            instance.props.history.push(\"/assets\");\n          }\n        });\n      }\n    }\n\n    this.setState({\n      formData: formData,\n    });\n  }\n\n  getSubFormData(subFormID, fromState = true, pformData) {\n    let formData;\n    if (fromState) {\n      formData = this.state.formData;\n    } else {\n      formData = pformData;\n    }\n\n    for (var findex = 0; findex < formData.length; findex++) {\n      if (formData[findex][\"id\"] == subFormID) {\n        return formData[findex][\"data\"];\n      }\n    }\n\n    return {};\n  }\n\n  goSubForm(subFormID) {\n    this.setState({\n      formVisible: false,\n    });\n\n    if(subFormID === 'StepAssetAllocationSubForm')  {\n      let fd = initialFormData({});\n      this.setState({formData: fd, isEndForm: false})\n    }\n\n    let nextSubForm = AssetInformationSubForm;\n\n    switch (subFormID) {\n      case \"AssetInformationSubForm\":\n        nextSubForm = AssetInformationSubForm;\n        this.setState({isEndForm: false})\n        break;\n        case \"StepAssetInformationSubForm\":\n        nextSubForm = AssetInformationSubForm;\n        subFormID = \"AssetInformationSubForm\";\n        break;\n      case \"QuestionContributionDistributionSubForm\":\n        nextSubForm = QuestionContributionDistributionSubForm;\n        break;\n      case \"StepQuestionContributionDistributionSubForm\":\n        nextSubForm = QuestionContributionDistributionSubForm;\n        subFormID = \"QuestionContributionDistributionSubForm\";\n        break;\n      case \"QuestionRMDAdditionalSubForm\":\n        nextSubForm = QuestionRMDAdditionalSubForm;\n        break;\n      case \"QuestionShowFieldsAirplane\":\n        nextSubForm = QuestionShowFieldsAirplane;\n        break;\n      case \"InheritedIRASubForm\":\n        nextSubForm = InheritedIRASubForm;\n        break;\n      case \"ContributionSubForm\":\n        nextSubForm = ContributionSubForm;\n        break;\n      case \"AssetAllocationSubForm\":\n        nextSubForm = AssetAllocationSubForm;\n        break;\n      case \"StepAssetAllocationSubForm\":\n        nextSubForm = AssetAllocationSubForm;\n        subFormID = \"AssetAllocationSubForm\";\n        break;\n      case \"SellingAssetCostsSubForm\":\n        nextSubForm = SellingAssetCostsSubForm;\n        break;\n      case \"AssetPerformanceSubForm\":\n        nextSubForm = AssetPerformanceSubForm;\n        break;\n      case \"StepAssetPerformanceSubForm\":\n        nextSubForm = AssetPerformanceSubForm;\n        subFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"CollectiblesSubForm\":\n        nextSubForm = CollectiblesSubForm;\n        break;\n      case \"LiveStockSubForm\":\n        nextSubForm = LiveStockSubForm;\n        break;\n      case \"VCSubForm\":\n        nextSubForm = VCSubForm;\n        break;\n      case \"CommittmentSubForm\":\n        nextSubForm = CommittmentSubForm;\n        break;\n      case \"PrimaryResidenceSubForm\":\n        nextSubForm = PrimaryResidenceSubForm;\n        break;\n      case \"PropertySubForm\":\n        nextSubForm = PropertySubForm;\n        break;\n      case \"InvestmentPropertySubForm\":\n        nextSubForm = InvestmentPropertySubForm;\n        break;\n      case \"InvestmentPropertyExpensesSubForm\":\n        nextSubForm = InvestmentPropertyExpensesSubForm;\n        break;\n      case \"StockSubForm\":\n        nextSubForm = StockSubForm;\n        break;\n      case \"UserPortfolioSubForm\":\n        nextSubForm = UserPortfolioSubForm;\n        break;\n      case \"TaxLiquiditySubForm\":\n        nextSubForm = TaxLiquiditySubForm;\n        break;\n      case \"StepTaxLiquiditySubForm\":\n        nextSubForm = TaxLiquiditySubForm;\n        subFormID = \"TaxLiquiditySubForm\";\n        break;\n      case \"EndSubForm\":\n        nextSubForm = EndSubForm;\n        this.setState({isEndForm: true})\n        break;\n      case \"StepAccountTypeQuestions\":\n        switch (\n          this.getSubFormFieldValue(\"AssetInformationSubForm\", \"accountType\")\n        ) {\n          case \"529\":\n          case \"Custodial\":\n          case \"Coverdell Education\":\n          case \"Individual\":\n          case \"Health Savings Account\":\n          case \"Joint - Tenants In Common\":\n          case \"Joint\":\n          case \"Roth\":\n          case \"Trust\":\n            nextSubForm = QuestionContributionDistributionSubForm;\n            subFormID = \"QuestionContributionDistributionSubForm\";\n            break;\n          default:\n            nextSubForm = QuestionRMDAdditionalSubForm;\n            subFormID = \"QuestionRMDAdditionalSubForm\";\n        }\n        break;\n\n      case \"StepAdditionalAssetInformation\":\n        switch (\n          this.getSubFormFieldValue(\n            \"AssetAllocationSubForm\",\n            \"assetsAllocation\"\n          )\n        ) {\n          case \"Airplane\":\n          case \"Auto - non-collectible\":\n          case \"Boat\":\n          case \"General Household\":\n          case \"Motorcycles\":\n            nextSubForm = QuestionShowFieldsAirplane;\n            subFormID = \"QuestionShowFieldsAirplane\";\n            break;\n          case \"Indexes, ETF's and Mutual Funds\":\n          case \"Bonds - Int  Long Term\":\n          case \"Business Interest\":\n          case \"Cash/CD's T-Bills\":\n          case \"Club Membership\":\n            nextSubForm = SellingAssetCostsSubForm;\n            subFormID = \"SellingAssetCostsSubForm\";\n            break;\n          case \"Collectibles\":\n            nextSubForm = CollectiblesSubForm;\n            subFormID = \"CollectiblesSubForm\";\n            break;\n          case \"Livestock\":\n            nextSubForm = LiveStockSubForm;\n            subFormID = \"LiveStockSubForm\";\n            break;\n          case \"Private Placement & VC\":\n            nextSubForm = VCSubForm;\n            subFormID = \"VCSubForm\";\n            break;\n          case \"Real Estate\":\n            nextSubForm = PrimaryResidenceSubForm;\n            subFormID = \"PrimaryResidenceSubForm\";\n            break;\n          case \"Stocks - Individual\":\n            nextSubForm = StockSubForm;\n            subFormID = \"StockSubForm\";\n            break;\n          case \"User Defined Portfolio Allocation\":\n            nextSubForm = UserPortfolioSubForm;\n            subFormID = \"UserPortfolioSubForm\";\n            break;\n          default:\n            nextSubForm = AssetAllocationSubForm;\n            subFormID = \"AssetAllocationSubForm\";\n        }\n        break;\n\n      case \"StepSellingAssetCostsInformation\":\n        switch (\n          this.getSubFormFieldValue(\n            \"AssetAllocationSubForm\",\n            \"assetsAllocation\"\n          )\n        ) {\n          case \"Airplane\":\n          case \"Auto - non-collectible\":\n          case \"Boat\":\n          case \"Motorcycles\":\n            nextSubForm = QuestionShowFieldsAirplane;\n            subFormID = \"QuestionShowFieldsAirplane\";\n            break;\n          // case \"Indexes, ETF's and Mutual Funds\":\n          // case \"Bonds - Int \\ Long Term\":\n          // case \"Business Interest\":\n          // case \"Cash/CD's T-Bills\":\n          // case \"Club Membership\":\n          //     nextSubForm = SellingAssetCostsSubForm;\n          //     subFormID = \"SellingAssetCostsSubForm\";\n          //     break;\n          // case \"Collectibles\":\n          //     nextSubForm = CollectiblesSubForm;\n          //     subFormID = \"CollectiblesSubForm\";\n          //     break;\n          // case \"Livestock\":\n          //     nextSubForm = LiveStockSubForm;\n          //     subFormID = \"LiveStockSubForm\";\n          //     break;\n          // case \"Private Placement & VC\":\n          //     nextSubForm = VCSubForm;\n          //     subFormID = \"VCSubForm\";\n          //     break;\n          // case \"Real Estate\":\n          //     nextSubForm = PrimaryResidenceSubForm;\n          //     subFormID = \"PrimaryResidenceSubForm\";\n          //     break;\n          // case \"Stocks - Individual\":\n          //     nextSubForm = StockSubForm;\n          //     subFormID = \"StockSubForm\";\n          //     break;\n          // case \"User Defined Portfolio Allocation\":\n          //     nextSubForm = UserPortfolioSubForm;\n          //     subFormID = \"UserPortfolioSubForm\";\n          //     break;\n          default:\n            nextSubForm = AssetAllocationSubForm;\n            subFormID = \"AssetAllocationSubForm\";\n        }\n        break;\n    }\n\n    let subFormData = this.getSubFormData(subFormID);\n\n    setTimeout(() => {\n      this.setState({\n        formVisible: true,\n        curSubFormID: subFormID,\n        curSubForm: nextSubForm,\n        subFormData: subFormData,\n      });\n    }, 100);\n  }\n\n  toggleRightSide = (e) => {\n    e.preventDefault();\n    this.setState({ isRightSideOpen: !this.state.isRightSideOpen });\n  };\n\n  loadDBData(formData) {\n    console.log(\"loadDBData formData:\", formData);\n\n    var instance = this;\n    setTimeout(function () {\n      instance.setState({\n        formVisible: true,\n        dbLoaded: true,\n        formData: formData,\n        subFormData: instance.getSubFormData(\n          instance.state.curSubFormID,\n          false,\n          formData\n        ),\n      });\n    }, 100);\n  }\n\n  getTopNav(formStep) {\n    let disabled = false;\n    let active = false;\n\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n    let isSpouseSole = this.getSubFormFieldValue(\n      \"QuestionRMDAdditionalSubForm\",\n      \"isSpouseSole\"\n    );\n    let accountType = this.getSubFormFieldValue(\n      \"AssetInformationSubForm\",\n      \"accountType\"\n    );\n    let regularContribution = this.getSubFormFieldValue(\n      \"QuestionContributionDistributionSubForm\",\n      \"regularContribution\"\n    );\n    let isPrimaryResidence = this.getSubFormFieldValue(\n      \"PrimaryResidenceSubForm\",\n      \"isPrimaryResidence\"\n    );\n    // formStep2FormMap\n    // this.state.curSubFormID\n    //getting stepid from subform\n    let curSubFormStepIndex = -1;\n    for (var sindex = 0; sindex < this.state.formSteps.length; sindex++) {\n      if (this.state.curSubFormID == \"EndSubForm\") {\n        if (this.state.formSteps[sindex].id == formStep.id) {\n          curSubFormStepIndex = sindex;\n          break;\n        }\n      }\n      for (\n        var findex = 0;\n        findex <\n        this.state.formStep2FormMap[this.state.formSteps[sindex].id].length;\n        findex++\n      ) {\n        if (\n          this.state.formStep2FormMap[this.state.formSteps[sindex].id][\n            findex\n          ] == this.state.curSubFormID\n        ) {\n          curSubFormStepIndex = sindex;\n          break;\n        }\n      }\n    }\n\n    if(this.state.isEndForm && formStep.id !== 'StepAssetAllocationSubForm'){\n      return {\n        disabled: true,\n        active: false,\n      };\n    }\n\n    if (assetsAllocation != null && assetsAllocation != \"\") {\n      switch (formStep.id) {\n        case \"StepAssetAllocationSubForm\":\n          if(curSubFormStepIndex === 0) {\n            if(this.state.isEndForm) {\n              disabled = false;\n              active = true;\n            } else {\n              disabled = true;\n              active = false;\n              assetsAllocation = '';\n            }\n          }\n          if (curSubFormStepIndex >= 0) {\n            active = true;\n          }\n          break;\n\n        case \"StepAssetInformationSubForm\":\n          if (curSubFormStepIndex >= 1) {\n            active = true;\n          }\n          break;\n        case \"StepSellingAssetCostsInformation\":\n          if (curSubFormStepIndex >= 5) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            // case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n            // case \"Cash/CD's T-Bills\":\n            // case \"Bonds - Int  Long Term\":\n            // case \"Indexes, ETF's and Mutual Funds\":\n            case \"Stocks - Individual\":\n            // case \"Trust Deeds\":\n            case \"User Defined Portfolio Allocation\":\n              disabled = true;\n          }\n\n          break;\n\n        case \"StepAdditionalAssetInformation\":\n          if (curSubFormStepIndex >= 4) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"Auto - non-collectible\":\n            case \"Bonds - Int  Long Term\":\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"General Household\":\n            case \"Cash/CD's T-Bills\":\n            case \"Trust Deeds\":\n              disabled = true;\n          }\n          break;\n\n        case \"StepAccountTypeQuestions\":\n          if (curSubFormStepIndex >= 2) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n            case \"Cash/CD's T-Bills\":\n              disabled = true;\n          }\n          break;\n        case \"StepQuestionContributionDistributionSubForm\":\n          if (curSubFormStepIndex >= 3) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            case \"Airplane\":\n            case \"Boat\":\n            case \"Motorcycles\":\n            case \"General Household\":\n            case \"Club Membership\":\n            case \"Real Estate\":\n            case \"Auto - non-collectible\":\n            case \"Business Interest\":\n            case \"Livestock\":\n            case \"Collectibles\":\n            case \"Private Placement & VC\":\n              disabled = true;\n          }\n          break;\n        case \"StepAdditionalAssetInformation\":\n          if (curSubFormStepIndex >= 4) {\n            active = true;\n          }\n          switch (assetsAllocation) {\n            case \"Indexes, ETF's and Mutual Funds\":\n            case \"Bonds - Int  Long Term\":\n            // case \"Club Membership\":\n            case \"Business Interest\":\n            case \"Cash/CD's T-Bills\":\n              disabled = true;\n          }\n          break;\n        case \"StepAssetPerformanceSubForm\":\n          if (curSubFormStepIndex >= 6) {\n            active = true;\n          }\n          break;\n        case \"StepTaxLiquiditySubForm\":\n          if (curSubFormStepIndex >= 7) {\n            active = true;\n          }\n          break;\n      }\n    } else {\n      if (formStep.id != \"StepAssetAllocationSubForm\") {\n        disabled = true;\n      }\n    }\n\n    return {\n      disabled: disabled,\n      active: active,\n    };\n  }\n  getRightSideFormData(formStep) {\n    let formData = [];\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n    let isSpouseSole = this.getSubFormFieldValue(\n      \"QuestionRMDAdditionalSubForm\",\n      \"isSpouseSole\"\n    );\n    let accountType = this.getSubFormFieldValue(\n      \"AssetInformationSubForm\",\n      \"accountType\"\n    );\n    let regularContribution = this.getSubFormFieldValue(\n      \"QuestionContributionDistributionSubForm\",\n      \"regularContribution\"\n    );\n    let isPrimaryResidence = this.getSubFormFieldValue(\n      \"PrimaryResidenceSubForm\",\n      \"isPrimaryResidence\"\n    );\n\n    if (assetsAllocation == null || assetsAllocation == \"\") {\n      return formData;\n    }\n\n    for (var index = 0; index < this.state.formData.length; index++) {\n      if (formStep.id == this.state.formData[index][\"stepId\"]) {\n        switch (formStep.id) {\n          case \"StepAssetAllocationSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepAssetInformationSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepAccountTypeQuestions\":\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Auto - non-collectible\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n              case \"Cash/CD's T-Bills\":\n                break;\n              default:\n                if (this.state.formData[index][\"id\"] == \"InheritedIRASubForm\") {\n                  if (accountType == \"IRA Inherited\") {\n                    formData.push(this.state.formData[index]);\n                  }\n                } else {\n                  formData.push(this.state.formData[index]);\n                }\n\n                break;\n            }\n            break;\n          case \"StepQuestionContributionDistributionSubForm\":\n            switch (assetsAllocation) {\n              case \"Airplane\":\n              case \"Boat\":\n              case \"Motorcycles\":\n              case \"General Household\":\n              case \"Club Membership\":\n              case \"Real Estate\":\n              case \"Auto - non-collectible\":\n              case \"Business Interest\":\n              case \"Livestock\":\n              case \"Collectibles\":\n              case \"Private Placement & VC\":\n                break;\n              default:\n                if (this.state.formData[index][\"id\"] == \"ContributionSubForm\") {\n                  if (regularContribution == \"Yes\") {\n                    formData.push(this.state.formData[index]);\n                  }\n                } else {\n                  formData.push(this.state.formData[index]);\n                }\n                break;\n            }\n            break;\n          case \"StepAdditionalAssetInformation\":\n            if (\n              assetsAllocation == \"Stocks - Individual\" &&\n              this.state.formData[index][\"id\"] == \"StockSubForm\"\n            ) {\n              console.log(this.state.formData[index][\"data\"][\"rows\"]);\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"User Defined Portfolio Allocation\" &&\n              this.state.formData[index][\"id\"] == \"UserPortfolioSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Airplane\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Boat\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Motorcycles\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"General Household\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Club Membership\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Real Estate\" &&\n              isPrimaryResidence == \"No\" &&\n              (this.state.formData[index][\"id\"] == \"PropertySubForm\" ||\n                this.state.formData[index][\"id\"] ==\n                  \"InvestmentPropertySubForm\" ||\n                this.state.formData[index][\"id\"] ==\n                  \"InvestmentPropertyExpensesSubForm\")\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Auto - non-collectible\" &&\n              this.state.formData[index][\"id\"] == \"SellingAssetCostsSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Livestock\" &&\n              this.state.formData[index][\"id\"] == \"LiveStockSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Collectibles\" &&\n              this.state.formData[index][\"id\"] == \"CollectiblesSubForm\"\n            ) {\n              formData.push(this.state.formData[index]);\n            } else if (\n              assetsAllocation == \"Private Placement & VC\" &&\n              (this.state.formData[index][\"id\"] == \"VCSubForm\" ||\n                this.state.formData[index][\"id\"] == \"CommittmentSubForm\")\n            ) {\n              formData.push(this.state.formData[index]);\n            }\n            break;\n          case \"StepAssetPerformanceSubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          case \"StepTaxLiquiditySubForm\":\n            formData.push(this.state.formData[index]);\n            break;\n          default:\n            formData.push(this.state.formData[index]);\n            break;\n        }\n      }\n    }\n\n    return formData;\n  }\n\n  goNext(fromSubFormID) {\n    let nextSubFormID = \"\";\n\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n    let isSpouseSole = this.getSubFormFieldValue(\n      \"QuestionRMDAdditionalSubForm\",\n      \"isSpouseSole\"\n    );\n    let accountType = this.getSubFormFieldValue(\n      \"AssetInformationSubForm\",\n      \"accountType\"\n    );\n    let isShowfield = this.getSubFormFieldValue(\n      \"QuestionShowFieldsAirplane\",\n      \"isShowfield\"\n    );\n    let regularContribution = this.getSubFormFieldValue(\n      \"QuestionContributionDistributionSubForm\",\n      \"regularContribution\"\n    );\n    let isPrimaryResidence = this.getSubFormFieldValue(\n      \"PrimaryResidenceSubForm\",\n      \"isPrimaryResidence\"\n    );\n\n    switch (fromSubFormID) {\n      // StepAssetAllocationSubForm\n      case \"AssetAllocationSubForm\":\n        nextSubFormID = \"AssetInformationSubForm\";\n        break;\n\n      // StepAssetInformationSubForm\n      case \"AssetInformationSubForm\":\n        switch (accountType) {\n          case \"529\":\n          case \"Custodial\":\n          case \"Coverdell Education\":\n          case \"Individual\":\n          case \"Health Savings Account\":\n          case \"Joint\":\n          case \"Roth\":\n          case \"Trust\":\n            nextSubFormID = \"QuestionContributionDistributionSubForm\";\n          default:\n            nextSubFormID = \"QuestionRMDAdditionalSubForm\";\n        }\n\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n            break;\n          case \"Club Membership\":\n            nextSubFormID = \"StepAssetPerformanceSubForm\";\n            break;\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n            break;\n          case \"Business Interest\":\n            nextSubFormID = \"StepAssetPerformanceSubForm\";\n            break;\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n            break;\n          case \"Cash/CD's T-Bills\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n        }\n        break;\n      // StepAccountTypeQuestions\n      case \"QuestionRMDAdditionalSubForm\":\n        if (accountType == \"IRA Inherited\") {\n          nextSubFormID = \"InheritedIRASubForm\";\n        } else {\n          nextSubFormID = \"QuestionContributionDistributionSubForm\";\n        }\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n        }\n        break;\n      //juniiii\n      case \"QuestionShowFieldsAirplane\":\n        if (isShowfield == \"Yes\") {\n          nextSubFormID = \"SellingAssetCostsSubForm\";\n        } else {\n          nextSubFormID = \"AssetPerformanceSubForm\";\n        }\n        break;\n      case \"InheritedIRASubForm\":\n        nextSubFormID = \"QuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            nextSubFormID = \"StepAdditionalAssetInformation\";\n        }\n        break;\n      // StepQuestionContributionDistributionSubForm\n      case \"QuestionContributionDistributionSubForm\":\n        let regularContribution = this.getSubFormFieldValue(\n          \"QuestionContributionDistributionSubForm\",\n          \"regularContribution\"\n        );\n\n        if (regularContribution == \"Yes\") {\n          nextSubFormID = \"ContributionSubForm\";\n        } else {\n          nextSubFormID = \"StepAdditionalAssetInformation\";\n        }\n        break;\n\n      case \"ContributionSubForm\":\n        nextSubFormID = \"StepAdditionalAssetInformation\";\n        switch (assetsAllocation) {\n          case \"Indexes, ETF's and Mutual Funds\":\n          case \"Bonds - Int  Long Term\":\n          case \"Cash/CD's T-Bills\":\n            nextSubFormID = \"StepAssetPerformanceSubForm\";\n            break;\n        }\n        break;\n\n      // StepAdditionalAssetInformation\n      case \"SellingAssetCostsSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"CollectiblesSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"LiveStockSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"VCSubForm\":\n        let additionalCommittments = this.getSubFormFieldValue(\n          \"VCSubForm\",\n          \"additionalCommittments\"\n        );\n        if (additionalCommittments == \"Yes\") {\n          nextSubFormID = \"CommittmentSubForm\";\n        } else {\n          nextSubFormID = \"AssetPerformanceSubForm\";\n        }\n        break;\n      case \"CommittmentSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"PrimaryResidenceSubForm\":\n        let isPrimaryResidence = this.getSubFormFieldValue(\n          \"PrimaryResidenceSubForm\",\n          \"isPrimaryResidence\"\n        );\n        if (isPrimaryResidence == \"Yes\") {\n          nextSubFormID = \"AssetPerformanceSubForm\";\n        } else {\n          nextSubFormID = \"PropertySubForm\";\n        }\n        break;\n      case \"PropertySubForm\":\n        nextSubFormID = \"InvestmentPropertySubForm\";\n        break;\n      case \"InvestmentPropertySubForm\":\n        nextSubFormID = \"InvestmentPropertyExpensesSubForm\";\n        break;\n      case \"InvestmentPropertyExpensesSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"StockSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      case \"UserPortfolioSubForm\":\n        nextSubFormID = \"AssetPerformanceSubForm\";\n        break;\n      // StepAssetPerformanceSubForm\n      case \"AssetPerformanceSubForm\":\n        nextSubFormID = \"TaxLiquiditySubForm\";\n        break;\n\n      // StepTaxLiquiditySubForm\n      case \"TaxLiquiditySubForm\":\n        nextSubFormID = \"EndSubForm\";\n        break;\n    }\n\n    this.goSubForm(nextSubFormID);\n  }\n\n  goPrev(fromSubFormID) {\n    let prevSubFormID = \"\";\n    let assetsAllocation = this.getSubFormFieldValue(\n      \"AssetAllocationSubForm\",\n      \"assetsAllocation\"\n    );\n\n    switch (fromSubFormID) {\n      // StepAssetAllocationSubForm\n      case \"AssetAllocationSubForm\":\n        prevSubFormID = \"\";\n        break;\n\n      // StepAssetInformationSubForm\n      case \"AssetInformationSubForm\":\n        prevSubFormID = \"AssetAllocationSubForm\";\n        break;\n\n      // StepAccountTypeQuestions\n      case \"QuestionRMDAdditionalSubForm\":\n        prevSubFormID = \"\";\n        break;\n      case \"InheritedIRASubForm\":\n        prevSubFormID = \"QuestionRMDAdditionalSubForm\";\n        break;\n\n      // StepQuestionContributionDistributionSubForm\n      case \"QuestionContributionDistributionSubForm\":\n        prevSubFormID = \"\";\n        break;\n\n      case \"ContributionSubForm\":\n        prevSubFormID = \"QuestionContributionDistributionSubForm\";\n        break;\n\n      // StepAdditionalAssetInformation\n      case \"SellingAssetCostsSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"CollectiblesSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"LiveStockSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"VCSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"CommittmentSubForm\":\n        prevSubFormID = \"VCSubForm\";\n        break;\n      case \"PrimaryResidenceSubForm\":\n        prevSubFormID = \"\";\n        break;\n      case \"PropertySubForm\":\n        prevSubFormID = \"\";\n        break;\n      case \"InvestmentPropertySubForm\":\n        prevSubFormID = \"PropertySubForm\";\n        break;\n      case \"InvestmentPropertyExpensesSubForm\":\n        prevSubFormID = \"InvestmentPropertySubForm\";\n        break;\n      case \"StockSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n      case \"UserPortfolioSubForm\":\n        prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        switch (assetsAllocation) {\n          case \"Airplane\":\n          case \"Boat\":\n          case \"Motorcycles\":\n          case \"General Household\":\n          case \"Club Membership\":\n          case \"Real Estate\":\n          case \"Auto - non-collectible\":\n          case \"Business Interest\":\n          case \"Livestock\":\n          case \"Collectibles\":\n          case \"Private Placement & VC\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n        }\n        break;\n\n      // StepAssetPerformanceSubForm\n      case \"AssetPerformanceSubForm\":\n        prevSubFormID = \"StepAdditionalAssetInformation\";\n        switch (assetsAllocation) {\n          case \"Indexes, ETF's and Mutual Funds\":\n          case \"Bonds - Int  Long Term\":\n            prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n            break;\n          case \"Club Membership\":\n          case \"Business Interest\":\n            prevSubFormID = \"StepAssetInformationSubForm\";\n            break;\n          case \"Cash/CD's T-Bills\":\n            prevSubFormID = \"StepQuestionContributionDistributionSubForm\";\n        }\n        break;\n\n      // StepTaxLiquiditySubForm\n      case \"TaxLiquiditySubForm\":\n        prevSubFormID = \"AssetPerformanceSubForm\";\n        break;\n    }\n\n    this.goSubForm(prevSubFormID);\n  }\n\n  getBeneficiaryAssignmentData(subFormData, subForm) {\n    return (\n      <React.Fragment>\n        <div className=\"form-brief-top\">\n          <h4 className=\"form-brief-title\">\n            {subFormData[\"BeneficiaryAssignment\"].tittle}\n          </h4>\n          <span\n            className=\"form-brief-edit-btn\"\n            onClick={() => this.goSubForm(subForm.id)}\n          >\n            <Icon type=\"edit\"></Icon>\n          </span>\n\n          {subFormData[\"BeneficiaryAssignment\"].rows &&\n            subFormData[\"BeneficiaryAssignment\"].rows.map((data) => {\n              return (\n                <div className=\"form-brief-item\">\n                  <p className=\"form-brief-item-title\">\n                    {data.beneficiariesName != \"\"\n                      ? data.beneficiariesName + \":\"\n                      : null}{\" \"}\n                  </p>\n                  <p className=\"form-brief-item-value\">{data.percent}</p>\n                </div>\n              );\n            })}\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const navlinks = [\n      {\n        href: \"/\",\n        title: \"Home\",\n      },\n      {\n        href: \"/modules\",\n        title: \"Modules\",\n      },\n      {\n        href: \"/assets\",\n        title: \"Assets\",\n      },\n    ];\n\n    let SubForm = this.state.curSubForm;\n\n    let formpageClassName = \"form-page-container-wrap\";\n    if (this.state.isRightSideOpen) {\n      formpageClassName = \"form-page-container-wrap right-side--opend\";\n    } else {\n      formpageClassName = \"form-page-container-wrap right-side--collapsed\";\n    }\n\n    return (\n      <div className={formpageClassName}>\n        <div className=\"form-page--main-side\">\n          <div className=\"steps\">\n            <div className=\"logo-container align-items-top justify-content-center\">\n              <img className=\"img-asset\" src={AssetPlanet} />\n            </div>\n            <div className=\"process\">\n              <div className=\"process-row\">\n                {this.state.formSteps.map((formStep, index) => {\n                  const { disabled, active } = this.getTopNav(formStep);\n\n                  let className = \"btn nav-items btn-circle\";\n                  if (disabled) {\n                    className = \"btn nav-items btn-circle disabled\";\n                  } else if (active) {\n                    className = \"btn nav-items btn-circle active\";\n                  }\n                  return (\n                    <div className=\"process-step\" key={index}>\n                      <button\n                        type=\"button\"\n                        className={className}\n                        data-toggle=\"tab\"\n                        onClick={() =>\n                          !disabled ? this.goSubForm(formStep.id) : null\n                        }\n                      >\n                        {/* <img className=\"img-icon\" src={ImageIcon} /> */}\n                        <div style={{ fontSize: 30, color: '#006400' }}>\n                            {index + 1}\n                        </div>\n                      </button>\n                      <p className=\"step-title\">{formStep.title}</p>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n          <HiddenHook />\n          {!this.state.dbLoaded && (\n            <LoadDBDataHook\n              dbLoaded={this.state.dbLoaded}\n              dbID={this.state.dbID}\n              cbLoadDBData={this.loadDBData}\n            />\n          )}\n          <div className=\"container\">\n            <div className=\"page-nav-history\">\n              {/* {navlinks.map((navlink, index) => {\n                return (\n                  <span key={index}>\n                    <Link\n                      key={index}\n                      to={navlink.href}\n                      className=\"page-nav-link text-uppercase\"\n                    >\n                      {navlink.title}\n                    </Link>\n                    {index != navlinks.length - 1 ? \"/\" : null}\n                  </span>\n                );\n              })} */}\n            </div>\n            {!this.state.dbLoaded && <div>Loading...</div>}\n            {this.state.dbLoaded && (\n              <div className=\"form-page-container\">\n                <div className=\"form-page--left-side\">\n                  {/* <FormPagePose */}\n                  <div\n                    className=\"info-form-block\"\n                    pose={this.state.formVisible ? \"visible\" : \"hidden\"}\n                  >\n                    <SubForm\n                      subFormData={this.state.subFormData}\n                      cbGoSubForm={this.goSubForm}\n                      cbUpdateSubForm={this.updateSubForm}\n                      formData={this.state.formData}\n                      cbGetSubFormField={this.getSubFormField}\n                      cbGoNext={this.goNext}\n                      cbGoPrev={this.goPrev}\n                      selectedTitle={ this.getSubFormFieldValue(\n                        \"AssetAllocationSubForm\",\n                        \"assetsAllocation\"\n                      )}\n                    />\n                    </div>\n                  {/* </FormPagePose> */}\n               \n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"form-page--right-side\">\n          <span\n            className=\"right-side-collapse-icon\"\n            onClick={this.toggleRightSide}\n          >\n            <i className=\"fe-menu\"></i>\n          </span>\n          <div className=\"form-page--right-side-wrap\">\n            {this.state.formSteps.map((formStep, index) => {\n              let formData = this.getRightSideFormData(formStep);\n              return formData.map((subForm, sindex) => {\n                if (subForm.visible == false) {\n                  return <React.Fragment key={sindex}></React.Fragment>;\n                }\n                let count = 0;\n                let go = false;\n                let fieldss = null;\n                let subFormData = subForm.data;\n\n                if (subFormData[\"rows\"]) {\n                  fieldss = subFormData[\"rows\"];\n                } else if (subFormData[\"fields\"]) {\n                  fieldss = subFormData[\"fields\"];\n                }\n                count = fieldss.length;\n\n                for (let i = 0; i < parseInt(count); i++) {\n                  if (fieldss[i][\"value\"] != \"\") {\n                    go = true;\n                  }\n                }\n\n                return (\n                  <div className=\"form-brief-block\" key={sindex}>\n                    <div className=\"form-brief-top\">\n                      {go ? (\n                        <h4 className=\"form-brief-title\">\n                          {subFormData.title}\n                        </h4>\n                      ) : null}\n                      {/* <h4 className=\"form-brief-title\">{subFormData.title}</h4> */}\n                      <span\n                        className=\"form-brief-edit-btn\"\n                        onClick={() => this.goSubForm(subForm.stepId)}\n                      >\n                        <Icon type=\"edit\"></Icon>\n                      </span>\n                    </div>\n                    <div className=\"form-brief-content\">\n                      {subFormData.fields &&\n                        subFormData.fields.map((field, ffindex) => {\n                          if (field.value == \"\" || field.value == null) {\n                            return (\n                              <React.Fragment key={ffindex}></React.Fragment>\n                            );\n                          }\n                          return (\n                            <div className=\"form-brief-item\" key={ffindex}>\n                              <p className=\"form-brief-item-title\">\n                                {field.title != \"\" ? field.title + \":\" : null}{\" \"}\n                              </p>\n                              <p className=\"form-brief-item-value\">\n                                {field.hasOwnProperty(\"type\") &&\n                                  field[\"type\"] == \"currency\" &&\n                                  float2Currency(field.value)}\n                                {field.hasOwnProperty(\"type\") &&\n                                  field[\"type\"] == \"percent\" &&\n                                  field.value + \" %\"}\n                                {!field.hasOwnProperty(\"type\") && field.value}\n                              </p>\n                            </div>\n                          );\n                        })}\n                      {subFormData.rows && subFormData.rows.length > 0 && (\n                        <React.Fragment>\n                          {subForm.id == \"ContributionSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                 <div className=\"form-brief-col--33\">Cont. Or Dist.</div>\n                                <div className=\"form-brief-col--33\">Amount</div>\n                                <div className=\"form-brief-col--33\">\n                                  Start Date\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  End Date\n                                </div>\n                              </div>\n                              {subFormData.rows.map((contribute, cindex) => {\n                                return (\n                                  <div className=\"form-brief-row\" key={cindex}>\n                                    <div className=\"form-brief-col--33\">\n                                      {contribute[\"contributionOrDistribution\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {float2Currency(contribute[\"amount\"])}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {contribute[\"startDate\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {contribute[\"endDate\"]}\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                            </React.Fragment>\n                          )}\n                          {subForm.id == \"LiveStockSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--50\">\n                                  Animal Type\n                                </div>\n                                <div className=\"form-brief-col--50\">Count</div>\n                              </div>\n                              {subFormData.rows.map((livestock, cindex) => {\n                                return (\n                                  <div className=\"form-brief-row\" key={cindex}>\n                                    <div className=\"form-brief-col--50\">\n                                      {livestock[\"animalType\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--50\">\n                                      {livestock[\"count\"]}\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                            </React.Fragment>\n                          )}\n                          {subForm.id == \"StockSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--33\">\n                                  Stock Symbol\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  Quantity\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  Today's Value\n                                </div>\n                                <div className=\"form-brief-col--33\">Date</div>\n                              </div>\n                              {subFormData.rows.map((stock, cindex) => {\n                                return (\n                                  <div className=\"form-brief-row\" key={cindex}>\n                                    <div className=\"form-brief-col--33\">\n                                      {stock[\"stockSymbol\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {stock[\"quantity\"]}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {float2Currency(stock[\"todayValue\"])}\n                                    </div>\n                                    <div className=\"form-brief-col--33\">\n                                      {stock[\"dateOfIndividual\"]}\n                                    </div>\n                                  </div>\n                                );\n                              })}\n                            </React.Fragment>\n                          )}\n                          {subForm.id ==\n                            \"InvestmentPropertyExpensesSubForm\" && (\n                            <React.Fragment>\n                              <div className=\"form-brief-row\">\n                                <div className=\"form-brief-col--33\">Amount</div>\n                                <div className=\"form-brief-col--33\">\n                                  Start Date\n                                </div>\n                                <div className=\"form-brief-col--33\">\n                                  End Date\n                                </div>\n                              </div>\n                              {subFormData.rows.map(\n                                (propertyExpense, cindex) => {\n                                  return (\n                                    <div\n                                      className=\"form-brief-row\"\n                                      key={cindex}\n                                    >\n                                      <div className=\"form-brief-col--33\">\n                                        {float2Currency(\n                                          propertyExpense[\"amount\"]\n                                        )}\n                                      </div>\n                                      <div className=\"form-brief-col--33\">\n                                        {propertyExpense[\"startDate\"]}\n                                      </div>\n                                      <div className=\"form-brief-col--33\">\n                                        {propertyExpense[\"endDate\"]}\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              )}\n                            </React.Fragment>\n                          )}\n                        </React.Fragment>\n                      )}\n                    </div>\n                    {subFormData[\"BeneficiaryAssignment\"]\n                      ? this.getBeneficiaryAssignmentData(subFormData, subForm)\n                      : null}\n                  </div>\n                );\n              });\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(AssetsNew);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}