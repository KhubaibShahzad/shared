{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/reports/LiabilitiesCreditReport/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HorizontalBar } from 'react-chartjs-2';\n\n/* *** Antd Components *** */\nimport { Row, Col } from 'antd';\n\n/* *** Custom Components *** */\nimport PageTitle from '../../../components/layout/PageTitle';\nimport SubTitle from 'components/layout/SubTitle';\nimport ReportInfoRow from '../../../components/shared/ReportInfo';\nimport Synopsis from '../../../components/layout/Synopsis/Synopsis';\nimport TableReport from '../../../components/layout/TableReport';\n\n/* *** Images *** */\nimport Logo from '../../../assets/images/abstract-dynamic-logo-vector.jpg';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { QL_LIABILITIES_CREDIT_LIST } from '../../../constants/queries';\nimport { float2Currency } from 'helpers/Utils';\nimport Report from '../../../components/Report';\nfunction LoadDBDataHook(props) {\n  var _useQuery = useQuery(QL_LIABILITIES_CREDIT_LIST, {\n      notifyOnNetworkStatusChange: true\n    }),\n    data = _useQuery.data,\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    refetch = _useQuery.refetch,\n    networkStatus = _useQuery.networkStatus;\n  if (props.dbReload) {\n    console.log('reload..');\n    refetch();\n  }\n  props.cbUpdateNetworkStatus(networkStatus);\n  console.log('networkStatus:', networkStatus);\n  if (data) {\n    props.cbLoadDBData(networkStatus, data);\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  });\n}\nvar LiabilitiesCreditReport = /*#__PURE__*/function (_Component) {\n  _inherits(LiabilitiesCreditReport, _Component);\n  function LiabilitiesCreditReport(props) {\n    var _this;\n    _classCallCheck(this, LiabilitiesCreditReport);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LiabilitiesCreditReport).call(this, props));\n    _this.state = {\n      rows_overall: [{\n        key: '1',\n        title: 'Credit Cards and Lines of Credit',\n        active_accounts: '',\n        current_payments: '',\n        total_credit_available: '',\n        current_debts: ''\n      }, {\n        key: '2',\n        title: 'Loans',\n        active_accounts: '',\n        current_payments: '',\n        total_credit_available: '',\n        current_debts: ''\n      }, {\n        key: '3',\n        title: 'Total',\n        active_accounts: '',\n        current_payments: '',\n        total_credit_available: '',\n        current_debts: ''\n      }],\n      dbLoaded: false,\n      dbLoading: true,\n      rows_credit: [],\n      rows_liabilities: [],\n      dbReload: false,\n      networkStatus: 0\n    };\n    _this.loadDBData = _this.loadDBData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateNetworkStatus = _this.updateNetworkStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(LiabilitiesCreditReport, [{\n    key: \"loadDBData\",\n    value: function loadDBData(networkStatus, data) {\n      console.log('loadDBData:', data);\n      if (this.state.networkStatus == networkStatus) {\n        return;\n      }\n      var liabilitiesAndCredits = data['liabilitiesAndCredits'];\n      var credit_active_accounts = 0;\n      var credit_current_payments = 0;\n      var credit_total_credit_available = 0;\n      var credit_current_debts = 0;\n      var loan_active_accounts = 0;\n      var loan_current_payments = 0;\n      var loan_total_credit_available = 0;\n      var loan_current_debts = 0;\n      var total_active_accounts = 0;\n      var total_current_payments = 0;\n      var total_total_credit_available = 0;\n      var total_current_debts = 0;\n      var rows_credit = [];\n      var rows_liabilities = [];\n      for (var index = 0; index < liabilitiesAndCredits.length; index++) {\n        switch (liabilitiesAndCredits[index]['liabilityType']) {\n          case \"Credit - HELOC\":\n          case \"Credit Card - Buxiness\":\n          case \"Credit Card - Peresonal\":\n            credit_active_accounts++;\n            var total_credit_available = liabilitiesAndCredits[index]['additionalCreditCardInformation']['totalCreditAvailable'] != null ? parseFloat(liabilitiesAndCredits[index]['additionalCreditCardInformation']['totalCreditAvailable']) : 0;\n            credit_total_credit_available += total_credit_available;\n            var current_payments = 0;\n            credit_current_payments += current_payments;\n            var current_debts = liabilitiesAndCredits[index]['additionalCreditCardInformation']['creditBalance'] != null ? parseFloat(liabilitiesAndCredits[index]['additionalCreditCardInformation']['creditBalance']) : 0;\n            credit_current_debts += current_debts;\n            rows_credit.push({\n              key: index,\n              id: data['liabilitiesAndCredits'][index]['id'],\n              credit_description: data['liabilitiesAndCredits'][index]['liabilityType'],\n              whose_debt: data['liabilitiesAndCredits'][index]['nameOfLiability'],\n              bank: '',\n              monthly_payment: data['liabilitiesAndCredits'][index]['monthlyPayment'],\n              credit_balance: data['liabilitiesAndCredits'][index]['additionalCreditCardInformation']['creditBalance'],\n              credit_limit: data['liabilitiesAndCredits'][index]['additionalCreditCardInformation']['creditLimit'],\n              as_date: ''\n            });\n            break;\n          default:\n            loan_active_accounts++;\n            var current_payments = liabilitiesAndCredits[index]['monthlyPayment'] != null ? parseFloat(liabilitiesAndCredits[index]['monthlyPayment']) : 0;\n            loan_current_payments += current_payments;\n            var total_credit_available = 0;\n            loan_total_credit_available += total_credit_available;\n            var loan_amount = liabilitiesAndCredits[index]['initialLoanAmount'] != null ? parseFloat(liabilitiesAndCredits[index]['initialLoanAmount']) : 0;\n            var months = 1;\n            var current_debts = loan_amount - current_payments * months;\n            loan_current_debts += loan_current_debts;\n            rows_liabilities.push({\n              key: index,\n              id: data['liabilitiesAndCredits'][index]['id'],\n              liability_name: data['liabilitiesAndCredits'][index]['nameOfLiability'],\n              initial_loan_amount: data['liabilitiesAndCredits'][index]['initialLoanAmount'],\n              credit_balance: data['liabilitiesAndCredits'][index]['additionalCreditCardInformation']['creditBalance'],\n              monthly_payment: data['liabilitiesAndCredits'][index]['monthlyPayment'],\n              interest_rate: data['liabilitiesAndCredits'][index]['interestRate'],\n              maturity_date: data['liabilitiesAndCredits'][index]['maturityDate'],\n              liability_type: data['liabilitiesAndCredits'][index]['liabilityType'],\n              liability_status: data['liabilitiesAndCredits'][index]['statusOfLiability']\n            });\n            break;\n        }\n      }\n      total_active_accounts = credit_active_accounts + loan_active_accounts;\n      total_current_payments = credit_current_payments + loan_current_payments;\n      total_total_credit_available = credit_total_credit_available + loan_total_credit_available;\n      total_current_debts = credit_current_debts + loan_current_debts;\n      var rows_overall = this.state.rows_overall;\n      rows_overall[0]['active_accounts'] = credit_active_accounts;\n      rows_overall[0]['current_payments'] = float2Currency(credit_current_payments);\n      rows_overall[0]['total_credit_available'] = float2Currency(credit_total_credit_available);\n      rows_overall[0]['current_debts'] = float2Currency(credit_current_debts);\n      rows_overall[1]['active_accounts'] = loan_active_accounts;\n      rows_overall[1]['current_payments'] = float2Currency(loan_current_payments);\n      rows_overall[1]['total_credit_available'] = float2Currency(loan_total_credit_available);\n      rows_overall[1]['current_debts'] = float2Currency(loan_current_debts);\n      rows_overall[2]['active_accounts'] = total_active_accounts;\n      rows_overall[2]['current_payments'] = float2Currency(total_current_payments);\n      rows_overall[2]['total_credit_available'] = float2Currency(total_total_credit_available);\n      rows_overall[2]['current_debts'] = float2Currency(total_current_debts);\n      var instance = this;\n      setTimeout(function () {\n        instance.setState({\n          rows_overall: rows_overall,\n          rows_credit: rows_credit,\n          rows_liabilities: rows_liabilities,\n          dbLoading: false,\n          dbLoaded: true,\n          dbReload: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"updateNetworkStatus\",\n    value: function updateNetworkStatus(networkStatus) {\n      if (this.state.networkStatus != networkStatus) {\n        var instance = this;\n        setTimeout(function () {\n          instance.setState({\n            networkStatus: networkStatus\n          });\n        }, 1000);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var reportInfoData = [{\n        'title': 'Client Name',\n        'value': 'Bill Client'\n      }, {\n        'title': 'Plan Nickname',\n        'value': 'First Plan'\n      }, {\n        'title': 'Spouse Name',\n        'value': 'Peggy Client'\n      }, {\n        'title': 'Today\\'s Date',\n        'value': '11/20/2019'\n      }];\n      var report_cols_credit = [{\n        title: 'Credit Description',\n        dataIndex: 'credit_description',\n        key: 'credit_description'\n      }, {\n        title: 'Whose Debt',\n        dataIndex: 'whose_debt',\n        key: 'whose_debt'\n      }, {\n        title: 'Bank',\n        dataIndex: 'bank',\n        key: 'bank'\n      }, {\n        title: 'Monthly Payment',\n        dataIndex: 'monthly_payment',\n        key: 'monthly_payment'\n      }, {\n        title: 'Credit Balance',\n        dataIndex: 'credit_balance',\n        key: 'credit_balance'\n      }, {\n        title: 'Credit Limit',\n        dataIndex: 'credit_limit',\n        key: 'credit_limit'\n      }, {\n        title: 'As of Date',\n        dataIndex: 'as_date',\n        key: 'as_date'\n      }];\n      var report_cols_liabilities = [{\n        title: 'Name of Liability ',\n        dataIndex: 'liability_name',\n        key: 'liability_name'\n      }, {\n        title: 'Initial Loan Amount',\n        dataIndex: 'initial_loan_amount',\n        key: 'initial_loan_amount'\n      }, {\n        title: 'Credit Balance',\n        dataIndex: 'credit_balance',\n        key: 'credit_balance'\n      }, {\n        title: 'Monthly Payment',\n        dataIndex: 'monthly_payment',\n        key: 'monthly_payment'\n      }, {\n        title: 'Interest Rate(or APR%)',\n        dataIndex: 'interest_rate',\n        key: 'interest_rate'\n      }, {\n        title: 'Maturity Date',\n        dataIndex: 'maturity_date',\n        key: 'maturity_date'\n      }, {\n        title: 'Liability Type',\n        dataIndex: 'liability_type',\n        key: 'liability_type'\n      }, {\n        title: 'Status of Liability',\n        dataIndex: 'liability_status',\n        key: 'liability_status'\n      }];\n      var cols_overall = [{\n        title: '',\n        dataIndex: 'title',\n        key: 'title'\n      }, {\n        title: 'Active Accounts',\n        dataIndex: 'active_accounts',\n        key: 'active_accounts'\n      }, {\n        title: 'Current Payments',\n        dataIndex: 'current_payments',\n        key: 'current_payments'\n      }, {\n        title: 'Total Credit Available',\n        dataIndex: 'total_credit_available',\n        key: 'total_credit_available'\n      }, {\n        title: 'Current Debts',\n        dataIndex: 'current_debts',\n        key: 'current_debts'\n      }];\n      var barData = {\n        labels: ['John\\'s House', 'Asset to sell'],\n        datasets: [{\n          label: 'My First dataset',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: [65, 59, 80]\n        }]\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pageWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(LoadDBDataHook, {\n        dbLoaded: this.state.dbLoaded,\n        dbReload: this.state.dbReload,\n        cbLoadDBData: this.loadDBData,\n        cbUpdateNetworkStatus: this.updateNetworkStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(PageTitle, {\n        title: \"Liabilities and Credit Report\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Synopsis, {\n        content: \"Details of current debt or potential debt using bank credit line or credit cards\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ReportInfoRow, {\n        data: reportInfoData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        style: {\n          margin: '12px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Logo,\n        alt: \"\",\n        style: {\n          height: '130px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Row, {\n        type: \"flex\",\n        gutter: [20, 0],\n        style: {\n          margin: '30px 0 40px'\n        },\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TableReport, {\n        rows: this.state.rows_overall,\n        cols: cols_overall,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }\n      }))), /*#__PURE__*/React.createElement(PageTitle, {\n        title: \"All Loans\",\n        level: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        style: {\n          margin: '12px 0 40px',\n          padding: '16px',\n          border: '1px solid #ddd',\n          backgroundColor: 'rgba(237, 237, 237, 0.40)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(HorizontalBar, {\n        data: barData,\n        options: {\n          maintainAspectRatio: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fragment-assitance-received\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(PageTitle, {\n        title: \"All Credit (Credit Cards and Lines of Credit)\",\n        level: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(SubTitle, {\n        subTitle: \"Final Expense, Guaranteed Issue, Automobile, Long Term Care, Long Term Disability, Term, Umbrella, Homeowners, Fire, Flood, Earthquake\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Report, {\n        loading: this.state.dbLoading,\n        cols: report_cols_credit,\n        rows: this.state.rows_credit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(PageTitle, {\n        title: \"Liabilities\",\n        level: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Report, {\n        loading: this.state.dbLoading,\n        cols: report_cols_liabilities,\n        rows: this.state.rows_liabilities,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n  return LiabilitiesCreditReport;\n}(Component);\nexport default connect()(LiabilitiesCreditReport);","map":{"version":3,"names":["React","Component","connect","HorizontalBar","Row","Col","PageTitle","SubTitle","ReportInfoRow","Synopsis","TableReport","Logo","useQuery","useMutation","QL_LIABILITIES_CREDIT_LIST","float2Currency","Report","LoadDBDataHook","props","notifyOnNetworkStatusChange","data","loading","error","refetch","networkStatus","dbReload","console","log","cbUpdateNetworkStatus","cbLoadDBData","LiabilitiesCreditReport","state","rows_overall","key","title","active_accounts","current_payments","total_credit_available","current_debts","dbLoaded","dbLoading","rows_credit","rows_liabilities","loadDBData","bind","updateNetworkStatus","liabilitiesAndCredits","credit_active_accounts","credit_current_payments","credit_total_credit_available","credit_current_debts","loan_active_accounts","loan_current_payments","loan_total_credit_available","loan_current_debts","total_active_accounts","total_current_payments","total_total_credit_available","total_current_debts","index","length","parseFloat","push","id","credit_description","whose_debt","bank","monthly_payment","credit_balance","credit_limit","as_date","loan_amount","months","liability_name","initial_loan_amount","interest_rate","maturity_date","liability_type","liability_status","instance","setTimeout","setState","reportInfoData","report_cols_credit","dataIndex","report_cols_liabilities","cols_overall","barData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","margin","height","padding","border","maintainAspectRatio"],"sources":["/home/albatross/gitCode/shared/src/pages/reports/LiabilitiesCreditReport/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { HorizontalBar } from 'react-chartjs-2';\n\n/* *** Antd Components *** */\nimport { Row, Col } from 'antd';\n\n/* *** Custom Components *** */\nimport PageTitle from '../../../components/layout/PageTitle';\nimport SubTitle from 'components/layout/SubTitle';\nimport ReportInfoRow from '../../../components/shared/ReportInfo';\nimport Synopsis from '../../../components/layout/Synopsis/Synopsis';\nimport TableReport from '../../../components/layout/TableReport';\n\n/* *** Images *** */\nimport Logo from '../../../assets/images/abstract-dynamic-logo-vector.jpg'\n\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport {\n    QL_LIABILITIES_CREDIT_LIST\n} from '../../../constants/queries';\nimport {float2Currency} from 'helpers/Utils';\nimport Report from '../../../components/Report';\n\nfunction LoadDBDataHook(props){\n    const {data, loading, error, refetch, networkStatus } = useQuery(QL_LIABILITIES_CREDIT_LIST, { notifyOnNetworkStatusChange: true });\n    \n    if(props.dbReload){\n        console.log('reload..');\n        refetch();\n    }\n\n    props.cbUpdateNetworkStatus(networkStatus);\n    console.log('networkStatus:', networkStatus);\n    if(data){\n        props.cbLoadDBData(networkStatus, data);\n    }\n    \n    return (\n        <React.Fragment></React.Fragment>\n    )\n}\n\nclass LiabilitiesCreditReport extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows_overall: [\n                {\n                    key: '1',\n                    title: 'Credit Cards and Lines of Credit',\n                    active_accounts: '',\n                    current_payments: '',\n                    total_credit_available: '',\n                    current_debts: '',\n                },\n                {\n                    key: '2',\n                    title: 'Loans',\n                    active_accounts: '',\n                    current_payments: '',\n                    total_credit_available: '',\n                    current_debts: '',\n                },\n                {\n                    key: '3',\n                    title: 'Total',\n                    active_accounts: '',\n                    current_payments: '',\n                    total_credit_available: '',\n                    current_debts: '',\n                },\n            ],\n            dbLoaded: false,\n            dbLoading: true,\n            rows_credit: [],\n            rows_liabilities: [],\n            dbReload: false,\n            networkStatus: 0\n        };\n\n        this.loadDBData = this.loadDBData.bind(this);\n        this.updateNetworkStatus = this.updateNetworkStatus.bind(this);\n    }\n\n    loadDBData(networkStatus, data){\n        console.log('loadDBData:', data);\n        if(this.state.networkStatus == networkStatus){\n            return;\n        }\n\n        var liabilitiesAndCredits = data['liabilitiesAndCredits'];\n\n        var credit_active_accounts = 0;\n        var credit_current_payments = 0;\n        var credit_total_credit_available = 0;\n        var credit_current_debts = 0;\n\n        var loan_active_accounts = 0;\n        var loan_current_payments = 0;\n        var loan_total_credit_available = 0;\n        var loan_current_debts = 0;\n\n        var total_active_accounts = 0;\n        var total_current_payments = 0;\n        var total_total_credit_available = 0;\n        var total_current_debts = 0;\n\n        var rows_credit = [];\n        var rows_liabilities = [];\n        for(var index = 0; index < liabilitiesAndCredits.length; index++){\n\n            switch(liabilitiesAndCredits[index]['liabilityType']){\n                case \"Credit - HELOC\":\n                case \"Credit Card - Buxiness\":\n                case \"Credit Card - Peresonal\":\n                    credit_active_accounts ++;\n                    var total_credit_available = liabilitiesAndCredits[index]['additionalCreditCardInformation']['totalCreditAvailable'] != null ? parseFloat(liabilitiesAndCredits[index]['additionalCreditCardInformation']['totalCreditAvailable']) : 0;\n                    credit_total_credit_available += total_credit_available;\n\n                    var current_payments = 0;\n                    credit_current_payments += current_payments;\n\n                    var current_debts = liabilitiesAndCredits[index]['additionalCreditCardInformation']['creditBalance'] != null ? parseFloat(liabilitiesAndCredits[index]['additionalCreditCardInformation']['creditBalance']) : 0;\n                    credit_current_debts += current_debts;\n\n                    rows_credit.push(\n                        {\n                            key: index,\n                            id: data['liabilitiesAndCredits'][index]['id'],\n                            credit_description: data['liabilitiesAndCredits'][index]['liabilityType'],\n                            whose_debt: data['liabilitiesAndCredits'][index]['nameOfLiability'],\n                            bank: '',\n                            monthly_payment: data['liabilitiesAndCredits'][index]['monthlyPayment'],\n                            credit_balance: data['liabilitiesAndCredits'][index]['additionalCreditCardInformation']['creditBalance'],\n                            credit_limit: data['liabilitiesAndCredits'][index]['additionalCreditCardInformation']['creditLimit'],\n                            as_date: ''\n                        }\n                    )\n\n                    break;\n                default: \n                    loan_active_accounts ++;\n                    \n                    var current_payments = liabilitiesAndCredits[index]['monthlyPayment'] != null ? parseFloat(liabilitiesAndCredits[index]['monthlyPayment']) : 0;\n                    loan_current_payments += current_payments;\n\n                    var total_credit_available = 0;\n                    loan_total_credit_available += total_credit_available;\n\n                    var loan_amount = liabilitiesAndCredits[index]['initialLoanAmount'] != null ? parseFloat(liabilitiesAndCredits[index]['initialLoanAmount']) : 0;\n                    var months = 1;\n                    var current_debts = loan_amount - current_payments * months;\n\n                    loan_current_debts += loan_current_debts;\n\n                    rows_liabilities.push(\n                        {\n                            key: index,\n                            id: data['liabilitiesAndCredits'][index]['id'],\n                            liability_name: data['liabilitiesAndCredits'][index]['nameOfLiability'],\n                            initial_loan_amount: data['liabilitiesAndCredits'][index]['initialLoanAmount'],\n                            credit_balance: data['liabilitiesAndCredits'][index]['additionalCreditCardInformation']['creditBalance'],\n                            monthly_payment: data['liabilitiesAndCredits'][index]['monthlyPayment'],\n                            interest_rate: data['liabilitiesAndCredits'][index]['interestRate'],\n                            maturity_date: data['liabilitiesAndCredits'][index]['maturityDate'],\n                            liability_type: data['liabilitiesAndCredits'][index]['liabilityType'],\n                            liability_status: data['liabilitiesAndCredits'][index]['statusOfLiability'],\n                        }\n                    )\n\n                    break;\n            }\n        }\n\n        total_active_accounts = credit_active_accounts + loan_active_accounts;\n        total_current_payments = credit_current_payments + loan_current_payments;\n        total_total_credit_available = credit_total_credit_available + loan_total_credit_available;\n        total_current_debts = credit_current_debts + loan_current_debts;\n\n\n        var rows_overall = this.state.rows_overall;\n        rows_overall[0]['active_accounts'] = credit_active_accounts;\n        rows_overall[0]['current_payments'] = float2Currency(credit_current_payments);\n        rows_overall[0]['total_credit_available'] = float2Currency(credit_total_credit_available);\n        rows_overall[0]['current_debts'] = float2Currency(credit_current_debts);\n\n        rows_overall[1]['active_accounts'] = loan_active_accounts;\n        rows_overall[1]['current_payments'] = float2Currency(loan_current_payments);\n        rows_overall[1]['total_credit_available'] = float2Currency(loan_total_credit_available);\n        rows_overall[1]['current_debts'] = float2Currency(loan_current_debts);\n\n        rows_overall[2]['active_accounts'] = total_active_accounts;\n        rows_overall[2]['current_payments'] = float2Currency(total_current_payments);\n        rows_overall[2]['total_credit_available'] = float2Currency(total_total_credit_available);\n        rows_overall[2]['current_debts'] = float2Currency(total_current_debts);\n        \n        var instance = this;\n        setTimeout(function(){\n            instance.setState({\n                rows_overall: rows_overall,\n                rows_credit: rows_credit,\n                rows_liabilities: rows_liabilities,\n                dbLoading: false,\n                dbLoaded: true,\n                dbReload: false\n            })\n        }, 500);\n        \n        \n    }\n\n    updateNetworkStatus(networkStatus){\n        if(this.state.networkStatus != networkStatus){\n            var instance = this;\n            setTimeout(function(){\n                instance.setState({\n                    networkStatus: networkStatus\n                });\n            }, 1000);\n        }\n    }\n\n    render() {\n        const reportInfoData = [\n            {\n                'title': 'Client Name',\n                'value': 'Bill Client'\n            },\n            {\n                'title': 'Plan Nickname',\n                'value': 'First Plan'\n            },\n            {\n                'title': 'Spouse Name',\n                'value': 'Peggy Client'\n            },\n            {\n                'title': 'Today\\'s Date',\n                'value': '11/20/2019'\n            }\n        ];\n        \n        const report_cols_credit = [\n            {\n              title: 'Credit Description',\n              dataIndex: 'credit_description',\n              key: 'credit_description'\n            },\n            {\n              title: 'Whose Debt',\n              dataIndex: 'whose_debt',\n              key: 'whose_debt',\n            },\n            {\n              title: 'Bank',\n              dataIndex: 'bank',\n              key: 'bank',\n            },\n            {\n                title: 'Monthly Payment',\n                dataIndex: 'monthly_payment',\n                key: 'monthly_payment',\n            },\n            {\n                title: 'Credit Balance',\n                dataIndex: 'credit_balance',\n                key: 'credit_balance'\n            },\n            {\n                title: 'Credit Limit',\n                dataIndex: 'credit_limit',\n                key: 'credit_limit'\n            },\n            {\n                title: 'As of Date',\n                dataIndex: 'as_date',\n                key: 'as_date'\n            }\n        ];\n\n        const report_cols_liabilities = [\n            {\n              title: 'Name of Liability ',\n              dataIndex: 'liability_name',\n              key: 'liability_name'\n            },\n            {\n              title: 'Initial Loan Amount',\n              dataIndex: 'initial_loan_amount',\n              key: 'initial_loan_amount',\n            },\n            {\n              title: 'Credit Balance',\n              dataIndex: 'credit_balance',\n              key: 'credit_balance',\n            },\n            {\n                title: 'Monthly Payment',\n                dataIndex: 'monthly_payment',\n                key: 'monthly_payment',\n            },\n            {\n                title: 'Interest Rate(or APR%)',\n                dataIndex: 'interest_rate',\n                key: 'interest_rate'\n            },\n            {\n                title: 'Maturity Date',\n                dataIndex: 'maturity_date',\n                key: 'maturity_date'\n            },\n            {\n                title: 'Liability Type',\n                dataIndex: 'liability_type',\n                key: 'liability_type'\n            },\n            {\n                title: 'Status of Liability',\n                dataIndex: 'liability_status',\n                key: 'liability_status'\n            }\n        ];\n        \n        const cols_overall = [\n            {\n                title: '',\n                dataIndex: 'title',\n                key: 'title',\n            },\n            {\n                title: 'Active Accounts',\n                dataIndex: 'active_accounts',\n                key: 'active_accounts',\n            },\n            {\n                title: 'Current Payments',\n                dataIndex: 'current_payments',\n                key: 'current_payments',\n            },\n            {\n                title: 'Total Credit Available',\n                dataIndex: 'total_credit_available',\n                key: 'total_credit_available',\n            },\n            {\n                title: 'Current Debts',\n                dataIndex: 'current_debts',\n                key: 'current_debts',\n            },\n        ];\n\n        const barData = {\n            labels: ['John\\'s House', 'Asset to sell'],\n            datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: 'rgba(255,99,132,0.2)',\n                  borderColor: 'rgba(255,99,132,1)',\n                  borderWidth: 1,\n                  hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                  hoverBorderColor: 'rgba(255,99,132,1)',\n                  data: [65, 59, 80]\n                }\n            ]\n        };\n\n        return (\n            <div className=\"pageWrapper\">\n                <LoadDBDataHook \n                    dbLoaded={this.state.dbLoaded}\n                    dbReload={this.state.dbReload}\n                    cbLoadDBData={this.loadDBData}\n                    cbUpdateNetworkStatus={this.updateNetworkStatus}\n                />\n                <PageTitle title=\"Liabilities and Credit Report\" />\n                <Synopsis content=\"Details of current debt or potential debt using bank credit line or credit cards\" />\n                <ReportInfoRow data={reportInfoData} />\n                <Row type=\"flex\" justify=\"center\" style={{ margin: '12px 0' }}>\n                    <img src={Logo} alt=\"\" style={{ height : '130px' }} /> \n                </Row>\n                <Row type=\"flex\" gutter={[20, 0]} style={{ margin: '30px 0 40px' }} justify=\"center\">\n                    <Col span={20}>\n                        <TableReport rows={this.state.rows_overall} cols={cols_overall} />\n                    </Col>\n                </Row>\n                <PageTitle title=\"All Loans\" level={4} />\n                <Row type=\"flex\" justify=\"center\" style={{ margin: '12px 0 40px', padding: '16px', border: '1px solid #ddd', backgroundColor: 'rgba(237, 237, 237, 0.40)' }}>\n                    <HorizontalBar\n                        data={barData}\n                        options={{\n                            maintainAspectRatio: false\n                        }}\n                    />\n                </Row>\n                <div className=\"fragment-assitance-received\">\n                    <PageTitle title={\"All Credit (Credit Cards and Lines of Credit)\"} level={4} />\n                    <SubTitle subTitle={\"Final Expense, Guaranteed Issue, Automobile, Long Term Care, Long Term Disability, Term, Umbrella, Homeowners, Fire, Flood, Earthquake\"} />\n                    <Report \n                        loading={this.state.dbLoading}\n                        cols={report_cols_credit} \n                        rows={this.state.rows_credit}\n                    ></Report>\n                    <PageTitle title={\"Liabilities\"} level={4} />\n                    <Report \n                        loading={this.state.dbLoading}\n                        cols={report_cols_liabilities} \n                        rows={this.state.rows_liabilities}\n                    ></Report>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(LiabilitiesCreditReport);"],"mappings":"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"},"metadata":{},"sourceType":"module"}