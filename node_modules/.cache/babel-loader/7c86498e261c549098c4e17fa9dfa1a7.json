{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/goals/subforms/AssetsToGoalSubForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Icon, Select, Row, Col, Button } from 'antd';\nimport Currency from '../../../components/form/Currency';\nimport { ASSETS } from 'constants/types';\nimport SubFormTable from '../../../components/SubFormTable';\nvar Option = Select.Option;\nvar formData = [];\nvar formID = 'AssetsToGoalSubForm';\nvar AssetsToGoalSubForm = /*#__PURE__*/function (_Component) {\n  _inherits(AssetsToGoalSubForm, _Component);\n  _createClass(AssetsToGoalSubForm, null, [{\n    key: \"FnCreateFormData\",\n    value: function FnCreateFormData(data) {\n      var formData = {\n        title: 'Assistance Received Details (Financial Gift)',\n        fields: [{\n          id: 'assets_goal',\n          title: 'Assets to Assign to Goal',\n          value: data['assets_goal']\n        }, {\n          id: 'amount_goal',\n          title: 'Amount to Use for this Goal',\n          value: data['amount_goal']\n        }, {\n          id: 'amount_other_goal',\n          title: 'Amount Used In Other Goals',\n          value: data['amount_other_goal']\n        }, {\n          id: 'taxes',\n          title: 'Taxes',\n          value: data['taxes']\n        }]\n      };\n      return formData;\n    }\n  }]);\n  function AssetsToGoalSubForm(props) {\n    var _this;\n    _classCallCheck(this, AssetsToGoalSubForm);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AssetsToGoalSubForm).call(this, props));\n    _this.state = {\n      isCheck: false,\n      current_liquid_assets: [],\n      rows: [],\n      enableNext: true,\n      formData: {\n        amount_goal: '',\n        amount_other_goal: '',\n        taxes: ''\n      },\n      size: 'large'\n    };\n    _this.goNextForm = _this.goNextForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateFormData = _this.updateFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormInputChange = _this.handleFormInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDatePickerChange = _this.handleDatePickerChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.formChange = _this.formChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(AssetsToGoalSubForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.goalsObject.AssetsToGoalSubForm && this.props.goalsObject.AssetsToGoalSubForm.hasOwnProperty('asset_to_assign_to_goal')) this.setState({\n        rows: this.props.goalsObject.AssetsToGoalSubForm.asset_to_assign_to_goal\n      });\n      this.updateFormData(this.props.subFormData);\n    }\n  }, {\n    key: \"updateFormData\",\n    value: function updateFormData(newFormData) {\n      var formData = this.state.formData;\n      if (newFormData.hasOwnProperty('fields')) {\n        for (var findex = 0; findex < newFormData.fields.length; findex++) {\n          if (newFormData.fields[findex]['id'] === 'assets_goal') {\n            formData['assets_goal'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] === 'amount_goal') {\n            formData['amount_goal'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] === 'amount_other_goal') {\n            formData['amount_other_goal'] = newFormData.fields[findex]['value'];\n          }\n          if (newFormData.fields[findex]['id'] === 'taxes') {\n            formData['taxes'] = newFormData.fields[findex]['value'];\n          }\n        }\n        var enableNext = false;\n        if (formData['committmentDate'] !== '' && formData['committmentAmount'] !== '') {\n          enableNext = true;\n        }\n        this.setState({\n          formData: formData,\n          enableNext: enableNext\n        });\n      }\n    }\n  }, {\n    key: \"handleFormInputChange\",\n    value: function handleFormInputChange(name, value) {\n      var formData = this.state.formData;\n      formData[name] = value;\n      var newState = {\n        formData: formData\n      };\n      this.setState(newState);\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      event.preventDefault();\n      var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n      this.handleFormInputChange(name, value);\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(name, value) {\n      this.handleFormInputChange(name, value);\n    }\n  }, {\n    key: \"handleDatePickerChange\",\n    value: function handleDatePickerChange(name, date, dateString) {\n      this.handleFormInputChange(name, dateString);\n    }\n  }, {\n    key: \"goNextForm\",\n    value: function goNextForm() {\n      var formData = AssetsToGoalSubForm.FnCreateFormData({\n        assets_goal: this.state.formData['assets_goal'],\n        value_goal_date: this.state.formData['value_goal_date'],\n        loan_goal_date: this.state.formData['loan_goal_date'],\n        amount_goal: this.state.formData['amount_goal'],\n        amount_other_goal: this.state.formData['amount_other_goal'],\n        taxes: this.state.formData['taxes']\n      });\n      this.props.cbUpdateSubForm(formID, formData);\n      this.props.cbGoSubForm('QuestionApplySavingSubForm');\n    }\n  }, {\n    key: \"goPreviousForm\",\n    value: function goPreviousForm() {\n      this.props.cbGoSubForm('QuestionFinancialAssitanceSubForm');\n    }\n  }, {\n    key: \"formChange\",\n    value: function formChange(rows) {\n      formData = rows;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var colsCurrentFormat = [{\n        title: 'Asset',\n        dataIndex: 'asset',\n        key: 'asset',\n        fields: [{\n          type: 'Input',\n          name: 'asset'\n        }]\n      }, {\n        title: 'Available Amount For This Goal',\n        dataIndex: 'available_amount_for_this_goal',\n        key: 'available_amount_for_this_goal',\n        fields: [{\n          type: 'Input',\n          name: 'available_amount_for_this_goal'\n        }]\n      }, {\n        title: 'Previous Goals Asset Used For',\n        dataIndex: 'previous_goal_asset_used_for',\n        key: 'previous_goal_asset_used_for',\n        fields: [{\n          type: 'Input',\n          name: 'previous_goal_asset_used_for'\n        }]\n      }, {\n        title: 'Previous Goals Date',\n        dataIndex: 'previous_goals_date',\n        key: 'previous_goals_date',\n        fields: [{\n          type: 'Input',\n          name: 'previous_goals_date'\n        }]\n      }, {\n        title: 'Previous Goals Amount',\n        dataIndex: 'previous_goals_amount',\n        key: 'previous_goals_amount',\n        fields: [{\n          type: 'Input',\n          name: 'previous_goals_amount'\n        }]\n      }, {\n        title: 'Value Before Previous Goal Distribution',\n        dataIndex: 'value_before_previous_goal_distribution',\n        key: 'value_before_previous_goal_distribution',\n        fields: [{\n          type: 'Input',\n          name: 'value_before_previous_goal_distribution'\n        }]\n      }, {\n        title: 'Amount Used For Previous Goal',\n        dataIndex: 'amount_used_for_previous_goal',\n        key: 'amount_used_for_previous_goal',\n        fields: [{\n          type: 'Input',\n          name: 'amount_used_for_previous_goal'\n        }]\n      }, {\n        title: 'Tax On Gains',\n        dataIndex: 'tax_on_gains',\n        key: 'tax_on_gains',\n        fields: [{\n          type: 'Input',\n          name: 'tax_on_gains'\n        }]\n      }, {\n        title: 'Unfunded Previous Goal Amount',\n        dataIndex: 'unfunded_previous_goal_amount',\n        key: 'unfunded_previous_goal_amount',\n        fields: [{\n          type: 'Input',\n          name: 'unfunded_previous_goal_amount'\n        }]\n      }];\n      var colsAssetToAssignFormat = [{\n        title: 'Priority',\n        dataIndex: 'priority',\n        key: 'priority',\n        fields: [{\n          type: 'Input',\n          name: 'priority'\n        }]\n      }, {\n        title: 'Assets',\n        dataIndex: 'assets',\n        key: 'assets',\n        fields: [{\n          type: 'Input',\n          name: 'assets'\n        }]\n      }, {\n        title: 'Value of Asset at Goal Date',\n        dataIndex: 'value_of_asset_at_goal_date',\n        key: 'value_of_asset_at_goal_date',\n        fields: [{\n          type: 'DatePicker',\n          name: 'value_of_asset_at_goal_date'\n        }]\n      }, {\n        title: 'Loan Value at Goal Date',\n        dataIndex: 'loan_value_at_goal_date',\n        key: 'loan_value_at_goal_date',\n        fields: [{\n          type: 'DatePicker',\n          name: 'loan_value_at_goal_date'\n        }]\n      }, {\n        title: 'Amount to Use for this Goal',\n        dataIndex: 'amount_to_use_for_this_goal',\n        key: 'amount_to_use_for_this_goal',\n        fields: [{\n          type: 'Currency',\n          name: 'amount_to_use_for_this_goal'\n        }]\n      }, {\n        title: 'Amount Used in Other Goals',\n        dataIndex: 'amount_used_in_other_goals',\n        key: 'amount_used_in_other_goals',\n        fields: [{\n          type: 'Currency',\n          name: 'amount_used_in_other_goals'\n        }]\n      }, {\n        title: 'Taxes',\n        dataIndex: 'taxes',\n        key: 'taxes',\n        fields: [{\n          type: 'Input',\n          name: 'taxes'\n        }]\n      }, {\n        title: 'Net After Tax Applied to Goal',\n        dataIndex: 'net_after_tax_applied_to_goal',\n        key: 'net_after_tax_applied_to_goal',\n        fields: [{\n          type: 'Currency',\n          name: 'net_after_tax_applied_to_goal'\n        }]\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 7\n        }\n      }, !this.state.isCheck ? /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }\n      }, this.props.currentFormTitle === 'Start a Business' ? /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }\n      }, \"Would you like to assign an asset to this goal ?\") : /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 17\n        }\n      }, \"Are you getting Financial Assistance From Friend and Family ?\")), /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        className: \"d-flex align-items-center justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"pl-4 pr-4 mr-5\",\n        type: \"primary\",\n        size: 'large',\n        onClick: function onClick() {\n          return _this2.setState({\n            isCheck: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }\n      }, \"Yes\")), /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"pl-4 pr-4\",\n        type: \"primary\",\n        size: 'large',\n        onClick: function onClick() {\n          _this2.props.dynamicFormsMoveNext('AssetsToGoalSubForm');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }\n      }, \"No\"))) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }\n      }, \"Assets to Assign to Goal\"), /*#__PURE__*/React.createElement(SubFormTable, {\n        title: \"Current Liquid Assets in Plan\",\n        rows: this.state.current_liquid_assets,\n        colsFormat: colsCurrentFormat,\n        addNewButton: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SubFormTable, {\n        title: \"Asset to Assign to Goal\",\n        rows: this.state.rows,\n        colsFormat: colsAssetToAssignFormat,\n        addNewButton: true,\n        cbFormChange: function cbFormChange(rows) {\n          return _this2.props.handleFormInputChange(formID, 'asset_to_assign_to_goal', rows);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-between\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: 'large',\n        onClick: function onClick() {\n          return _this2.props.dynamicFormsMovePrevious('AssetsToGoalSubForm');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 19\n        }\n      }), \"Previous\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-4 d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        size: 'large',\n        onClick: function onClick() {\n          return _this2.props.dynamicFormsMoveNext('AssetsToGoalSubForm');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }\n      }, \"Next\", /*#__PURE__*/React.createElement(Icon, {\n        type: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 19\n        }\n      }))))));\n    }\n  }]);\n  return AssetsToGoalSubForm;\n}(Component);\nexport default connect()(AssetsToGoalSubForm);","map":{"version":3,"names":["React","Component","connect","Form","Icon","Select","Row","Col","Button","Currency","ASSETS","SubFormTable","Option","formData","formID","AssetsToGoalSubForm","data","title","fields","id","value","props","state","isCheck","current_liquid_assets","rows","enableNext","amount_goal","amount_other_goal","taxes","size","goNextForm","bind","updateFormData","handleFormInputChange","handleInputChange","handleDatePickerChange","handleSelectChange","formChange","goalsObject","hasOwnProperty","setState","asset_to_assign_to_goal","subFormData","newFormData","findex","length","name","newState","event","preventDefault","target","date","dateString","FnCreateFormData","assets_goal","value_goal_date","loan_goal_date","cbUpdateSubForm","cbGoSubForm","colsCurrentFormat","dataIndex","key","type","colsAssetToAssignFormat","currentFormTitle","dynamicFormsMoveNext","dynamicFormsMovePrevious"],"sources":["/home/albatross/gitCode/shared/src/pages/goals/subforms/AssetsToGoalSubForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Icon, Select, Row, Col, Button } from 'antd';\nimport Currency from '../../../components/form/Currency';\nimport { ASSETS } from 'constants/types';\nimport SubFormTable from '../../../components/SubFormTable';\n\nconst { Option } = Select;\n\nvar formData = [];\nconst formID = 'AssetsToGoalSubForm';\nclass AssetsToGoalSubForm extends Component {\n  static FnCreateFormData(data) {\n    let formData = {\n      title: 'Assistance Received Details (Financial Gift)',\n      fields: [\n        {\n          id: 'assets_goal',\n          title: 'Assets to Assign to Goal',\n          value: data['assets_goal'],\n        },\n        {\n          id: 'amount_goal',\n          title: 'Amount to Use for this Goal',\n          value: data['amount_goal'],\n        },\n        {\n          id: 'amount_other_goal',\n          title: 'Amount Used In Other Goals',\n          value: data['amount_other_goal'],\n        },\n        {\n          id: 'taxes',\n          title: 'Taxes',\n          value: data['taxes'],\n        },\n      ],\n    };\n\n    return formData;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCheck: false,\n      current_liquid_assets: [],\n      rows: [],\n      enableNext: true,\n      formData: {\n        amount_goal: '',\n        amount_other_goal: '',\n        taxes: '',\n      },\n      size: 'large',\n    };\n\n    this.goNextForm = this.goNextForm.bind(this);\n    this.updateFormData = this.updateFormData.bind(this);\n\n    this.handleFormInputChange = this.handleFormInputChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n\n    this.formChange = this.formChange.bind(this);\n  }\n\n  componentDidMount() {\n    if (\n      this.props.goalsObject.AssetsToGoalSubForm &&\n      this.props.goalsObject.AssetsToGoalSubForm.hasOwnProperty(\n        'asset_to_assign_to_goal'\n      )\n    )\n      this.setState({\n        rows: this.props.goalsObject.AssetsToGoalSubForm\n          .asset_to_assign_to_goal,\n      });\n\n    this.updateFormData(this.props.subFormData);\n  }\n\n  updateFormData(newFormData) {\n    let formData = this.state.formData;\n    if (newFormData.hasOwnProperty('fields')) {\n      for (var findex = 0; findex < newFormData.fields.length; findex++) {\n        if (newFormData.fields[findex]['id'] === 'assets_goal') {\n          formData['assets_goal'] = newFormData.fields[findex]['value'];\n        }\n        if (newFormData.fields[findex]['id'] === 'amount_goal') {\n          formData['amount_goal'] = newFormData.fields[findex]['value'];\n        }\n        if (newFormData.fields[findex]['id'] === 'amount_other_goal') {\n          formData['amount_other_goal'] = newFormData.fields[findex]['value'];\n        }\n        if (newFormData.fields[findex]['id'] === 'taxes') {\n          formData['taxes'] = newFormData.fields[findex]['value'];\n        }\n      }\n\n      let enableNext = false;\n      if (\n        formData['committmentDate'] !== '' &&\n        formData['committmentAmount'] !== ''\n      ) {\n        enableNext = true;\n      }\n\n      this.setState({\n        formData: formData,\n        enableNext: enableNext,\n      });\n    }\n  }\n\n  handleFormInputChange(name, value) {\n    let formData = this.state.formData;\n    formData[name] = value;\n\n    let newState = {\n      formData: formData,\n    };\n    this.setState(newState);\n  }\n\n  handleInputChange(event) {\n    event.preventDefault();\n    const { name, value } = event.target;\n    this.handleFormInputChange(name, value);\n  }\n\n  handleSelectChange(name, value) {\n    this.handleFormInputChange(name, value);\n  }\n\n  handleDatePickerChange(name, date, dateString) {\n    this.handleFormInputChange(name, dateString);\n  }\n\n  goNextForm() {\n    let formData = AssetsToGoalSubForm.FnCreateFormData({\n      assets_goal: this.state.formData['assets_goal'],\n      value_goal_date: this.state.formData['value_goal_date'],\n      loan_goal_date: this.state.formData['loan_goal_date'],\n      amount_goal: this.state.formData['amount_goal'],\n      amount_other_goal: this.state.formData['amount_other_goal'],\n      taxes: this.state.formData['taxes'],\n    });\n\n    this.props.cbUpdateSubForm(formID, formData);\n\n    this.props.cbGoSubForm('QuestionApplySavingSubForm');\n  }\n\n  goPreviousForm() {\n    this.props.cbGoSubForm('QuestionFinancialAssitanceSubForm');\n  }\n\n  formChange(rows) {\n    formData = rows;\n  }\n\n  render() {\n    const colsCurrentFormat = [\n      {\n        title: 'Asset',\n        dataIndex: 'asset',\n        key: 'asset',\n        fields: [\n          {\n            type: 'Input',\n            name: 'asset',\n          },\n        ],\n      },\n      {\n        title: 'Available Amount For This Goal',\n        dataIndex: 'available_amount_for_this_goal',\n        key: 'available_amount_for_this_goal',\n        fields: [\n          {\n            type: 'Input',\n            name: 'available_amount_for_this_goal',\n          },\n        ],\n      },\n      {\n        title: 'Previous Goals Asset Used For',\n        dataIndex: 'previous_goal_asset_used_for',\n        key: 'previous_goal_asset_used_for',\n        fields: [\n          {\n            type: 'Input',\n            name: 'previous_goal_asset_used_for',\n          },\n        ],\n      },\n      {\n        title: 'Previous Goals Date',\n        dataIndex: 'previous_goals_date',\n        key: 'previous_goals_date',\n        fields: [\n          {\n            type: 'Input',\n            name: 'previous_goals_date',\n          },\n        ],\n      },\n\n      {\n        title: 'Previous Goals Amount',\n        dataIndex: 'previous_goals_amount',\n        key: 'previous_goals_amount',\n        fields: [\n          {\n            type: 'Input',\n            name: 'previous_goals_amount',\n          },\n        ],\n      },\n\n      {\n        title: 'Value Before Previous Goal Distribution',\n        dataIndex: 'value_before_previous_goal_distribution',\n        key: 'value_before_previous_goal_distribution',\n        fields: [\n          {\n            type: 'Input',\n            name: 'value_before_previous_goal_distribution',\n          },\n        ],\n      },\n      {\n        title: 'Amount Used For Previous Goal',\n        dataIndex: 'amount_used_for_previous_goal',\n        key: 'amount_used_for_previous_goal',\n        fields: [\n          {\n            type: 'Input',\n            name: 'amount_used_for_previous_goal',\n          },\n        ],\n      },\n      {\n        title: 'Tax On Gains',\n        dataIndex: 'tax_on_gains',\n        key: 'tax_on_gains',\n        fields: [\n          {\n            type: 'Input',\n            name: 'tax_on_gains',\n          },\n        ],\n      },\n      {\n        title: 'Unfunded Previous Goal Amount',\n        dataIndex: 'unfunded_previous_goal_amount',\n        key: 'unfunded_previous_goal_amount',\n        fields: [\n          {\n            type: 'Input',\n            name: 'unfunded_previous_goal_amount',\n          },\n        ],\n      },\n    ];\n\n    const colsAssetToAssignFormat = [\n      {\n        title: 'Priority',\n        dataIndex: 'priority',\n        key: 'priority',\n        fields: [\n          {\n            type: 'Input',\n            name: 'priority',\n          },\n        ],\n      },\n      {\n        title: 'Assets',\n        dataIndex: 'assets',\n        key: 'assets',\n        fields: [\n          {\n            type: 'Input',\n            name: 'assets',\n          },\n        ],\n      },\n      {\n        title: 'Value of Asset at Goal Date',\n        dataIndex: 'value_of_asset_at_goal_date',\n        key: 'value_of_asset_at_goal_date',\n        fields: [\n          {\n            type: 'DatePicker',\n            name: 'value_of_asset_at_goal_date',\n          },\n        ],\n      },\n      {\n        title: 'Loan Value at Goal Date',\n        dataIndex: 'loan_value_at_goal_date',\n        key: 'loan_value_at_goal_date',\n        fields: [\n          {\n            type: 'DatePicker',\n            name: 'loan_value_at_goal_date',\n          },\n        ],\n      },\n      {\n        title: 'Amount to Use for this Goal',\n        dataIndex: 'amount_to_use_for_this_goal',\n        key: 'amount_to_use_for_this_goal',\n        fields: [\n          {\n            type: 'Currency',\n            name: 'amount_to_use_for_this_goal',\n          },\n        ],\n      },\n      {\n        title: 'Amount Used in Other Goals',\n        dataIndex: 'amount_used_in_other_goals',\n        key: 'amount_used_in_other_goals',\n        fields: [\n          {\n            type: 'Currency',\n            name: 'amount_used_in_other_goals',\n          },\n        ],\n      },\n      {\n        title: 'Taxes',\n        dataIndex: 'taxes',\n        key: 'taxes',\n        fields: [\n          {\n            type: 'Input',\n            name: 'taxes',\n          },\n        ],\n      },\n      {\n        title: 'Net After Tax Applied to Goal',\n        dataIndex: 'net_after_tax_applied_to_goal',\n        key: 'net_after_tax_applied_to_goal',\n        fields: [\n          {\n            type: 'Currency',\n            name: 'net_after_tax_applied_to_goal',\n          },\n        ],\n      },\n    ];\n\n    return (\n      <React.Fragment>\n        {!this.state.isCheck ? (\n          <Row gutter={16}>\n            <Col span={24}>\n              {this.props.currentFormTitle === 'Start a Business' ? (\n                <h2 className='text-center font-weight-bold mb-4'>\n                  Would you like to assign an asset to this goal ?\n                </h2>\n              ) : (\n                <h2 className='text-center font-weight-bold mb-4'>\n                  Are you getting Financial Assistance From Friend and Family ?\n                </h2>\n              )}\n            </Col>\n            <Col\n              span={12}\n              className='d-flex align-items-center justify-content-end'\n            >\n              <Button\n                className='pl-4 pr-4 mr-5'\n                type='primary'\n                size={'large'}\n                onClick={() => this.setState({ isCheck: true })}\n              >\n                Yes\n              </Button>\n            </Col>\n            <Col span={12}>\n              <Button\n                className='pl-4 pr-4'\n                type='primary'\n                size={'large'}\n                onClick={() => {\n                  this.props.dynamicFormsMoveNext('AssetsToGoalSubForm');\n                }}\n              >\n                No\n              </Button>\n            </Col>\n          </Row>\n        ) : (\n          <React.Fragment>\n            <h2 className='text-center font-weight-bold mb-4'>\n              Assets to Assign to Goal\n            </h2>\n\n            <SubFormTable\n              title='Current Liquid Assets in Plan'\n              rows={this.state.current_liquid_assets}\n              colsFormat={colsCurrentFormat}\n              addNewButton={false}\n            ></SubFormTable>\n\n            <SubFormTable\n              title='Asset to Assign to Goal'\n              rows={this.state.rows}\n              colsFormat={colsAssetToAssignFormat}\n              addNewButton={true}\n              cbFormChange={(rows) =>\n                this.props.handleFormInputChange(\n                  formID,\n                  'asset_to_assign_to_goal',\n                  rows\n                )\n              }\n            ></SubFormTable>\n\n            <div className='row justify-content-between'>\n              <div className='col-8'>\n                <Button\n                  type='primary'\n                  size={'large'}\n                  onClick={() =>\n                    this.props.dynamicFormsMovePrevious('AssetsToGoalSubForm')\n                  }\n                >\n                  <Icon type='left' />\n                  Previous\n                </Button>\n              </div>\n              <div className='col-4 d-flex justify-content-end'>\n                <Button\n                  type='primary'\n                  size={'large'}\n                  onClick={() =>\n                    this.props.dynamicFormsMoveNext('AssetsToGoalSubForm')\n                  }\n                >\n                  Next\n                  <Icon type='right' />\n                </Button>\n              </div>\n            </div>\n          </React.Fragment>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect()(AssetsToGoalSubForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}