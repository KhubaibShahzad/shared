{"ast":null,"code":"import _classCallCheck from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/albatross/gitCode/shared/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/albatross/gitCode/shared/src/pages/modules/income/subforms/IncomeTypeSubForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { Table, Button, Card, Row, Col } from 'reactstrap';\n\nimport { Row, Col } from 'antd';\nimport { INCOME_TYPES, INCOME_TYPES_NON, INCOME_TYPES_GROUP } from 'constants/types';\nimport Trust from '../../../../assets/images/latest/Trust.png';\nimport law from '../../../../assets/images/latest/law.png';\nimport Distributions from '../../../../assets/images/latest/Distributions.png';\nimport stock from '../../../../assets/images/stock.png';\nvar formID = \"IncomeTypeSubForm\";\nvar IncomeTypeSubForm = /*#__PURE__*/function (_Component) {\n  _inherits(IncomeTypeSubForm, _Component);\n  _createClass(IncomeTypeSubForm, null, [{\n    key: \"FnCreateFormData\",\n    value: function FnCreateFormData(data) {\n      var formData = {\n        title: 'Select the Type of Income',\n        fields: [{\n          id: 'incomeType',\n          title: '',\n          value: data['value']\n        }]\n      };\n      return formData;\n    }\n  }]);\n  function IncomeTypeSubForm(props) {\n    var _this;\n    _classCallCheck(this, IncomeTypeSubForm);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IncomeTypeSubForm).call(this, props));\n    _this.state = {\n      formData: {\n        incomeType: ''\n      }\n    };\n    _this.handleFormInputChange = _this.handleFormInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateFormData = _this.updateFormData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  _createClass(IncomeTypeSubForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateFormData(this.props.subFormData);\n    }\n  }, {\n    key: \"updateFormData\",\n    value: function updateFormData(newFormData) {\n      console.log('updateformdata:', newFormData);\n      if (newFormData.hasOwnProperty('fields')) {\n        this.setState({\n          formData: {\n            incomeType: newFormData['fields'][0]['value']\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleFormInputChange\",\n    value: function handleFormInputChange(name, value) {\n      this.setState({\n        formData: {\n          incomeType: value\n        }\n      });\n      var formData = IncomeTypeSubForm.FnCreateFormData({\n        value: value\n      });\n      this.props.cbUpdateSubForm(formID, formData);\n      this.props.cbGoSubForm('IncomeDetailsSubForm');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info-form-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, \"Select the Type of Income\"))), /*#__PURE__*/React.createElement(Row, {\n        gutter: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, \"Non-Investment Income\"), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'button-wrap-cust',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: law,\n        height: \"80px\",\n        width: \"80px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 49\n        }\n      })))), [\n      // {\n      //     name: \"Alimony\",\n      //     type: 'INCOME_TYPES_GROUP_TYPICAL',\n      // },\n      {\n        name: \"Distribution from Asset\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Insurance Payout\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Settlement (Structured or Lump)\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }].map(function (incomeType, index) {\n        var className = 'button-wrap';\n        if (_this2.state.formData['incomeType'] == incomeType.name) {\n          className = className + ' selected';\n        }\n\n        // if (incomeType.type == INCOME_TYPES_GROUP.TYPICAL) {\n        //     className = className + ' bk--yellow';\n        // }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: className,\n          onClick: function onClick() {\n            return _this2.handleFormInputChange('incomeType', incomeType.name);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 49\n          }\n        }, incomeType.name);\n      }))), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'button-wrap-cust',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Trust,\n        height: \"80px\",\n        width: \"80px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 49\n        }\n      })))), [{\n        name: \"Annuity\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Disability Income Payments\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Personal Loans\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      },\n      // {\n      //     name: \"Real Estate Rental\",\n      //     type: 'INCOME_TYPES_GROUP_TYPICAL',\n      // },\n      {\n        name: \"Reverse Motgage\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Royalties\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Social Security\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }].map(function (incomeType, index) {\n        var className = 'button-wrap';\n        if (_this2.state.formData['incomeType'] == incomeType.name) {\n          className = className + ' selected';\n        }\n\n        // if (incomeType.type == INCOME_TYPES_GROUP.TYPICAL) {\n        //     className = className + ' bk--yellow';\n        // }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: className,\n          onClick: function onClick() {\n            return _this2.handleFormInputChange('incomeType', incomeType.name);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 49\n          }\n        }, incomeType.name);\n      }))), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'button-wrap-cust',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Distributions,\n        height: \"80px\",\n        width: \"80px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 49\n        }\n      })))), [{\n        name: \"Bonus from Work\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Business Proceeds - Ordinary\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Earned Income From Work\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Military Benefits\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Pension\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Sales Commision from Work\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }, {\n        name: \"Unemployment\",\n        type: 'INCOME_TYPES_GROUP_TYPICAL'\n      }].map(function (incomeType, index) {\n        var className = 'button-wrap';\n        if (_this2.state.formData['incomeType'] == incomeType.name) {\n          className = className + ' selected';\n        }\n\n        // if (incomeType.type == INCOME_TYPES_GROUP.TYPICAL) {\n        //     className = className + ' bk--yellow';\n        // }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: className,\n          onClick: function onClick() {\n            return _this2.handleFormInputChange('incomeType', incomeType.name);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 49\n          }\n        }, incomeType.name);\n      })))), /*#__PURE__*/React.createElement(Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center font-weight-bold mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }\n      }, \"Investment Income\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: 'button-wrap-cust',\n        style: {\n          marginLeft: \"25%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          flexDirection: 'column'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: stock,\n        height: \"80px\",\n        width: \"80px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 41\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }\n      }, INCOME_TYPES.map(function (incomeType, index) {\n        var className = 'button-wrap';\n        if (_this2.state.formData['incomeType'] == incomeType.name) {\n          className = className + ' selected';\n        }\n\n        // if (incomeType.type == INCOME_TYPES_GROUP.OTHER) {\n        //     className = className + ' bk--yellow';\n        // }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: className,\n          onClick: function onClick() {\n            return _this2.handleFormInputChange('incomeType', incomeType.name);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 45\n          }\n        }, incomeType.name);\n      }))))));\n    }\n  }]);\n  return IncomeTypeSubForm;\n}(Component);\nexport default connect()(IncomeTypeSubForm);","map":{"version":3,"names":["React","Component","connect","Row","Col","INCOME_TYPES","INCOME_TYPES_NON","INCOME_TYPES_GROUP","Trust","law","Distributions","stock","formID","IncomeTypeSubForm","data","formData","title","fields","id","value","props","state","incomeType","handleFormInputChange","bind","updateFormData","subFormData","newFormData","console","log","hasOwnProperty","setState","name","FnCreateFormData","cbUpdateSubForm","cbGoSubForm","flexDirection","type","map","index","className","marginLeft"],"sources":["/home/albatross/gitCode/shared/src/pages/modules/income/subforms/IncomeTypeSubForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import { Table, Button, Card, Row, Col } from 'reactstrap';\n\nimport { Row, Col } from 'antd';\n\nimport { INCOME_TYPES, INCOME_TYPES_NON, INCOME_TYPES_GROUP } from 'constants/types';\nimport Trust from '../../../../assets/images/latest/Trust.png'\nimport law from '../../../../assets/images/latest/law.png'\nimport Distributions from '../../../../assets/images/latest/Distributions.png'\nimport stock from '../../../../assets/images/stock.png'\n\nconst formID = \"IncomeTypeSubForm\";\nclass IncomeTypeSubForm extends Component {\n\n    static FnCreateFormData(data) {\n        let formData = {\n            title: 'Select the Type of Income',\n            fields: [\n                {\n                    id: 'incomeType',\n                    title: '',\n                    value: data['value']\n                }\n            ]\n        }\n\n        return formData\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            formData: {\n                incomeType: ''\n            }\n        }\n        this.handleFormInputChange = this.handleFormInputChange.bind(this);\n        this.updateFormData = this.updateFormData.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateFormData(this.props.subFormData);\n    }\n\n    updateFormData(newFormData) {\n        console.log('updateformdata:', newFormData);\n        if (newFormData.hasOwnProperty('fields')) {\n            this.setState({\n                formData: {\n                    incomeType: newFormData['fields'][0]['value']\n                }\n            })\n        }\n    }\n\n    handleFormInputChange(name, value) {\n        this.setState({\n            formData: {\n                incomeType: value\n            }\n        })\n\n        let formData = IncomeTypeSubForm.FnCreateFormData({\n            value: value\n        })\n\n        this.props.cbUpdateSubForm(formID, formData);\n\n        this.props.cbGoSubForm('IncomeDetailsSubForm');\n    }\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div className=\"info-form-block\">\n                    <Row gutter={16}>\n                        <Col span={24}>\n                            <h2 className=\"text-center font-weight-bold mb-4\">Select the Type of Income</h2>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col span={12}>\n                            <h2 className=\"text-center font-weight-bold mb-4\">Non-Investment Income</h2>\n                            <Col span={8}>\n                                <div className=\"buttons-container\">\n                                    <div className={'button-wrap-cust'}>\n                                        <div style={{ flexDirection: 'column' }}>\n                                            <div className='col-12 mt-2'>\n                                                <img src={law} height='80px' width='80px' />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {\n                                        [\n                                            // {\n                                            //     name: \"Alimony\",\n                                            //     type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            // },\n                                            {\n                                                name: \"Distribution from Asset\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Insurance Payout\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Settlement (Structured or Lump)\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                        ].map((incomeType, index) => {\n\n                                            let className = 'button-wrap';\n                                            if (this.state.formData['incomeType'] == incomeType.name) {\n                                                className = className + ' selected';\n                                            }\n\n                                            // if (incomeType.type == INCOME_TYPES_GROUP.TYPICAL) {\n                                            //     className = className + ' bk--yellow';\n                                            // }\n\n                                            return (\n                                                <div key={index} className={className} onClick={() => this.handleFormInputChange('incomeType', incomeType.name)}>\n                                                    {incomeType.name}\n                                                </div>\n\n                                            )\n                                        })\n                                    }\n                                </div>\n                            </Col>\n\n                            <Col span={8}>\n                                <div className=\"buttons-container\">\n                                    <div className={'button-wrap-cust'}>\n                                        <div style={{ flexDirection: 'column' }}>\n                                            <div className='col-12 mt-2'>\n                                                <img src={Trust} height='80px' width='80px' />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {\n                                        [\n                                            {\n                                                name: \"Annuity\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Disability Income Payments\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Personal Loans\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            // {\n                                            //     name: \"Real Estate Rental\",\n                                            //     type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            // },\n                                            {\n                                                name: \"Reverse Motgage\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Royalties\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Social Security\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                        ].map((incomeType, index) => {\n                                            let className = 'button-wrap';\n                                            if (this.state.formData['incomeType'] == incomeType.name) {\n                                                className = className + ' selected';\n                                            }\n\n                                            // if (incomeType.type == INCOME_TYPES_GROUP.TYPICAL) {\n                                            //     className = className + ' bk--yellow';\n                                            // }\n\n                                            return (\n                                                <div key={index} className={className} onClick={() => this.handleFormInputChange('incomeType', incomeType.name)}>\n                                                    {incomeType.name}\n                                                </div>\n\n                                            )\n                                        })\n                                    }\n                                </div>\n                            </Col>\n                            <Col span={8}>\n                                <div className=\"buttons-container\">\n                                    <div className={'button-wrap-cust'}>\n                                        <div style={{ flexDirection: 'column' }}>\n                                            <div className='col-12 mt-2'>\n                                                <img src={Distributions} height='80px' width='80px' />\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {\n                                        [\n                                            {\n                                                name: \"Bonus from Work\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Business Proceeds - Ordinary\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Earned Income From Work\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Military Benefits\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Pension\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Sales Commision from Work\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                            {\n                                                name: \"Unemployment\",\n                                                type: 'INCOME_TYPES_GROUP_TYPICAL',\n                                            },\n                                        ].map((incomeType, index) => {\n                                            let className = 'button-wrap';\n                                            if (this.state.formData['incomeType'] == incomeType.name) {\n                                                className = className + ' selected';\n                                            }\n\n                                            // if (incomeType.type == INCOME_TYPES_GROUP.TYPICAL) {\n                                            //     className = className + ' bk--yellow';\n                                            // }\n\n                                            return (\n                                                <div key={index} className={className} onClick={() => this.handleFormInputChange('incomeType', incomeType.name)}>\n                                                    {incomeType.name}\n                                                </div>\n\n                                            )\n                                        })\n                                    }\n                                </div>\n                            </Col>\n                            {/* <div className=\"buttons-container\">\n                            {\n                                INCOME_TYPES_NON.map((incomeType, index) => {\n                                    let className = 'button-wrap';\n                                    if(this.state.formData['incomeType'] == incomeType.name){\n                                        className = className + ' selected';\n                                    }\n                                    \n                                    if(incomeType.type == INCOME_TYPES_GROUP.TYPICAL){\n                                        className = className + ' bk--yellow';\n                                    }\n\n                                    return (\n                                        <div key={index} className={className} onClick={() => this.handleFormInputChange('incomeType', incomeType.name)}>\n                                            {incomeType.name}\n                                        </div>                                   \n                                        \n                                    )\n                                })\n                            }\n                            </div> */}\n                        </Col>\n                        <Col span={8}>\n                            <h2 className=\"text-center font-weight-bold mb-4\">Investment Income</h2>\n\n                            <div className={'button-wrap-cust'} style={{ marginLeft: \"25%\" }}>\n                                <div style={{ flexDirection: 'column' }}>\n                                    <div className='col-12 mt-2'>\n                                        <img src={stock} height='80px' width='80px' />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"buttons-container\">\n                                {\n                                    INCOME_TYPES.map((incomeType, index) => {\n                                        let className = 'button-wrap';\n                                        if (this.state.formData['incomeType'] == incomeType.name) {\n                                            className = className + ' selected';\n                                        }\n\n                                        // if (incomeType.type == INCOME_TYPES_GROUP.OTHER) {\n                                        //     className = className + ' bk--yellow';\n                                        // }\n\n                                        return (\n                                            <div key={index} className={className} onClick={() => this.handleFormInputChange('incomeType', incomeType.name)}>\n                                                {incomeType.name}\n                                            </div>\n\n                                        )\n                                    })\n                                }\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default connect()(IncomeTypeSubForm);"],"mappings":"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"},"metadata":{},"sourceType":"module"}