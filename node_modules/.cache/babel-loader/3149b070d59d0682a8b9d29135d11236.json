{"ast":null,"code":"var _marked = /*#__PURE__*/_regeneratorRuntime().mark(watchLoginUser),\n  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(watchLogoutUser),\n  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(watchRegisterUser),\n  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(watchForgetPassword),\n  _marked5 = /*#__PURE__*/_regeneratorRuntime().mark(authSaga);\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport { Cookies } from \"react-cookie\";\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from '../../constants/actionTypes';\nimport { loginUserSuccess, loginUserFailed, registerUserSuccess, registerUserFailed, forgetPasswordSuccess, forgetPasswordFailed } from './actions';\nimport Config from 'Config';\nimport { QL_SIGN_IN } from 'constants/queries';\n/**\n * Fetch data from given url\n * @param {*} url \n * @param {*} options \n */\nvar fetchJSON = function fetchJSON(url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return fetch(url, options).then(function (response) {\n    if (!response.status === 200) {\n      throw response.json();\n    }\n    return response.json();\n  }).then(function (json) {\n    return json;\n  }).catch(function (error) {\n    throw error;\n  });\n};\nvar callLogin = function callLogin() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return fetch(Config.api_server, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: 'mutation signin($data: SigninAttributes!){ signin(attributes: $data){ account { id role username } token } }',\n      operationName: 'signin',\n      variables: {\n        data: {\n          username: options.username,\n          password: options.password\n        }\n      }\n    })\n  }).then(function (response) {\n    if (!response.status === 200) {\n      throw response.json();\n    }\n    return response.json();\n  }).then(function (json) {\n    return json;\n  }).catch(function (error) {\n    throw error;\n  });\n};\nvar callRegister = function callRegister() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return fetch(Config.api_server, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query: 'mutation signup($data: SignupAttributes!){ signup(attributes: $data){ account { id role username } } }',\n      operationName: 'signup',\n      variables: {\n        data: {\n          username: options.username,\n          password: options.password,\n          role: options.role\n        }\n      }\n    })\n  }).then(function (response) {\n    if (!response.status === 200) {\n      throw response.json();\n    }\n    return response.json();\n  }).then(function (json) {\n    return json;\n  }).catch(function (error) {\n    throw error;\n  });\n};\n\n/**\n * Sets the session\n * @param {*} user \n */\nvar setSession = function setSession(user) {\n  var cookies = new Cookies();\n  if (user) cookies.set(\"user\", JSON.stringify(user), {\n    path: \"/\"\n  });else cookies.remove(\"user\");\n};\n/**\n * Login the user\n * @param {*} payload - username and password \n */\nfunction login(_ref) {\n  var _ref$payload = _ref.payload,\n    username = _ref$payload.username,\n    password = _ref$payload.password;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var options, response, user, message;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          options = {\n            username: username,\n            password: password\n          };\n          _context.prev = 1;\n          _context.next = 4;\n          return call(callLogin, options);\n        case 4:\n          response = _context.sent;\n          console.log('response:', response);\n          if (!(response['data']['signin'] != null)) {\n            _context.next = 13;\n            break;\n          }\n          user = {\n            id: response['data']['signin']['account']['id'],\n            role: response['data']['signin']['account']['role'],\n            username: response['data']['signin']['account']['username'],\n            token: response['data']['signin']['token']\n          };\n          setSession(user);\n          _context.next = 11;\n          return put(loginUserSuccess(user));\n        case 11:\n          _context.next = 15;\n          break;\n        case 13:\n          _context.next = 15;\n          return put(loginUserFailed(response['errors'][0]['message']));\n        case 15:\n          _context.next = 30;\n          break;\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](1);\n          _context.t1 = _context.t0.status;\n          _context.next = _context.t1 === 500 ? 22 : _context.t1 === 401 ? 24 : 26;\n          break;\n        case 22:\n          message = 'Internal Server Error';\n          return _context.abrupt(\"break\", 27);\n        case 24:\n          message = 'Invalid credentials';\n          return _context.abrupt(\"break\", 27);\n        case 26:\n          message = _context.t0;\n        case 27:\n          _context.next = 29;\n          return put(loginUserFailed(message));\n        case 29:\n          setSession(null);\n        case 30:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[1, 17]]);\n  })();\n}\n\n/**\n * Logout the user\n * @param {*} param0 \n */\nfunction logout(_ref2) {\n  var history = _ref2.payload.history;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          setSession(null);\n          _context2.next = 4;\n          return call(function () {\n            history.push(\"/login\");\n          });\n        case 4:\n          _context2.next = 8;\n          break;\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n        case 8:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 6]]);\n  })();\n}\n\n/**\n * Register the user\n */\nfunction register(_ref3) {\n  var _ref3$payload = _ref3.payload,\n    fullname = _ref3$payload.fullname,\n    email = _ref3$payload.email,\n    password = _ref3$payload.password,\n    role = _ref3$payload.role;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var options, response, user, message;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          options = {\n            fullname: fullname,\n            username: email,\n            password: password,\n            role: role\n          };\n          _context3.prev = 1;\n          _context3.next = 4;\n          return call(callRegister, options);\n        case 4:\n          response = _context3.sent;\n          console.log('response:', response);\n          user = {\n            id: response['data']['signup']['account']['id'],\n            role: response['data']['signup']['account']['role'],\n            username: response['data']['signup']['account']['username'],\n            token: ''\n          };\n          _context3.next = 9;\n          return put(registerUserSuccess(user));\n        case 9:\n          _context3.next = 23;\n          break;\n        case 11:\n          _context3.prev = 11;\n          _context3.t0 = _context3[\"catch\"](1);\n          _context3.t1 = _context3.t0.status;\n          _context3.next = _context3.t1 === 500 ? 16 : _context3.t1 === 401 ? 18 : 20;\n          break;\n        case 16:\n          message = 'Internal Server Error';\n          return _context3.abrupt(\"break\", 21);\n        case 18:\n          message = 'Invalid credentials';\n          return _context3.abrupt(\"break\", 21);\n        case 20:\n          message = _context3.t0;\n        case 21:\n          _context3.next = 23;\n          return put(registerUserFailed(message));\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 11]]);\n  })();\n}\n\n/**\n * forget password\n */\nfunction forgetPassword(_ref4) {\n  var username = _ref4.payload.username;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var options, response, message;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          options = {\n            body: JSON.stringify({\n              username: username\n            }),\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          };\n          _context4.prev = 1;\n          _context4.next = 4;\n          return call(fetchJSON, '/users/password-reset', options);\n        case 4:\n          response = _context4.sent;\n          _context4.next = 7;\n          return put(forgetPasswordSuccess(response.message));\n        case 7:\n          _context4.next = 21;\n          break;\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](1);\n          _context4.t1 = _context4.t0.status;\n          _context4.next = _context4.t1 === 500 ? 14 : _context4.t1 === 401 ? 16 : 18;\n          break;\n        case 14:\n          message = 'Internal Server Error';\n          return _context4.abrupt(\"break\", 19);\n        case 16:\n          message = 'Invalid credentials';\n          return _context4.abrupt(\"break\", 19);\n        case 18:\n          message = _context4.t0;\n        case 19:\n          _context4.next = 21;\n          return put(forgetPasswordFailed(message));\n        case 21:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[1, 9]]);\n  })();\n}\nexport function watchLoginUser() {\n  return _regeneratorRuntime().wrap(function watchLoginUser$(_context5) {\n    while (1) switch (_context5.prev = _context5.next) {\n      case 0:\n        _context5.next = 2;\n        return takeEvery(LOGIN_USER, login);\n      case 2:\n      case \"end\":\n        return _context5.stop();\n    }\n  }, _marked);\n}\nexport function watchLogoutUser() {\n  return _regeneratorRuntime().wrap(function watchLogoutUser$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        _context6.next = 2;\n        return takeEvery(LOGOUT_USER, logout);\n      case 2:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, _marked2);\n}\nexport function watchRegisterUser() {\n  return _regeneratorRuntime().wrap(function watchRegisterUser$(_context7) {\n    while (1) switch (_context7.prev = _context7.next) {\n      case 0:\n        _context7.next = 2;\n        return takeEvery(REGISTER_USER, register);\n      case 2:\n      case \"end\":\n        return _context7.stop();\n    }\n  }, _marked3);\n}\nexport function watchForgetPassword() {\n  return _regeneratorRuntime().wrap(function watchForgetPassword$(_context8) {\n    while (1) switch (_context8.prev = _context8.next) {\n      case 0:\n        _context8.next = 2;\n        return takeEvery(FORGET_PASSWORD, forgetPassword);\n      case 2:\n      case \"end\":\n        return _context8.stop();\n    }\n  }, _marked4);\n}\nfunction authSaga() {\n  return _regeneratorRuntime().wrap(function authSaga$(_context9) {\n    while (1) switch (_context9.prev = _context9.next) {\n      case 0:\n        _context9.next = 2;\n        return all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\n      case 2:\n      case \"end\":\n        return _context9.stop();\n    }\n  }, _marked5);\n}\nexport default authSaga;","map":{"version":3,"names":["watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","Cookies","all","call","fork","put","takeEvery","LOGIN_USER","LOGOUT_USER","REGISTER_USER","FORGET_PASSWORD","loginUserSuccess","loginUserFailed","registerUserSuccess","registerUserFailed","forgetPasswordSuccess","forgetPasswordFailed","Config","QL_SIGN_IN","fetchJSON","url","options","fetch","then","response","status","json","catch","error","callLogin","api_server","method","headers","body","JSON","stringify","query","operationName","variables","data","username","password","callRegister","role","setSession","user","cookies","set","path","remove","login","payload","console","log","id","token","message","logout","history","push","register","fullname","email","forgetPassword"],"sources":["/home/albatross/gitCode/shared/src/redux/auth/saga.js"],"sourcesContent":["// @flow\nimport { Cookies } from \"react-cookie\";\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\n\nimport {\n    LOGIN_USER,\n    LOGOUT_USER,\n    REGISTER_USER,\n    FORGET_PASSWORD\n} from '../../constants/actionTypes';\n\n\nimport {\n    loginUserSuccess,\n    loginUserFailed,\n    registerUserSuccess,\n    registerUserFailed,\n    forgetPasswordSuccess,\n    forgetPasswordFailed\n} from './actions';\n\nimport Config from 'Config';\nimport {\n    QL_SIGN_IN\n} from 'constants/queries';\n/**\n * Fetch data from given url\n * @param {*} url \n * @param {*} options \n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then(response => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then(json => {\n            return json;\n        })\n        .catch(error => { throw error });\n}\n\nconst callLogin = (options = {}) => {\n\n    return fetch(Config.api_server, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: 'mutation signin($data: SigninAttributes!){ signin(attributes: $data){ account { id role username } token } }',\n            operationName: 'signin',\n            variables: {\n                data: {\n                    username: options.username,\n                    password: options.password\n                }\n            }\n        })\n    }).then(response => {\n        if (!response.status === 200) {\n            throw response.json();\n        }\n        return response.json();\n    })\n    .then(json => {\n        return json;\n    })\n    .catch(error => { throw error });\n}\n\nconst callRegister = (options = {}) => {\n\n    return fetch(Config.api_server, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: 'mutation signup($data: SignupAttributes!){ signup(attributes: $data){ account { id role username } } }',\n            operationName: 'signup',\n            variables: {\n                data: {\n                    username: options.username,\n                    password: options.password,\n                    role: options.role\n                }\n            }\n        })\n    }).then(response => {\n        if (!response.status === 200) {\n            throw response.json();\n        }\n        return response.json();\n    })\n    .then(json => {\n        return json;\n    })\n    .catch(error => { throw error });\n}\n\n/**\n * Sets the session\n * @param {*} user \n */\nconst setSession = (user) => {\n    let cookies = new Cookies();\n    if (user)\n        cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\n    else\n        cookies.remove(\"user\");\n};\n/**\n * Login the user\n * @param {*} payload - username and password \n */\nfunction* login({ payload: { username, password } }) {\n    const options = {\n        username: username,\n        password: password\n    };\n\n    try {\n        //const response = yield call(fetchJSON, '/users/authenticate', options);\n        const response = yield call(callLogin, options);\n        console.log('response:', response);\n        if(response['data']['signin'] != null){\n            var user = {\n                id: response['data']['signin']['account']['id'],\n                role: response['data']['signin']['account']['role'],\n                username: response['data']['signin']['account']['username'],\n                token: response['data']['signin']['token']\n            }\n            setSession(user);\n            yield put(loginUserSuccess(user));\n        }\n        else{\n            yield put(loginUserFailed(response['errors'][0]['message']));\n        }\n        \n    } catch (error) {\n        let message;\n        switch (error.status) {\n            case 500: message = 'Internal Server Error'; break;\n            case 401: message = 'Invalid credentials'; break;\n            default: message = error;\n        }\n        yield put(loginUserFailed(message));\n        setSession(null);\n    }\n}\n\n\n/**\n * Logout the user\n * @param {*} param0 \n */\nfunction* logout({ payload: { history } }) {\n    try {\n        setSession(null);\n        yield call(() => {\n            history.push(\"/login\");\n        });\n    } catch (error) { }\n}\n\n/**\n * Register the user\n */\nfunction* register({ payload: { fullname, email, password, role } }) {\n    const options = {\n        fullname: fullname,\n        username: email,\n        password: password,\n        role: role\n    };\n\n    try {\n        const response = yield call(callRegister, options);\n        console.log('response:', response);\n        var user = {\n            id: response['data']['signup']['account']['id'],\n            role: response['data']['signup']['account']['role'],\n            username: response['data']['signup']['account']['username'],\n            token: ''\n        }\n\n        yield put(registerUserSuccess(user));\n    } catch (error) {\n        let message;\n        switch (error.status) {\n            case 500: message = 'Internal Server Error'; break;\n            case 401: message = 'Invalid credentials'; break;\n            default: message = error;\n        }\n        yield put(registerUserFailed(message));\n    }\n}\n\n/**\n * forget password\n */\nfunction* forgetPassword({ payload: { username } }) {\n    const options = {\n        body: JSON.stringify({ username }),\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' }\n    };\n\n    try {\n        const response = yield call(fetchJSON, '/users/password-reset', options);\n        yield put(forgetPasswordSuccess(response.message));\n    } catch (error) {\n        let message;\n        switch (error.status) {\n            case 500: message = 'Internal Server Error'; break;\n            case 401: message = 'Invalid credentials'; break;\n            default: message = error;\n        }\n        yield put(forgetPasswordFailed(message));\n    }\n}\n\n\nexport function* watchLoginUser():any {\n    yield takeEvery(LOGIN_USER, login);\n}\n\nexport function* watchLogoutUser():any {\n    yield takeEvery(LOGOUT_USER, logout);\n}\n\nexport function* watchRegisterUser():any {\n    yield takeEvery(REGISTER_USER, register);\n}\n\nexport function* watchForgetPassword():any {\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\n}\n\nfunction* authSaga():any {\n    yield all([\n        fork(watchLoginUser),\n        fork(watchLogoutUser),\n        fork(watchRegisterUser),\n        fork(watchForgetPassword),\n    ]);\n}\n\nexport default authSaga;"],"mappings":"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"},"metadata":{},"sourceType":"module"}